{"version":3,"sources":["webpack:///./node_modules/react-helmet/lib/Helmet.js","webpack:///./node_modules/react-burger-menu/lib/menuFactory.js","webpack:///./node_modules/gatsby-link/index.js","webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///./node_modules/react-media/esm/react-media.js","webpack:///./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/react-helmet/lib/HelmetConstants.js","webpack:///./node_modules/react-burger-menu/lib/snapsvgImporter.js","webpack:///./node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","webpack:///./node_modules/@babel/runtime/helpers/extends.js","webpack:///./node_modules/react-side-effect/lib/index.js","webpack:///./node_modules/exenv/index.js","webpack:///./node_modules/shallowequal/index.js","webpack:///./node_modules/deep-equal/index.js","webpack:///./node_modules/deep-equal/lib/keys.js","webpack:///./node_modules/deep-equal/lib/is_arguments.js","webpack:///./node_modules/react-helmet/lib/HelmetUtils.js","webpack:///./node_modules/json2mq/index.js","webpack:///./node_modules/string-convert/camel2hyphen.js","webpack:///./node_modules/react-burger-menu/lib/BurgerMenu.js","webpack:///./node_modules/react-burger-menu/lib/menus/slide.js","webpack:///./node_modules/react-burger-menu/lib/baseStyles.js","webpack:///./node_modules/react-burger-menu/lib/BurgerIcon.js","webpack:///./node_modules/react-burger-menu/lib/CrossIcon.js","webpack:///./node_modules/react-burger-menu/lib/menus/stack.js","webpack:///./node_modules/react-burger-menu/lib/menus/elastic.js","webpack:///./node_modules/snapsvg-cjs/dist/snap.svg-cjs.js","webpack:///./node_modules/eve/eve.js","webpack:///./node_modules/react-burger-menu/lib/menus/bubble.js","webpack:///./node_modules/react-burger-menu/lib/menus/push.js","webpack:///./node_modules/react-burger-menu/lib/menus/pushRotate.js","webpack:///./node_modules/react-burger-menu/lib/menus/scaleDown.js","webpack:///./node_modules/react-burger-menu/lib/menus/scaleRotate.js","webpack:///./node_modules/react-burger-menu/lib/menus/fallDown.js","webpack:///./node_modules/react-burger-menu/lib/menus/reveal.js"],"names":["exports","__esModule","Helmet","undefined","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","_react2","_interopRequireDefault","__webpack_require__","_propTypes2","_reactSideEffect2","_deepEqual2","_HelmetUtils","_HelmetConstants","obj","default","_objectWithoutProperties","keys","indexOf","Component","_class","_temp","HelmetSideEffects","reducePropsToState","handleClientStateChange","mapStateOnServer","HelmetExport","_React$Component","HelmetWrapper","instance","TypeError","_classCallCheck","this","self","ReferenceError","_possibleConstructorReturn","apply","subClass","superClass","create","constructor","value","setPrototypeOf","__proto__","_inherits","shouldComponentUpdate","nextProps","mapNestedChildrenToProps","child","nestedChildren","type","TAG_NAMES","SCRIPT","NOSCRIPT","innerHTML","STYLE","cssText","Error","flattenArrayTypeChildren","_ref","_extends2","arrayTypeChildren","newChildProps","concat","mapObjectTypeChildren","_ref2","_extends3","_extends4","newProps","TITLE","titleAttributes","BODY","bodyAttributes","HTML","htmlAttributes","mapArrayTypeChildrenToProps","newFlattenedProps","forEach","arrayChildName","_extends5","warnOnInvalidChildren","mapChildrenToProps","children","_this2","Children","_child$props","childProps","convertReactPropstoHtmlAttributes","LINK","META","render","_props","createElement","set","canUseDOM","propTypes","base","object","oneOfType","arrayOf","node","defaultTitle","string","defer","bool","encodeSpecialCharacters","link","meta","noscript","onChangeClientState","func","script","style","title","titleTemplate","defaultProps","peek","rewind","mappedState","baseTag","linkTags","metaTags","noscriptTags","scriptTags","styleTags","renderStatic","_get","_x3","_x4","_x5","_again","property","receiver","Function","desc","getOwnPropertyDescriptor","getter","get","parent","getPrototypeOf","_react","_reactDom2","_baseStyles2","_BurgerIcon2","_CrossIcon2","styles","Menu","_Component","state","isOpen","_this","options","noStateChange","newState","applyWrapperStyles","setState","onStateChange","timeoutId","clearTimeout","setTimeout","bodyClassName","document","querySelector","classList","pageWrap","pageWrapId","handleExternalWrapper","outerContainer","outerContainerId","id","wrapperStyles","html","body","wrapper","getElementById","builtStyles","getStyle","prop","element","console","error","el","index","inline","propName","replace","charAt","toUpperCase","output","width","formattedWidth","right","e","window","event","keyCode","toggleMenu","disableOverlayClick","customOnKeyDown","onkeydown","disableCloseOnEsc","listenForClose","bind","morphShape","path","svg","findDOMNode","lib","select","animate","attr","pathInitial","_this3","noOverlay","className","overlayClassName","trim","onClick","shouldDisableOverlayClick","getStyles","morphShapeClassName","height","viewBox","preserveAspectRatio","d","menuClassName","itemListClassName","map","item","extraProps","itemClassName","filter","join","cloneElement","customCrossIcon","customIcon","crossButtonClassName","crossClassName","customBurgerIcon","burgerButtonClassName","barClassName","burgerBarClassName","oneOf","isRequired","number","module","withPrefix","navigateTo","push","navigate","_objectWithoutPropertiesLoose2","_inheritsLoose2","_assertThisInitialized2","_defineProperty2","_propTypes","_router","_gatsby","normalizePath","NavLinkPropTypes","activeClassName","activeStyle","GatsbyLink","isCurrent","Boolean","IOSupported","IntersectionObserver","handleRef","_proto","componentDidUpdate","prevProps","prevState","to","___loader","enqueue","parsePath","pathname","componentDidMount","ref","cb","io","innerRef","entries","entry","isIntersecting","intersectionRatio","unobserve","disconnect","observe","_this$props","_this$props$getProps","getProps","defaultGetProps","_onClick","_onMouseEnter","onMouseEnter","rest","prefixedTo","Link","hovering","button","defaultPrevented","metaKey","altKey","ctrlKey","shiftKey","preventDefault","_default","___navigate","warn","___push","___replace","_assertThisInitialized","_defineProperty","MediaQueryList","targetWindow","query","listener","nativeMediaQueryList","matchMedia","active","cancellableListener","matches","addListener","cancel","removeListener","react_media_Media","Media","_len","args","Array","_key","defaultMatches","mediaQueryList","onChange","componentWillMount","browser_default","json2mq_default","updateMatches","componentWillUnmount","isArray","react_default","a","only","__webpack_exports__","g","eval","ATTRIBUTE_NAMES","BASE","HEAD","REACT_TAG_MAP","VALID_TAG_NAMES","name","TAG_PROPERTIES","CHARSET","CSS_TEXT","HREF","HTTPEQUIV","INNER_HTML","ITEM_PROP","NAME","PROPERTY","REL","SRC","accesskey","charset","class","contenteditable","contextmenu","http-equiv","itemprop","tabindex","HELMET_PROPS","DEFAULT_TITLE","DEFER","ENCODE_SPECIAL_CHARACTERS","ON_CHANGE_CLIENT_STATE","TITLE_TEMPLATE","HTML_TAG_MAP","reduce","SELF_CLOSING_TAGS","HELMET_ATTRIBUTE","Snap","excluded","sourceKeys","_interopDefault","ex","React","React__default","ExecutionEnvironment","shallowEqual","handleStateChangeOnClient","WrappedComponent","mountedInstances","emitChange","SideEffect","recordedState","splice","displayName","getDisplayName","__WEBPACK_AMD_DEFINE_RESULT__","canUseWorkers","Worker","canUseEventListeners","addEventListener","attachEvent","canUseViewport","screen","objA","objB","compare","compareContext","ret","keysA","keysB","bHasOwnProperty","idx","valueA","valueB","pSlice","slice","objectKeys","isArguments","deepEqual","actual","expected","opts","Date","getTime","strict","b","isUndefinedOrNull","isBuffer","ka","kb","sort","objEquiv","x","copy","shim","supportsArgumentsClass","toString","supported","unsupported","propertyIsEnumerable","global","requestAnimationFrame","_typeof","Symbol","iterator","_objectAssign2","clock","str","String","getAttributesFromPropsList","tagType","propsList","tagAttrs","current","getTagsFromPropsList","tagName","primaryAttributes","approvedSeenTags","reverse","approvedTags","instanceTags","instanceSeenTags","tag","primaryAttributeKey","attributeKey","lowerCaseAttributeKey","toLowerCase","tagUnion","getInnermostProperty","rafPolyfill","now","callback","currentTime","cafPolyfill","webkitRequestAnimationFrame","mozRequestAnimationFrame","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","msg","_helmetCallback","commitTagChanges","updateAttributes","updateTitle","tagUpdates","updateTags","addedTags","removedTags","_tagUpdates$tagType","newTags","oldTags","flattenArray","possibleArray","attributes","elementTag","getElementsByTagName","helmetAttributeString","getAttribute","helmetAttributes","split","attributesToRemove","attributeKeys","attribute","setAttribute","indexToSave","_i","removeAttribute","tags","headElement","head","tagNodes","querySelectorAll","indexToDelete","newElement","styleSheet","appendChild","createTextNode","some","existingTag","isEqualNode","parentNode","removeChild","generateElementAttributesAsString","convertElementAttributestoReactProps","initProps","getMethodsForTag","encode","toComponent","_initProps","attributeString","flattenedTitle","generateTitleAsString","_mappedTag","mappedTag","mappedAttribute","content","dangerouslySetInnerHTML","__html","generateTagsAsReactComponent","attributeHtml","tagContent","isSelfClosing","generateTagsAsString","initAttributes","_ref$title","innermostBaseTag","getBaseTagFromPropsList","getOnChangeClientState","innermostTitle","innermostTemplate","innermostDefaultTitle","getTitleFromPropsList","camel2hyphen","obj2mq","mq","features","feature","test","isDimension","q","match","slide","stack","elastic","bubble","pushRotate","scaleDown","scaleRotate","fallDown","reveal","_menuFactory","_menuFactory2","overlay","position","zIndex","background","opacity","MozTransform","MsTransform","OTransform","WebkitTransform","transform","transition","menuWrap","menu","boxSizing","overflow","itemList","display","outline","_x","_x2","BurgerIcon","hover","left","top","icon","bmIcon","bar","getLineStyle","bmBurgerBars","bmBurgerButton","onMouseOver","onMouseOut","margin","padding","border","fontSize","cursor","CrossIcon","bmCross","getCrossStyle","bmCrossButton","nthChild","_snapsvgImporter2","pathOpen","mina","easeinout","whiteSpace","eve","requestID","animations","requestAnimFrame","oRequestAnimationFrame","msRequestAnimationFrame","idgen","idprefix","timer","sta","val","s","ds","dur","B","speed","spd","duration","stopit","update","pause","pdif","resume","frame","res","start","j","jj","end","easing","timeStamp","len","A","anim","linear","status","stop","time","getById","n","easeout","Math","pow","easein","Q","sqrt","y","t","abs","backin","backout","sin","PI","bounce","p","root","w","h","nodeType","wrap","is","Element","glob","doc","Paper","version","_","win","tokenRegex","objNotationRegex","has","Str","toFloat","parseFloat","toInt","parseInt","math","mmax","max","mmin","min","E","round","objectToString","colourRegExp","commaSpaces","separator","hsrg","hs","rg","pathCommand","tCommand","pathValues","ID","xlink","xmlns","hub","url","$","text","createComment","substring","getAttributeNS","nodeValue","setAttributeNS","createElementNS","o","isFinite","cacher","f","scope","postprocessor","newf","arg","cache","count","array","ii","repush","shift","rad","deg","format","all","quote","quotedName","isFunc","replacer","clone","angle","tan","cos","asin","num","acos","atan","atan2","x1","y1","x2","y2","x3","y3","len2","closestPoint","distance2","dx","dy","best","bestLength","scan","scanDistance","pathNode","pathLength","getTotalLength","precision","pathSegList","numberOfItems","bestDistance","Infinity","scanLength","getPointAtLength","before","after","beforeLength","afterLength","beforeDistance","afterDistance","distance","snapTo","values","tolerance","rem","getRGB","colour","r","hex","rgbtoString","toHex","red","green","blue","rgb","hsb2rgb","hsl2rgb","hsb","hsl","l","toFixed","color","out","defaultView","getComputedStyle","getPropertyValue","hsbtoString","hsltoString","prepareRGB","clr","packageRGB","rgb2hsl","rgb2hsb","v","R","G","X","C","V","L","M","m","parsePathString","pathString","pth","arr","paramCounts","c","u","z","data","params","parseTransformString","TString","svgTransform2string","tstr","rgTransform","transform2matrix","bbox","tdata","Matrix","bb","tlen","command","absolute","inver","invert","translate","rotate","scale","add","_unit2px","getSomeSVG","mgr","fill","getW","getBBox","getH","nam","contains","compareDocumentPosition","ownerSVGElement","add2group","list","childNodes","snap","paper","nodeName","anims","mask","pattern","symbol","method","Fragment","frag","make","defs","proto","ownerDocument","dom","contentDocument","getSomeDefs","pdefs","selectAll","nodelist","setInterval","firstDefined","json","att","parse","createDocumentFragment","full","div","firstChild","fragment","ch","toJSON","jsonFiller","on","nt","css","lastIndexOf","letter","cssAttr","alignment-baseline","baseline-shift","clip","clip-path","clip-rule","color-interpolation","color-interpolation-filters","color-profile","color-rendering","direction","dominant-baseline","enable-background","fill-opacity","fill-rule","flood-color","flood-opacity","font","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","glyph-orientation-horizontal","glyph-orientation-vertical","image-rendering","kerning","letter-spacing","lighting-color","marker","marker-end","marker-mid","marker-start","pointer-events","shape-rendering","stop-color","stop-opacity","stroke","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-anchor","text-decoration","text-rendering","unicode-bidi","visibility","word-spacing","writing-mode","ajax","postData","req","XMLHttpRequest","pd","encodeURIComponent","open","setRequestHeader","once","onreadystatechange","readyState","send","load","responseText","getElementByPoint","canvas","elem","box","docElem","clientTop","clientLeft","elementFromPoint","opera","so","getBoundingClientRect","documentElement","pageYOffset","scrollTop","pageXOffset","scrollLeft","sr","createSVGRect","hits","getIntersectionList","plugin","elproto","unit2px","isWithoutTransform","getClientRects","removed","localMatrix","original","href","pathfinder","deflt","bboxwt","realPath","matrix","propString","extractTransform","doReturn","papa","getCTM","local","ms","localString","toTransformString","globalMatrix","totalMatrix","diffMatrix","total","gradientTransform","patternTransform","append","it","appendTo","prepend","first","insertBefore","prependTo","nextSibling","insertAfter","remove","asPX","use","xlink:href","cloneNode","els","ids","uses","urltest","linktest","oldid","old","fs","fixids","toDefs","toPattern","patternUnits","refX","refY","cx","cy","markerWidth","markerHeight","orient","eldata","chld","removeData","outerSVG","innerSVG","toDataURL","btoa","contents","unescape","matrixproto","norm","normalize","mag","aNew","bNew","multLeft","cNew","eNew","me","skewX","skew","skewY","fromCharCode","offset","determinant","row","scalex","shear","scaley","isSimple","isSuperSimple","noRotation","shorter","clipIt","reURLValue","URL","fillStroke","grad","gradient","attrs","deurl","gradrg","setFontSize","getFontSize","tokens","stops","seed","step","k","toAbsolute","txt","baseVal","vb","rx","ry","tp","textPath","tuner","chunk","tuned","setter","textExtract","chi","textContent","internal","rgNotSpace","addClass","clazz","finalValue","classes","curClasses","removeClass","pos","hasClass","toggleClass","flag","operators","+","-","/","*","reUnit","reAddon","getNumber","plus","evnt","atr","unit","aUnit","op","isNaN","bplus","from","getUnit","rect","circle","preload","onerror","src","img","onload","image","offsetWidth","offsetHeight","ellipse","group","vbx","vby","vbw","vbh","ptrn","vx","vy","vw","vh","line","polyline","points","polygon","Gstops","GaddStop","inserted","GgetBBox","GsetStops","addStop","gradientLinear","setStops","gradientRadial","fx","fy","unshift","gradientUnits","clear","next","p2s","paths","ps","sleep","r1","r2","r0","rectPath","pathClone","pathArray","getPointAtSegmentLength","p1x","p1y","c1x","c1y","c2x","c2y","p2x","p2y","bezlen","findDotsAtSegment","x4","y4","ll","t2","getTotLen","getLengthFactory","istotal","subpath","O","onlystart","point","sp","subpaths","path2curve","getSubpathsAtLength","t1","t13","t12","t3","mx","my","nx","ny","alpha","bezierBBox","curveDim","isPointInsideBBox","isBBoxIntersect","bbox1","bbox2","base3","p1","p2","p3","p4","z2","Tvalues","Cvalues","sum","ct","xbase","ybase","comb","intersect","denominator","px","py","px2","py2","interHelper","bez1","bez2","justCount","n1","n2","dots1","dots2","xy","di","di1","dj","dj1","ci","cj","interPathHelper","path1","path2","x1m","y1m","x2m","y2m","pi","pj","intr","kk","segment1","segment2","pathBBox","Y","dim","xmin","ymin","ellipsePath","getPath","pathToAbsolute","pa0","pa","crz","dots","pop","catmullRom2bezier","l2c","q2c","ax","ay","x0","y0","b2ac","sqrtb2ac","tvalues","bounds","mt","jlen","curve","bx","by","qx","qy","attrs2","processPath","pcom","T","a2c","large_arc_flag","sweep_flag","recursive","_120","f1","f2","rx2","ry2","df","f2old","x2old","y2old","c1","s1","c2","s2","hx","hy","m1","m2","m3","m4","newres","fixArc","pp","pcoms1","pcoms2","fixM","a1","a2","pfirst","seg","seg2","seglen","seg2len","crp","iLen","getSubpath","closest","inside","found","intersection","intersectionNumber","isPointInside","toRelative","lowerCase","rel","toCubic","pathi","Set","items","bindings","setproto","thisArg","Animation","each","begin","handler","callbacker","aname","unbound","insertion","tail","todel","arglen","exclude","names","getEmpty","getViewBox","getColour","path2array","isNumeric","equal","Number","tt1","tt2","maxlength","equaliseTransform","arr1","arr2","bUnit","supportsTouch","events","touchMap","mousedown","mousemove","mouseup","getScroll","preventTouch","originalEvent","stopTouch","stopPropagation","addEvent","fn","realName","scrollY","scrollX","targetTouches","olde","clientX","clientY","removeEventListener","drag","dragMove","dragi","touch","touches","identifier","_drag","move_scope","dragUp","unmousemove","unmouseup","end_scope","start_scope","off","eventName","unbind","f_in","f_out","scope_in","scope_out","mouseover","mouseout","unhover","unmouseover","unmouseout","draggable","onmove","onstart","onend","origTransform","init","undrag","unmousedown","pproto","rgurl","filstr","filterUnits","blur","def","shadow","grayscale","amount","sepia","saturate","hueRotate","amount2","brightness","contrast","firstLetter","getAlign","way","align","animation","inAnim","_attrs","_callback","curStatus","eq","fkeys","tkeys","saveColor","colors","A100","A200","A400","A700","mui","flat","pink","purple","deeppurple","indigo","lightblue","cyan","teal","lightgreen","lime","yellow","amber","orange","deeporange","brown","grey","bluegrey","turquoise","greensea","sunflower","emerland","nephritis","carrot","pumpkin","peterriver","belizehole","alizarin","pomegranate","amethyst","wisteria","clouds","silver","wetasphalt","midnightblue","concrete","asbestos","importMUIColors","current_event","comaseparator","numsort","lastDefined","objtos","ar","oldstop","listeners","indexed","queue","ce","_events","nes","es","sep","RegExp","exist","subname","cur","nts","inodes","funcs","prune","steps","stepsTotal","nextStep","closeButton","transformOrigin","transformStyle","perspective","perspectiveOrigin","burgerIcon"],"mappings":"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","file":"0-fdaffc535fe660917076.js","sourcesContent":["exports.__esModule = true;\nexports.Helmet = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactSideEffect = require(\"react-side-effect\");\n\nvar _reactSideEffect2 = _interopRequireDefault(_reactSideEffect);\n\nvar _deepEqual = require(\"deep-equal\");\n\nvar _deepEqual2 = _interopRequireDefault(_deepEqual);\n\nvar _HelmetUtils = require(\"./HelmetUtils.js\");\n\nvar _HelmetConstants = require(\"./HelmetConstants.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Helmet = function Helmet(Component) {\n    var _class, _temp;\n\n    return _temp = _class = function (_React$Component) {\n        _inherits(HelmetWrapper, _React$Component);\n\n        function HelmetWrapper() {\n            _classCallCheck(this, HelmetWrapper);\n\n            return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n        }\n\n        HelmetWrapper.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n            return !(0, _deepEqual2.default)(this.props, nextProps);\n        };\n\n        HelmetWrapper.prototype.mapNestedChildrenToProps = function mapNestedChildrenToProps(child, nestedChildren) {\n            if (!nestedChildren) {\n                return null;\n            }\n\n            switch (child.type) {\n                case _HelmetConstants.TAG_NAMES.SCRIPT:\n                case _HelmetConstants.TAG_NAMES.NOSCRIPT:\n                    return {\n                        innerHTML: nestedChildren\n                    };\n\n                case _HelmetConstants.TAG_NAMES.STYLE:\n                    return {\n                        cssText: nestedChildren\n                    };\n            }\n\n            throw new Error(\"<\" + child.type + \" /> elements are self-closing and can not contain children. Refer to our API for more information.\");\n        };\n\n        HelmetWrapper.prototype.flattenArrayTypeChildren = function flattenArrayTypeChildren(_ref) {\n            var _extends2;\n\n            var child = _ref.child,\n                arrayTypeChildren = _ref.arrayTypeChildren,\n                newChildProps = _ref.newChildProps,\n                nestedChildren = _ref.nestedChildren;\n\n            return _extends({}, arrayTypeChildren, (_extends2 = {}, _extends2[child.type] = [].concat(arrayTypeChildren[child.type] || [], [_extends({}, newChildProps, this.mapNestedChildrenToProps(child, nestedChildren))]), _extends2));\n        };\n\n        HelmetWrapper.prototype.mapObjectTypeChildren = function mapObjectTypeChildren(_ref2) {\n            var _extends3, _extends4;\n\n            var child = _ref2.child,\n                newProps = _ref2.newProps,\n                newChildProps = _ref2.newChildProps,\n                nestedChildren = _ref2.nestedChildren;\n\n            switch (child.type) {\n                case _HelmetConstants.TAG_NAMES.TITLE:\n                    return _extends({}, newProps, (_extends3 = {}, _extends3[child.type] = nestedChildren, _extends3.titleAttributes = _extends({}, newChildProps), _extends3));\n\n                case _HelmetConstants.TAG_NAMES.BODY:\n                    return _extends({}, newProps, {\n                        bodyAttributes: _extends({}, newChildProps)\n                    });\n\n                case _HelmetConstants.TAG_NAMES.HTML:\n                    return _extends({}, newProps, {\n                        htmlAttributes: _extends({}, newChildProps)\n                    });\n            }\n\n            return _extends({}, newProps, (_extends4 = {}, _extends4[child.type] = _extends({}, newChildProps), _extends4));\n        };\n\n        HelmetWrapper.prototype.mapArrayTypeChildrenToProps = function mapArrayTypeChildrenToProps(arrayTypeChildren, newProps) {\n            var newFlattenedProps = _extends({}, newProps);\n\n            Object.keys(arrayTypeChildren).forEach(function (arrayChildName) {\n                var _extends5;\n\n                newFlattenedProps = _extends({}, newFlattenedProps, (_extends5 = {}, _extends5[arrayChildName] = arrayTypeChildren[arrayChildName], _extends5));\n            });\n\n            return newFlattenedProps;\n        };\n\n        HelmetWrapper.prototype.warnOnInvalidChildren = function warnOnInvalidChildren(child, nestedChildren) {\n            if (process.env.NODE_ENV !== \"production\") {\n                if (!_HelmetConstants.VALID_TAG_NAMES.some(function (name) {\n                    return child.type === name;\n                })) {\n                    if (typeof child.type === \"function\") {\n                        return (0, _HelmetUtils.warn)(\"You may be attempting to nest <Helmet> components within each other, which is not allowed. Refer to our API for more information.\");\n                    }\n\n                    return (0, _HelmetUtils.warn)(\"Only elements types \" + _HelmetConstants.VALID_TAG_NAMES.join(\", \") + \" are allowed. Helmet does not support rendering <\" + child.type + \"> elements. Refer to our API for more information.\");\n                }\n\n                if (nestedChildren && typeof nestedChildren !== \"string\" && (!Array.isArray(nestedChildren) || nestedChildren.some(function (nestedChild) {\n                    return typeof nestedChild !== \"string\";\n                }))) {\n                    throw new Error(\"Helmet expects a string as a child of <\" + child.type + \">. Did you forget to wrap your children in braces? ( <\" + child.type + \">{``}</\" + child.type + \"> ) Refer to our API for more information.\");\n                }\n            }\n\n            return true;\n        };\n\n        HelmetWrapper.prototype.mapChildrenToProps = function mapChildrenToProps(children, newProps) {\n            var _this2 = this;\n\n            var arrayTypeChildren = {};\n\n            _react2.default.Children.forEach(children, function (child) {\n                if (!child || !child.props) {\n                    return;\n                }\n\n                var _child$props = child.props,\n                    nestedChildren = _child$props.children,\n                    childProps = _objectWithoutProperties(_child$props, [\"children\"]);\n\n                var newChildProps = (0, _HelmetUtils.convertReactPropstoHtmlAttributes)(childProps);\n\n                _this2.warnOnInvalidChildren(child, nestedChildren);\n\n                switch (child.type) {\n                    case _HelmetConstants.TAG_NAMES.LINK:\n                    case _HelmetConstants.TAG_NAMES.META:\n                    case _HelmetConstants.TAG_NAMES.NOSCRIPT:\n                    case _HelmetConstants.TAG_NAMES.SCRIPT:\n                    case _HelmetConstants.TAG_NAMES.STYLE:\n                        arrayTypeChildren = _this2.flattenArrayTypeChildren({\n                            child: child,\n                            arrayTypeChildren: arrayTypeChildren,\n                            newChildProps: newChildProps,\n                            nestedChildren: nestedChildren\n                        });\n                        break;\n\n                    default:\n                        newProps = _this2.mapObjectTypeChildren({\n                            child: child,\n                            newProps: newProps,\n                            newChildProps: newChildProps,\n                            nestedChildren: nestedChildren\n                        });\n                        break;\n                }\n            });\n\n            newProps = this.mapArrayTypeChildrenToProps(arrayTypeChildren, newProps);\n            return newProps;\n        };\n\n        HelmetWrapper.prototype.render = function render() {\n            var _props = this.props,\n                children = _props.children,\n                props = _objectWithoutProperties(_props, [\"children\"]);\n\n            var newProps = _extends({}, props);\n\n            if (children) {\n                newProps = this.mapChildrenToProps(children, newProps);\n            }\n\n            return _react2.default.createElement(Component, newProps);\n        };\n\n        _createClass(HelmetWrapper, null, [{\n            key: \"canUseDOM\",\n\n\n            // Component.peek comes from react-side-effect:\n            // For testing, you may use a static peek() method available on the returned component.\n            // It lets you get the current state without resetting the mounted instance stack.\n            // Don’t use it for anything other than testing.\n\n            /**\n            * @param {Object} base: {\"target\": \"_blank\", \"href\": \"http://mysite.com/\"}\n            * @param {Object} bodyAttributes: {\"className\": \"root\"}\n            * @param {String} defaultTitle: \"Default Title\"\n            * @param {Boolean} defer: true\n            * @param {Boolean} encodeSpecialCharacters: true\n            * @param {Object} htmlAttributes: {\"lang\": \"en\", \"amp\": undefined}\n            * @param {Array} link: [{\"rel\": \"canonical\", \"href\": \"http://mysite.com/example\"}]\n            * @param {Array} meta: [{\"name\": \"description\", \"content\": \"Test description\"}]\n            * @param {Array} noscript: [{\"innerHTML\": \"<img src='http://mysite.com/js/test.js'\"}]\n            * @param {Function} onChangeClientState: \"(newState) => console.log(newState)\"\n            * @param {Array} script: [{\"type\": \"text/javascript\", \"src\": \"http://mysite.com/js/test.js\"}]\n            * @param {Array} style: [{\"type\": \"text/css\", \"cssText\": \"div { display: block; color: blue; }\"}]\n            * @param {String} title: \"Title\"\n            * @param {Object} titleAttributes: {\"itemprop\": \"name\"}\n            * @param {String} titleTemplate: \"MySite.com - %s\"\n            */\n            set: function set(canUseDOM) {\n                Component.canUseDOM = canUseDOM;\n            }\n        }]);\n\n        return HelmetWrapper;\n    }(_react2.default.Component), _class.propTypes = {\n        base: _propTypes2.default.object,\n        bodyAttributes: _propTypes2.default.object,\n        children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node]),\n        defaultTitle: _propTypes2.default.string,\n        defer: _propTypes2.default.bool,\n        encodeSpecialCharacters: _propTypes2.default.bool,\n        htmlAttributes: _propTypes2.default.object,\n        link: _propTypes2.default.arrayOf(_propTypes2.default.object),\n        meta: _propTypes2.default.arrayOf(_propTypes2.default.object),\n        noscript: _propTypes2.default.arrayOf(_propTypes2.default.object),\n        onChangeClientState: _propTypes2.default.func,\n        script: _propTypes2.default.arrayOf(_propTypes2.default.object),\n        style: _propTypes2.default.arrayOf(_propTypes2.default.object),\n        title: _propTypes2.default.string,\n        titleAttributes: _propTypes2.default.object,\n        titleTemplate: _propTypes2.default.string\n    }, _class.defaultProps = {\n        defer: true,\n        encodeSpecialCharacters: true\n    }, _class.peek = Component.peek, _class.rewind = function () {\n        var mappedState = Component.rewind();\n        if (!mappedState) {\n            // provide fallback if mappedState is undefined\n            mappedState = (0, _HelmetUtils.mapStateOnServer)({\n                baseTag: [],\n                bodyAttributes: {},\n                encodeSpecialCharacters: true,\n                htmlAttributes: {},\n                linkTags: [],\n                metaTags: [],\n                noscriptTags: [],\n                scriptTags: [],\n                styleTags: [],\n                title: \"\",\n                titleAttributes: {}\n            });\n        }\n\n        return mappedState;\n    }, _temp;\n};\n\nvar NullComponent = function NullComponent() {\n    return null;\n};\n\nvar HelmetSideEffects = (0, _reactSideEffect2.default)(_HelmetUtils.reducePropsToState, _HelmetUtils.handleClientStateChange, _HelmetUtils.mapStateOnServer)(NullComponent);\n\nvar HelmetExport = Helmet(HelmetSideEffects);\nHelmetExport.renderStatic = HelmetExport.rewind;\n\nexports.Helmet = HelmetExport;\nexports.default = HelmetExport;","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x3, _x4, _x5) { var _again = true; _function: while (_again) { var object = _x3, property = _x4, receiver = _x5; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x3 = parent; _x4 = property; _x5 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _baseStyles = require('./baseStyles');\n\nvar _baseStyles2 = _interopRequireDefault(_baseStyles);\n\nvar _BurgerIcon = require('./BurgerIcon');\n\nvar _BurgerIcon2 = _interopRequireDefault(_BurgerIcon);\n\nvar _CrossIcon = require('./CrossIcon');\n\nvar _CrossIcon2 = _interopRequireDefault(_CrossIcon);\n\nexports['default'] = function (styles) {\n  var Menu = (function (_Component) {\n    _inherits(Menu, _Component);\n\n    function Menu(props) {\n      _classCallCheck(this, Menu);\n\n      _get(Object.getPrototypeOf(Menu.prototype), 'constructor', this).call(this, props);\n      this.state = {\n        isOpen: false\n      };\n    }\n\n    _createClass(Menu, [{\n      key: 'toggleMenu',\n      value: function toggleMenu() {\n        var _this = this;\n\n        var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n        var isOpen = options.isOpen;\n        var noStateChange = options.noStateChange;\n\n        var newState = {\n          isOpen: typeof isOpen !== 'undefined' ? isOpen : !this.state.isOpen\n        };\n\n        this.applyWrapperStyles();\n\n        this.setState(newState, function () {\n          !noStateChange && _this.props.onStateChange(newState);\n\n          // Timeout ensures wrappers are cleared after animation finishes.\n          _this.timeoutId && clearTimeout(_this.timeoutId);\n          _this.timeoutId = setTimeout(function () {\n            _this.timeoutId = null;\n            if (!newState.isOpen) {\n              _this.applyWrapperStyles(false);\n            }\n          }, 500);\n        });\n      }\n\n      // Applies component-specific styles to external wrapper elements.\n    }, {\n      key: 'applyWrapperStyles',\n      value: function applyWrapperStyles() {\n        var set = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n\n        if (this.props.bodyClassName) {\n          var body = document.querySelector('body');\n          body.classList[set ? 'add' : 'remove'](this.props.bodyClassName);\n        }\n\n        if (styles.pageWrap && this.props.pageWrapId) {\n          this.handleExternalWrapper(this.props.pageWrapId, styles.pageWrap, set);\n        }\n\n        if (styles.outerContainer && this.props.outerContainerId) {\n          this.handleExternalWrapper(this.props.outerContainerId, styles.outerContainer, set);\n        }\n      }\n\n      // Sets or unsets styles on DOM elements outside the menu component.\n      // This is necessary for correct page interaction with some of the menus.\n      // Throws and returns if the required external elements don't exist,\n      // which means any external page animations won't be applied.\n    }, {\n      key: 'handleExternalWrapper',\n      value: function handleExternalWrapper(id, wrapperStyles, set) {\n        var html = document.querySelector('html');\n        var body = document.querySelector('body');\n        var wrapper = document.getElementById(id);\n\n        if (!wrapper) {\n          console.error(\"Element with ID '\" + id + \"' not found\");\n          return;\n        }\n\n        var builtStyles = this.getStyle(wrapperStyles);\n\n        for (var prop in builtStyles) {\n          if (builtStyles.hasOwnProperty(prop)) {\n            wrapper.style[prop] = set ? builtStyles[prop] : '';\n          }\n        }\n\n        // Prevent any horizontal scroll.\n        [html, body].forEach(function (element) {\n          element.style['overflow-x'] = set ? 'hidden' : '';\n        });\n      }\n\n      // Builds styles incrementally for a given element.\n    }, {\n      key: 'getStyles',\n      value: function getStyles(el, index, inline) {\n        var propName = 'bm' + el.replace(el.charAt(0), el.charAt(0).toUpperCase());\n\n        // Set base styles.\n        var output = _baseStyles2['default'][el] ? this.getStyle(_baseStyles2['default'][el]) : {};\n\n        // Add animation-specific styles.\n        if (styles[el]) {\n          output = _extends({}, output, this.getStyle(styles[el], index + 1));\n        }\n\n        // Add custom styles.\n        if (this.props.styles[propName]) {\n          output = _extends({}, output, this.props.styles[propName]);\n        }\n\n        // Add element inline styles.\n        if (inline) {\n          output = _extends({}, output, inline);\n        }\n\n        return output;\n      }\n    }, {\n      key: 'getStyle',\n      value: function getStyle(style, index) {\n        var width = this.props.width;\n        var formattedWidth = typeof width !== 'string' ? width + 'px' : width;\n        return style(this.state.isOpen, formattedWidth, this.props.right, index);\n      }\n    }, {\n      key: 'listenForClose',\n      value: function listenForClose(e) {\n        e = e || window.event;\n\n        if (this.state.isOpen && (e.key === 'Escape' || e.keyCode === 27)) {\n          this.toggleMenu();\n        }\n      }\n    }, {\n      key: 'shouldDisableOverlayClick',\n      value: function shouldDisableOverlayClick() {\n        if (typeof this.props.disableOverlayClick === 'function') {\n          return this.props.disableOverlayClick();\n        } else {\n          return this.props.disableOverlayClick;\n        }\n      }\n    }, {\n      key: 'componentWillMount',\n      value: function componentWillMount() {\n        if (!styles) {\n          throw new Error('No styles supplied');\n        }\n      }\n    }, {\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        // Bind ESC key handler (unless disabled or custom function supplied).\n        if (this.props.customOnKeyDown) {\n          window.onkeydown = this.props.customOnKeyDown;\n        } else if (!this.props.disableCloseOnEsc) {\n          window.onkeydown = this.listenForClose.bind(this);\n        }\n\n        // Allow initial open state to be set by props.\n        if (this.props.isOpen) {\n          this.toggleMenu({ isOpen: true, noStateChange: true });\n        }\n      }\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        window.onkeydown = null;\n\n        this.applyWrapperStyles(false);\n      }\n    }, {\n      key: 'componentDidUpdate',\n      value: function componentDidUpdate() {\n        var _this2 = this;\n\n        if (styles.svg) {\n          (function () {\n            var morphShape = _reactDom2['default'].findDOMNode(_this2, 'bm-morph-shape');\n            var path = styles.svg.lib(morphShape).select('path');\n\n            if (_this2.state.isOpen) {\n              // Animate SVG path.\n              styles.svg.animate(path);\n            } else {\n              // Reset path (timeout ensures animation happens off screen).\n              setTimeout(function () {\n                path.attr('d', styles.svg.pathInitial);\n              }, 300);\n            }\n          })();\n        }\n      }\n    }, {\n      key: 'componentWillReceiveProps',\n      value: function componentWillReceiveProps(nextProps) {\n        if (typeof nextProps.isOpen !== 'undefined' && nextProps.isOpen !== this.state.isOpen) {\n          this.toggleMenu();\n        }\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _this3 = this;\n\n        return _react2['default'].createElement(\n          'div',\n          null,\n          !this.props.noOverlay && _react2['default'].createElement('div', {\n            className: ('bm-overlay ' + this.props.overlayClassName).trim(),\n            onClick: function () {\n              return !_this3.shouldDisableOverlayClick() && _this3.toggleMenu();\n            },\n            style: this.getStyles('overlay')\n          }),\n          _react2['default'].createElement(\n            'div',\n            {\n              id: this.props.id,\n              className: ('bm-menu-wrap ' + this.props.className).trim(),\n              style: this.getStyles('menuWrap')\n            },\n            styles.svg && _react2['default'].createElement(\n              'div',\n              {\n                className: ('bm-morph-shape ' + this.props.morphShapeClassName).trim(),\n                style: this.getStyles('morphShape')\n              },\n              _react2['default'].createElement(\n                'svg',\n                {\n                  width: '100%',\n                  height: '100%',\n                  viewBox: '0 0 100 800',\n                  preserveAspectRatio: 'none'\n                },\n                _react2['default'].createElement('path', { d: styles.svg.pathInitial })\n              )\n            ),\n            _react2['default'].createElement(\n              'div',\n              {\n                className: ('bm-menu ' + this.props.menuClassName).trim(),\n                style: this.getStyles('menu')\n              },\n              _react2['default'].createElement(\n                'nav',\n                {\n                  className: ('bm-item-list ' + this.props.itemListClassName).trim(),\n                  style: this.getStyles('itemList')\n                },\n                _react2['default'].Children.map(this.props.children, function (item, index) {\n                  if (item) {\n                    var classList = ['bm-item', _this3.props.itemClassName, item.props.className].filter(function (className) {\n                      return !!className;\n                    }).join(' ');\n                    var extraProps = {\n                      key: index,\n                      className: classList,\n                      style: _this3.getStyles('item', index, item.props.style)\n                    };\n                    return _react2['default'].cloneElement(item, extraProps);\n                  }\n                })\n              )\n            ),\n            this.props.customCrossIcon !== false && _react2['default'].createElement(\n              'div',\n              { style: this.getStyles('closeButton') },\n              _react2['default'].createElement(_CrossIcon2['default'], {\n                onClick: function () {\n                  return _this3.toggleMenu();\n                },\n                styles: this.props.styles,\n                customIcon: this.props.customCrossIcon,\n                className: this.props.crossButtonClassName,\n                crossClassName: this.props.crossClassName\n              })\n            )\n          ),\n          this.props.customBurgerIcon !== false && _react2['default'].createElement(\n            'div',\n            { style: this.getStyles('burgerIcon') },\n            _react2['default'].createElement(_BurgerIcon2['default'], {\n              onClick: function () {\n                return _this3.toggleMenu();\n              },\n              styles: this.props.styles,\n              customIcon: this.props.customBurgerIcon,\n              className: this.props.burgerButtonClassName,\n              barClassName: this.props.burgerBarClassName\n            })\n          )\n        );\n      }\n    }]);\n\n    return Menu;\n  })(_react.Component);\n\n  Menu.propTypes = {\n    bodyClassName: _propTypes2['default'].string,\n    burgerBarClassName: _propTypes2['default'].string,\n    burgerButtonClassName: _propTypes2['default'].string,\n    crossButtonClassName: _propTypes2['default'].string,\n    crossClassName: _propTypes2['default'].string,\n    customBurgerIcon: _propTypes2['default'].oneOfType([_propTypes2['default'].element, _propTypes2['default'].oneOf([false])]),\n    customCrossIcon: _propTypes2['default'].oneOfType([_propTypes2['default'].element, _propTypes2['default'].oneOf([false])]),\n    customOnKeyDown: _propTypes2['default'].func,\n    disableCloseOnEsc: _propTypes2['default'].bool,\n    disableOverlayClick: _propTypes2['default'].oneOfType([_propTypes2['default'].bool, _propTypes2['default'].func]),\n    id: _propTypes2['default'].string,\n    isOpen: _propTypes2['default'].bool,\n    itemClassName: _propTypes2['default'].string,\n    itemListClassName: _propTypes2['default'].string,\n    menuClassName: _propTypes2['default'].string,\n    morphShapeClassName: _propTypes2['default'].string,\n    noOverlay: _propTypes2['default'].bool,\n    onStateChange: _propTypes2['default'].func,\n    outerContainerId: styles && styles.outerContainer ? _propTypes2['default'].string.isRequired : _propTypes2['default'].string,\n    overlayClassName: _propTypes2['default'].string,\n    pageWrapId: styles && styles.pageWrap ? _propTypes2['default'].string.isRequired : _propTypes2['default'].string,\n    right: _propTypes2['default'].bool,\n    styles: _propTypes2['default'].object,\n    width: _propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].string])\n  };\n\n  Menu.defaultProps = {\n    bodyClassName: '',\n    burgerBarClassName: '',\n    burgerButtonClassName: '',\n    className: '',\n    crossButtonClassName: '',\n    crossClassName: '',\n    disableCloseOnEsc: false,\n    id: '',\n    itemClassName: '',\n    itemListClassName: '',\n    menuClassName: '',\n    morphShapeClassName: '',\n    noOverlay: false,\n    onStateChange: function onStateChange() {},\n    outerContainerId: '',\n    overlayClassName: '',\n    pageWrapId: '',\n    styles: {},\n    width: 300\n  };\n\n  return Menu;\n};\n\nmodule.exports = exports['default'];","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.withPrefix = withPrefix;\nexports.navigateTo = exports.replace = exports.push = exports.navigate = exports.default = void 0;\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _router = require(\"@reach/router\");\n\nvar _gatsby = require(\"gatsby\");\n\n/*global __PATH_PREFIX__ */\nfunction withPrefix(path) {\n  return normalizePath(__PATH_PREFIX__ + \"/\" + path);\n}\n\nfunction normalizePath(path) {\n  return path.replace(/\\/+/g, \"/\");\n}\n\nvar NavLinkPropTypes = {\n  activeClassName: _propTypes.default.string,\n  activeStyle: _propTypes.default.object // Set up IntersectionObserver\n\n};\n\nvar handleIntersection = function handleIntersection(el, cb) {\n  var io = new window.IntersectionObserver(function (entries) {\n    entries.forEach(function (entry) {\n      if (el === entry.target) {\n        // Check if element is within viewport, remove listener, destroy observer, and run link callback.\n        // MSEdge doesn't currently support isIntersecting, so also test for  an intersectionRatio > 0\n        if (entry.isIntersecting || entry.intersectionRatio > 0) {\n          io.unobserve(el);\n          io.disconnect();\n          cb();\n        }\n      }\n    });\n  }); // Add element to the observer\n\n  io.observe(el);\n};\n\nvar GatsbyLink =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(GatsbyLink, _React$Component);\n\n  function GatsbyLink(props) {\n    var _this;\n\n    _this = _React$Component.call(this) || this; // Default to no support for IntersectionObserver\n\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"defaultGetProps\", function (_ref) {\n      var isCurrent = _ref.isCurrent;\n\n      if (isCurrent) {\n        return {\n          className: [_this.props.className, _this.props.activeClassName].filter(Boolean).join(\" \"),\n          style: (0, _extends2.default)({}, _this.props.style, _this.props.activeStyle)\n        };\n      }\n\n      return null;\n    });\n    var IOSupported = false;\n\n    if (typeof window !== \"undefined\" && window.IntersectionObserver) {\n      IOSupported = true;\n    }\n\n    _this.state = {\n      IOSupported: IOSupported\n    };\n    _this.handleRef = _this.handleRef.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));\n    return _this;\n  }\n\n  var _proto = GatsbyLink.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    // Preserve non IO functionality if no support\n    if (this.props.to !== prevProps.to && !this.state.IOSupported) {\n      ___loader.enqueue((0, _gatsby.parsePath)(this.props.to).pathname);\n    }\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    // Preserve non IO functionality if no support\n    if (!this.state.IOSupported) {\n      ___loader.enqueue((0, _gatsby.parsePath)(this.props.to).pathname);\n    }\n  };\n\n  _proto.handleRef = function handleRef(ref) {\n    var _this2 = this;\n\n    this.props.innerRef && this.props.innerRef(ref);\n\n    if (this.state.IOSupported && ref) {\n      // If IO supported and element reference found, setup Observer functionality\n      handleIntersection(ref, function () {\n        ___loader.enqueue((0, _gatsby.parsePath)(_this2.props.to).pathname);\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this3 = this;\n\n    var _this$props = this.props,\n        to = _this$props.to,\n        _this$props$getProps = _this$props.getProps,\n        getProps = _this$props$getProps === void 0 ? this.defaultGetProps : _this$props$getProps,\n        _onClick = _this$props.onClick,\n        _onMouseEnter = _this$props.onMouseEnter,\n        $activeClassName = _this$props.activeClassName,\n        $activeStyle = _this$props.activeStyle,\n        $ref = _this$props.ref,\n        $innerRef = _this$props.innerRef,\n        state = _this$props.state,\n        replace = _this$props.replace,\n        rest = (0, _objectWithoutPropertiesLoose2.default)(_this$props, [\"to\", \"getProps\", \"onClick\", \"onMouseEnter\", \"activeClassName\", \"activeStyle\", \"ref\", \"innerRef\", \"state\", \"replace\"]);\n    var prefixedTo = withPrefix(to);\n    return _react.default.createElement(_router.Link, (0, _extends2.default)({\n      to: prefixedTo,\n      state: state,\n      getProps: getProps,\n      innerRef: this.handleRef,\n      onMouseEnter: function onMouseEnter(e) {\n        // eslint-disable-line\n        _onMouseEnter && _onMouseEnter(e);\n\n        ___loader.hovering((0, _gatsby.parsePath)(to).pathname);\n      },\n      onClick: function onClick(e) {\n        // eslint-disable-line\n        _onClick && _onClick(e);\n\n        if (e.button === 0 && // ignore right clicks\n        !_this3.props.target && // let browser handle \"target=_blank\"\n        !e.defaultPrevented && // onClick prevented default\n        !e.metaKey && // ignore clicks with modifier keys...\n        !e.altKey && !e.ctrlKey && !e.shiftKey) {\n          e.preventDefault(); // Make sure the necessary scripts and data are\n          // loaded before continuing.\n\n          navigate(to, {\n            state: state,\n            replace: replace\n          });\n        }\n\n        return true;\n      }\n    }, rest));\n  };\n\n  return GatsbyLink;\n}(_react.default.Component);\n\nGatsbyLink.propTypes = (0, _extends2.default)({}, NavLinkPropTypes, {\n  innerRef: _propTypes.default.func,\n  onClick: _propTypes.default.func,\n  to: _propTypes.default.string.isRequired,\n  replace: _propTypes.default.bool\n});\nvar _default = GatsbyLink;\nexports.default = _default;\n\nvar navigate = function navigate(to, options) {\n  window.___navigate(withPrefix(to), options);\n};\n\nexports.navigate = navigate;\n\nvar push = function push(to) {\n  console.warn(\"The \\\"push\\\" method is now deprecated and will be removed in Gatsby v3. Please use \\\"navigate\\\" instead.\");\n\n  window.___push(withPrefix(to));\n};\n\nexports.push = push;\n\nvar replace = function replace(to) {\n  console.warn(\"The \\\"replace\\\" method is now deprecated and will be removed in Gatsby v3. Please use \\\"navigate\\\" instead.\");\n\n  window.___replace(withPrefix(to));\n}; // TODO: Remove navigateTo for Gatsby v3\n\n\nexports.replace = replace;\n\nvar navigateTo = function navigateTo(to) {\n  console.warn(\"The \\\"navigateTo\\\" method is now deprecated and will be removed in Gatsby v3. Please use \\\"navigate\\\" instead.\");\n  return push(to);\n};\n\nexports.navigateTo = navigateTo;","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport _assertThisInitialized from '@babel/runtime/helpers/esm/assertThisInitialized';\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport invariant from 'invariant';\nimport json2mq from 'json2mq';\n\nvar MediaQueryList =\n/*#__PURE__*/\nfunction () {\n  function MediaQueryList(targetWindow, query, listener) {\n    var _this = this;\n\n    this.nativeMediaQueryList = targetWindow.matchMedia(query);\n    this.active = true; // Safari doesn't clear up listener with removeListener\n    // when the listener is already waiting in the event queue.\n    // Having an active flag to make sure the listener is not called\n    // after we removeListener.\n\n    this.cancellableListener = function () {\n      _this.matches = _this.nativeMediaQueryList.matches;\n\n      if (_this.active) {\n        listener.apply(void 0, arguments);\n      }\n    };\n\n    this.nativeMediaQueryList.addListener(this.cancellableListener);\n    this.matches = this.nativeMediaQueryList.matches;\n  }\n\n  var _proto = MediaQueryList.prototype;\n\n  _proto.cancel = function cancel() {\n    this.active = false;\n    this.nativeMediaQueryList.removeListener(this.cancellableListener);\n  };\n\n  return MediaQueryList;\n}();\n\n/**\n * Conditionally renders based on whether or not a media query matches.\n */\n\nvar Media =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Media, _React$Component);\n\n  function Media() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      matches: _this.props.defaultMatches\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"updateMatches\", function () {\n      var matches = _this.mediaQueryList.matches;\n\n      _this.setState({\n        matches: matches\n      });\n\n      var onChange = _this.props.onChange;\n\n      if (onChange) {\n        onChange(matches);\n      }\n    });\n\n    return _this;\n  }\n\n  var _proto = Media.prototype;\n\n  _proto.componentWillMount = function componentWillMount() {\n    if (typeof window !== 'object') return;\n    var targetWindow = this.props.targetWindow || window;\n    !(typeof targetWindow.matchMedia === 'function') ? process.env.NODE_ENV !== \"production\" ? invariant(false, '<Media targetWindow> does not support `matchMedia`.') : invariant(false) : void 0;\n    var query = this.props.query;\n    if (typeof query !== 'string') query = json2mq(query);\n    this.mediaQueryList = new MediaQueryList(targetWindow, query, this.updateMatches);\n    this.updateMatches();\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mediaQueryList.cancel();\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        render = _this$props.render;\n    var matches = this.state.matches;\n    return render ? matches ? render() : null : children ? typeof children === 'function' ? children(matches) : !Array.isArray(children) || children.length // Preact defaults to empty children array\n    ? matches ? React.Children.only(children) : null : null : null;\n  };\n\n  return Media;\n}(React.Component);\n\n_defineProperty(Media, \"defaultProps\", {\n  defaultMatches: true\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Media.propTypes = {\n    defaultMatches: PropTypes.bool,\n    query: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.arrayOf(PropTypes.object.isRequired)]).isRequired,\n    render: PropTypes.func,\n    children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n    targetWindow: PropTypes.object,\n    onChange: PropTypes.func\n  };\n}\n\nexport default Media;\n","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","exports.__esModule = true;\nvar ATTRIBUTE_NAMES = exports.ATTRIBUTE_NAMES = {\n    BODY: \"bodyAttributes\",\n    HTML: \"htmlAttributes\",\n    TITLE: \"titleAttributes\"\n};\n\nvar TAG_NAMES = exports.TAG_NAMES = {\n    BASE: \"base\",\n    BODY: \"body\",\n    HEAD: \"head\",\n    HTML: \"html\",\n    LINK: \"link\",\n    META: \"meta\",\n    NOSCRIPT: \"noscript\",\n    SCRIPT: \"script\",\n    STYLE: \"style\",\n    TITLE: \"title\"\n};\n\nvar VALID_TAG_NAMES = exports.VALID_TAG_NAMES = Object.keys(TAG_NAMES).map(function (name) {\n    return TAG_NAMES[name];\n});\n\nvar TAG_PROPERTIES = exports.TAG_PROPERTIES = {\n    CHARSET: \"charset\",\n    CSS_TEXT: \"cssText\",\n    HREF: \"href\",\n    HTTPEQUIV: \"http-equiv\",\n    INNER_HTML: \"innerHTML\",\n    ITEM_PROP: \"itemprop\",\n    NAME: \"name\",\n    PROPERTY: \"property\",\n    REL: \"rel\",\n    SRC: \"src\"\n};\n\nvar REACT_TAG_MAP = exports.REACT_TAG_MAP = {\n    accesskey: \"accessKey\",\n    charset: \"charSet\",\n    class: \"className\",\n    contenteditable: \"contentEditable\",\n    contextmenu: \"contextMenu\",\n    \"http-equiv\": \"httpEquiv\",\n    itemprop: \"itemProp\",\n    tabindex: \"tabIndex\"\n};\n\nvar HELMET_PROPS = exports.HELMET_PROPS = {\n    DEFAULT_TITLE: \"defaultTitle\",\n    DEFER: \"defer\",\n    ENCODE_SPECIAL_CHARACTERS: \"encodeSpecialCharacters\",\n    ON_CHANGE_CLIENT_STATE: \"onChangeClientState\",\n    TITLE_TEMPLATE: \"titleTemplate\"\n};\n\nvar HTML_TAG_MAP = exports.HTML_TAG_MAP = Object.keys(REACT_TAG_MAP).reduce(function (obj, key) {\n    obj[REACT_TAG_MAP[key]] = key;\n    return obj;\n}, {});\n\nvar SELF_CLOSING_TAGS = exports.SELF_CLOSING_TAGS = [TAG_NAMES.NOSCRIPT, TAG_NAMES.SCRIPT, TAG_NAMES.STYLE];\n\nvar HELMET_ATTRIBUTE = exports.HELMET_ATTRIBUTE = \"data-react-helmet\";","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nexports['default'] = function () {\n  var Snap = undefined;\n  try {\n    Snap = require('snapsvg-cjs');\n  } finally {\n    return Snap;\n  }\n};\n\nmodule.exports = exports['default'];","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;","function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;","'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar React = require('react');\nvar React__default = _interopDefault(React);\nvar ExecutionEnvironment = _interopDefault(require('exenv'));\nvar shallowEqual = _interopDefault(require('shallowequal'));\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction withSideEffect(reducePropsToState, handleStateChangeOnClient, mapStateOnServer) {\n  if (typeof reducePropsToState !== 'function') {\n    throw new Error('Expected reducePropsToState to be a function.');\n  }\n  if (typeof handleStateChangeOnClient !== 'function') {\n    throw new Error('Expected handleStateChangeOnClient to be a function.');\n  }\n  if (typeof mapStateOnServer !== 'undefined' && typeof mapStateOnServer !== 'function') {\n    throw new Error('Expected mapStateOnServer to either be undefined or a function.');\n  }\n\n  function getDisplayName(WrappedComponent) {\n    return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n  }\n\n  return function wrap(WrappedComponent) {\n    if (typeof WrappedComponent !== 'function') {\n      throw new Error('Expected WrappedComponent to be a React component.');\n    }\n\n    var mountedInstances = [];\n    var state = void 0;\n\n    function emitChange() {\n      state = reducePropsToState(mountedInstances.map(function (instance) {\n        return instance.props;\n      }));\n\n      if (SideEffect.canUseDOM) {\n        handleStateChangeOnClient(state);\n      } else if (mapStateOnServer) {\n        state = mapStateOnServer(state);\n      }\n    }\n\n    var SideEffect = function (_Component) {\n      _inherits(SideEffect, _Component);\n\n      function SideEffect() {\n        _classCallCheck(this, SideEffect);\n\n        return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n      }\n\n      // Try to use displayName of wrapped component\n      SideEffect.peek = function peek() {\n        return state;\n      };\n\n      // Expose canUseDOM so tests can monkeypatch it\n\n\n      SideEffect.rewind = function rewind() {\n        if (SideEffect.canUseDOM) {\n          throw new Error('You may only call rewind() on the server. Call peek() to read the current state.');\n        }\n\n        var recordedState = state;\n        state = undefined;\n        mountedInstances = [];\n        return recordedState;\n      };\n\n      SideEffect.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n        return !shallowEqual(nextProps, this.props);\n      };\n\n      SideEffect.prototype.componentWillMount = function componentWillMount() {\n        mountedInstances.push(this);\n        emitChange();\n      };\n\n      SideEffect.prototype.componentDidUpdate = function componentDidUpdate() {\n        emitChange();\n      };\n\n      SideEffect.prototype.componentWillUnmount = function componentWillUnmount() {\n        var index = mountedInstances.indexOf(this);\n        mountedInstances.splice(index, 1);\n        emitChange();\n      };\n\n      SideEffect.prototype.render = function render() {\n        return React__default.createElement(WrappedComponent, this.props);\n      };\n\n      return SideEffect;\n    }(React.Component);\n\n    SideEffect.displayName = 'SideEffect(' + getDisplayName(WrappedComponent) + ')';\n    SideEffect.canUseDOM = ExecutionEnvironment.canUseDOM;\n\n\n    return SideEffect;\n  };\n}\n\nmodule.exports = withSideEffect;\n","/*!\n  Copyright (c) 2015 Jed Watson.\n  Based on code that is Copyright 2013-2015, Facebook, Inc.\n  All rights reserved.\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar canUseDOM = !!(\n\t\ttypeof window !== 'undefined' &&\n\t\twindow.document &&\n\t\twindow.document.createElement\n\t);\n\n\tvar ExecutionEnvironment = {\n\n\t\tcanUseDOM: canUseDOM,\n\n\t\tcanUseWorkers: typeof Worker !== 'undefined',\n\n\t\tcanUseEventListeners:\n\t\t\tcanUseDOM && !!(window.addEventListener || window.attachEvent),\n\n\t\tcanUseViewport: canUseDOM && !!window.screen\n\n\t};\n\n\tif (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\tdefine(function () {\n\t\t\treturn ExecutionEnvironment;\n\t\t});\n\t} else if (typeof module !== 'undefined' && module.exports) {\n\t\tmodule.exports = ExecutionEnvironment;\n\t} else {\n\t\twindow.ExecutionEnvironment = ExecutionEnvironment;\n\t}\n\n}());\n","//\n\nmodule.exports = function shallowEqual(objA, objB, compare, compareContext) {\n  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;\n\n  if (ret !== void 0) {\n    return !!ret;\n  }\n\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== \"object\" || !objA || typeof objB !== \"object\" || !objB) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n\n  // Test for A's keys different from B.\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key)) {\n      return false;\n    }\n\n    var valueA = objA[key];\n    var valueB = objB[key];\n\n    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;\n\n    if (ret === false || (ret === void 0 && valueA !== valueB)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n","var pSlice = Array.prototype.slice;\nvar objectKeys = require('./lib/keys.js');\nvar isArguments = require('./lib/is_arguments.js');\n\nvar deepEqual = module.exports = function (actual, expected, opts) {\n  if (!opts) opts = {};\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n    return opts.strict ? actual === expected : actual == expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected, opts);\n  }\n}\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isBuffer (x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') return false;\n  return true;\n}\n\nfunction objEquiv(a, b, opts) {\n  var i, key;\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b, opts);\n  }\n  if (isBuffer(a)) {\n    if (!isBuffer(b)) {\n      return false;\n    }\n    if (a.length !== b.length) return false;\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n  try {\n    var ka = objectKeys(a),\n        kb = objectKeys(b);\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], opts)) return false;\n  }\n  return typeof a === typeof b;\n}\n","exports = module.exports = typeof Object.keys === 'function'\n  ? Object.keys : shim;\n\nexports.shim = shim;\nfunction shim (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n","var supportsArgumentsClass = (function(){\n  return Object.prototype.toString.call(arguments)\n})() == '[object Arguments]';\n\nexports = module.exports = supportsArgumentsClass ? supported : unsupported;\n\nexports.supported = supported;\nfunction supported(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n};\n\nexports.unsupported = unsupported;\nfunction unsupported(object){\n  return object &&\n    typeof object == 'object' &&\n    typeof object.length == 'number' &&\n    Object.prototype.hasOwnProperty.call(object, 'callee') &&\n    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||\n    false;\n};\n","exports.__esModule = true;\nexports.warn = exports.requestAnimationFrame = exports.reducePropsToState = exports.mapStateOnServer = exports.handleClientStateChange = exports.convertReactPropstoHtmlAttributes = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _objectAssign = require(\"object-assign\");\n\nvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\nvar _HelmetConstants = require(\"./HelmetConstants.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar encodeSpecialCharacters = function encodeSpecialCharacters(str) {\n    var encode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    if (encode === false) {\n        return String(str);\n    }\n\n    return String(str).replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#x27;\");\n};\n\nvar getTitleFromPropsList = function getTitleFromPropsList(propsList) {\n    var innermostTitle = getInnermostProperty(propsList, _HelmetConstants.TAG_NAMES.TITLE);\n    var innermostTemplate = getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.TITLE_TEMPLATE);\n\n    if (innermostTemplate && innermostTitle) {\n        // use function arg to avoid need to escape $ characters\n        return innermostTemplate.replace(/%s/g, function () {\n            return innermostTitle;\n        });\n    }\n\n    var innermostDefaultTitle = getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.DEFAULT_TITLE);\n\n    return innermostTitle || innermostDefaultTitle || undefined;\n};\n\nvar getOnChangeClientState = function getOnChangeClientState(propsList) {\n    return getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.ON_CHANGE_CLIENT_STATE) || function () {};\n};\n\nvar getAttributesFromPropsList = function getAttributesFromPropsList(tagType, propsList) {\n    return propsList.filter(function (props) {\n        return typeof props[tagType] !== \"undefined\";\n    }).map(function (props) {\n        return props[tagType];\n    }).reduce(function (tagAttrs, current) {\n        return _extends({}, tagAttrs, current);\n    }, {});\n};\n\nvar getBaseTagFromPropsList = function getBaseTagFromPropsList(primaryAttributes, propsList) {\n    return propsList.filter(function (props) {\n        return typeof props[_HelmetConstants.TAG_NAMES.BASE] !== \"undefined\";\n    }).map(function (props) {\n        return props[_HelmetConstants.TAG_NAMES.BASE];\n    }).reverse().reduce(function (innermostBaseTag, tag) {\n        if (!innermostBaseTag.length) {\n            var keys = Object.keys(tag);\n\n            for (var i = 0; i < keys.length; i++) {\n                var attributeKey = keys[i];\n                var lowerCaseAttributeKey = attributeKey.toLowerCase();\n\n                if (primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 && tag[lowerCaseAttributeKey]) {\n                    return innermostBaseTag.concat(tag);\n                }\n            }\n        }\n\n        return innermostBaseTag;\n    }, []);\n};\n\nvar getTagsFromPropsList = function getTagsFromPropsList(tagName, primaryAttributes, propsList) {\n    // Calculate list of tags, giving priority innermost component (end of the propslist)\n    var approvedSeenTags = {};\n\n    return propsList.filter(function (props) {\n        if (Array.isArray(props[tagName])) {\n            return true;\n        }\n        if (typeof props[tagName] !== \"undefined\") {\n            warn(\"Helmet: \" + tagName + \" should be of type \\\"Array\\\". Instead found type \\\"\" + _typeof(props[tagName]) + \"\\\"\");\n        }\n        return false;\n    }).map(function (props) {\n        return props[tagName];\n    }).reverse().reduce(function (approvedTags, instanceTags) {\n        var instanceSeenTags = {};\n\n        instanceTags.filter(function (tag) {\n            var primaryAttributeKey = void 0;\n            var keys = Object.keys(tag);\n            for (var i = 0; i < keys.length; i++) {\n                var attributeKey = keys[i];\n                var lowerCaseAttributeKey = attributeKey.toLowerCase();\n\n                // Special rule with link tags, since rel and href are both primary tags, rel takes priority\n                if (primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 && !(primaryAttributeKey === _HelmetConstants.TAG_PROPERTIES.REL && tag[primaryAttributeKey].toLowerCase() === \"canonical\") && !(lowerCaseAttributeKey === _HelmetConstants.TAG_PROPERTIES.REL && tag[lowerCaseAttributeKey].toLowerCase() === \"stylesheet\")) {\n                    primaryAttributeKey = lowerCaseAttributeKey;\n                }\n                // Special case for innerHTML which doesn't work lowercased\n                if (primaryAttributes.indexOf(attributeKey) !== -1 && (attributeKey === _HelmetConstants.TAG_PROPERTIES.INNER_HTML || attributeKey === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT || attributeKey === _HelmetConstants.TAG_PROPERTIES.ITEM_PROP)) {\n                    primaryAttributeKey = attributeKey;\n                }\n            }\n\n            if (!primaryAttributeKey || !tag[primaryAttributeKey]) {\n                return false;\n            }\n\n            var value = tag[primaryAttributeKey].toLowerCase();\n\n            if (!approvedSeenTags[primaryAttributeKey]) {\n                approvedSeenTags[primaryAttributeKey] = {};\n            }\n\n            if (!instanceSeenTags[primaryAttributeKey]) {\n                instanceSeenTags[primaryAttributeKey] = {};\n            }\n\n            if (!approvedSeenTags[primaryAttributeKey][value]) {\n                instanceSeenTags[primaryAttributeKey][value] = true;\n                return true;\n            }\n\n            return false;\n        }).reverse().forEach(function (tag) {\n            return approvedTags.push(tag);\n        });\n\n        // Update seen tags with tags from this instance\n        var keys = Object.keys(instanceSeenTags);\n        for (var i = 0; i < keys.length; i++) {\n            var attributeKey = keys[i];\n            var tagUnion = (0, _objectAssign2.default)({}, approvedSeenTags[attributeKey], instanceSeenTags[attributeKey]);\n\n            approvedSeenTags[attributeKey] = tagUnion;\n        }\n\n        return approvedTags;\n    }, []).reverse();\n};\n\nvar getInnermostProperty = function getInnermostProperty(propsList, property) {\n    for (var i = propsList.length - 1; i >= 0; i--) {\n        var props = propsList[i];\n\n        if (props.hasOwnProperty(property)) {\n            return props[property];\n        }\n    }\n\n    return null;\n};\n\nvar reducePropsToState = function reducePropsToState(propsList) {\n    return {\n        baseTag: getBaseTagFromPropsList([_HelmetConstants.TAG_PROPERTIES.HREF], propsList),\n        bodyAttributes: getAttributesFromPropsList(_HelmetConstants.ATTRIBUTE_NAMES.BODY, propsList),\n        defer: getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.DEFER),\n        encode: getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.ENCODE_SPECIAL_CHARACTERS),\n        htmlAttributes: getAttributesFromPropsList(_HelmetConstants.ATTRIBUTE_NAMES.HTML, propsList),\n        linkTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.LINK, [_HelmetConstants.TAG_PROPERTIES.REL, _HelmetConstants.TAG_PROPERTIES.HREF], propsList),\n        metaTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.META, [_HelmetConstants.TAG_PROPERTIES.NAME, _HelmetConstants.TAG_PROPERTIES.CHARSET, _HelmetConstants.TAG_PROPERTIES.HTTPEQUIV, _HelmetConstants.TAG_PROPERTIES.PROPERTY, _HelmetConstants.TAG_PROPERTIES.ITEM_PROP], propsList),\n        noscriptTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.NOSCRIPT, [_HelmetConstants.TAG_PROPERTIES.INNER_HTML], propsList),\n        onChangeClientState: getOnChangeClientState(propsList),\n        scriptTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.SCRIPT, [_HelmetConstants.TAG_PROPERTIES.SRC, _HelmetConstants.TAG_PROPERTIES.INNER_HTML], propsList),\n        styleTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.STYLE, [_HelmetConstants.TAG_PROPERTIES.CSS_TEXT], propsList),\n        title: getTitleFromPropsList(propsList),\n        titleAttributes: getAttributesFromPropsList(_HelmetConstants.ATTRIBUTE_NAMES.TITLE, propsList)\n    };\n};\n\nvar rafPolyfill = function () {\n    var clock = Date.now();\n\n    return function (callback) {\n        var currentTime = Date.now();\n\n        if (currentTime - clock > 16) {\n            clock = currentTime;\n            callback(currentTime);\n        } else {\n            setTimeout(function () {\n                rafPolyfill(callback);\n            }, 0);\n        }\n    };\n}();\n\nvar cafPolyfill = function cafPolyfill(id) {\n    return clearTimeout(id);\n};\n\nvar requestAnimationFrame = typeof window !== \"undefined\" ? window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || rafPolyfill : global.requestAnimationFrame || rafPolyfill;\n\nvar cancelAnimationFrame = typeof window !== \"undefined\" ? window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || cafPolyfill : global.cancelAnimationFrame || cafPolyfill;\n\nvar warn = function warn(msg) {\n    return console && typeof console.warn === \"function\" && console.warn(msg);\n};\n\nvar _helmetCallback = null;\n\nvar handleClientStateChange = function handleClientStateChange(newState) {\n    if (_helmetCallback) {\n        cancelAnimationFrame(_helmetCallback);\n    }\n\n    if (newState.defer) {\n        _helmetCallback = requestAnimationFrame(function () {\n            commitTagChanges(newState, function () {\n                _helmetCallback = null;\n            });\n        });\n    } else {\n        commitTagChanges(newState);\n        _helmetCallback = null;\n    }\n};\n\nvar commitTagChanges = function commitTagChanges(newState, cb) {\n    var baseTag = newState.baseTag,\n        bodyAttributes = newState.bodyAttributes,\n        htmlAttributes = newState.htmlAttributes,\n        linkTags = newState.linkTags,\n        metaTags = newState.metaTags,\n        noscriptTags = newState.noscriptTags,\n        onChangeClientState = newState.onChangeClientState,\n        scriptTags = newState.scriptTags,\n        styleTags = newState.styleTags,\n        title = newState.title,\n        titleAttributes = newState.titleAttributes;\n\n    updateAttributes(_HelmetConstants.TAG_NAMES.BODY, bodyAttributes);\n    updateAttributes(_HelmetConstants.TAG_NAMES.HTML, htmlAttributes);\n\n    updateTitle(title, titleAttributes);\n\n    var tagUpdates = {\n        baseTag: updateTags(_HelmetConstants.TAG_NAMES.BASE, baseTag),\n        linkTags: updateTags(_HelmetConstants.TAG_NAMES.LINK, linkTags),\n        metaTags: updateTags(_HelmetConstants.TAG_NAMES.META, metaTags),\n        noscriptTags: updateTags(_HelmetConstants.TAG_NAMES.NOSCRIPT, noscriptTags),\n        scriptTags: updateTags(_HelmetConstants.TAG_NAMES.SCRIPT, scriptTags),\n        styleTags: updateTags(_HelmetConstants.TAG_NAMES.STYLE, styleTags)\n    };\n\n    var addedTags = {};\n    var removedTags = {};\n\n    Object.keys(tagUpdates).forEach(function (tagType) {\n        var _tagUpdates$tagType = tagUpdates[tagType],\n            newTags = _tagUpdates$tagType.newTags,\n            oldTags = _tagUpdates$tagType.oldTags;\n\n\n        if (newTags.length) {\n            addedTags[tagType] = newTags;\n        }\n        if (oldTags.length) {\n            removedTags[tagType] = tagUpdates[tagType].oldTags;\n        }\n    });\n\n    cb && cb();\n\n    onChangeClientState(newState, addedTags, removedTags);\n};\n\nvar flattenArray = function flattenArray(possibleArray) {\n    return Array.isArray(possibleArray) ? possibleArray.join(\"\") : possibleArray;\n};\n\nvar updateTitle = function updateTitle(title, attributes) {\n    if (typeof title !== \"undefined\" && document.title !== title) {\n        document.title = flattenArray(title);\n    }\n\n    updateAttributes(_HelmetConstants.TAG_NAMES.TITLE, attributes);\n};\n\nvar updateAttributes = function updateAttributes(tagName, attributes) {\n    var elementTag = document.getElementsByTagName(tagName)[0];\n\n    if (!elementTag) {\n        return;\n    }\n\n    var helmetAttributeString = elementTag.getAttribute(_HelmetConstants.HELMET_ATTRIBUTE);\n    var helmetAttributes = helmetAttributeString ? helmetAttributeString.split(\",\") : [];\n    var attributesToRemove = [].concat(helmetAttributes);\n    var attributeKeys = Object.keys(attributes);\n\n    for (var i = 0; i < attributeKeys.length; i++) {\n        var attribute = attributeKeys[i];\n        var value = attributes[attribute] || \"\";\n\n        if (elementTag.getAttribute(attribute) !== value) {\n            elementTag.setAttribute(attribute, value);\n        }\n\n        if (helmetAttributes.indexOf(attribute) === -1) {\n            helmetAttributes.push(attribute);\n        }\n\n        var indexToSave = attributesToRemove.indexOf(attribute);\n        if (indexToSave !== -1) {\n            attributesToRemove.splice(indexToSave, 1);\n        }\n    }\n\n    for (var _i = attributesToRemove.length - 1; _i >= 0; _i--) {\n        elementTag.removeAttribute(attributesToRemove[_i]);\n    }\n\n    if (helmetAttributes.length === attributesToRemove.length) {\n        elementTag.removeAttribute(_HelmetConstants.HELMET_ATTRIBUTE);\n    } else if (elementTag.getAttribute(_HelmetConstants.HELMET_ATTRIBUTE) !== attributeKeys.join(\",\")) {\n        elementTag.setAttribute(_HelmetConstants.HELMET_ATTRIBUTE, attributeKeys.join(\",\"));\n    }\n};\n\nvar updateTags = function updateTags(type, tags) {\n    var headElement = document.head || document.querySelector(_HelmetConstants.TAG_NAMES.HEAD);\n    var tagNodes = headElement.querySelectorAll(type + \"[\" + _HelmetConstants.HELMET_ATTRIBUTE + \"]\");\n    var oldTags = Array.prototype.slice.call(tagNodes);\n    var newTags = [];\n    var indexToDelete = void 0;\n\n    if (tags && tags.length) {\n        tags.forEach(function (tag) {\n            var newElement = document.createElement(type);\n\n            for (var attribute in tag) {\n                if (tag.hasOwnProperty(attribute)) {\n                    if (attribute === _HelmetConstants.TAG_PROPERTIES.INNER_HTML) {\n                        newElement.innerHTML = tag.innerHTML;\n                    } else if (attribute === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT) {\n                        if (newElement.styleSheet) {\n                            newElement.styleSheet.cssText = tag.cssText;\n                        } else {\n                            newElement.appendChild(document.createTextNode(tag.cssText));\n                        }\n                    } else {\n                        var value = typeof tag[attribute] === \"undefined\" ? \"\" : tag[attribute];\n                        newElement.setAttribute(attribute, value);\n                    }\n                }\n            }\n\n            newElement.setAttribute(_HelmetConstants.HELMET_ATTRIBUTE, \"true\");\n\n            // Remove a duplicate tag from domTagstoRemove, so it isn't cleared.\n            if (oldTags.some(function (existingTag, index) {\n                indexToDelete = index;\n                return newElement.isEqualNode(existingTag);\n            })) {\n                oldTags.splice(indexToDelete, 1);\n            } else {\n                newTags.push(newElement);\n            }\n        });\n    }\n\n    oldTags.forEach(function (tag) {\n        return tag.parentNode.removeChild(tag);\n    });\n    newTags.forEach(function (tag) {\n        return headElement.appendChild(tag);\n    });\n\n    return {\n        oldTags: oldTags,\n        newTags: newTags\n    };\n};\n\nvar generateElementAttributesAsString = function generateElementAttributesAsString(attributes) {\n    return Object.keys(attributes).reduce(function (str, key) {\n        var attr = typeof attributes[key] !== \"undefined\" ? key + \"=\\\"\" + attributes[key] + \"\\\"\" : \"\" + key;\n        return str ? str + \" \" + attr : attr;\n    }, \"\");\n};\n\nvar generateTitleAsString = function generateTitleAsString(type, title, attributes, encode) {\n    var attributeString = generateElementAttributesAsString(attributes);\n    var flattenedTitle = flattenArray(title);\n    return attributeString ? \"<\" + type + \" \" + _HelmetConstants.HELMET_ATTRIBUTE + \"=\\\"true\\\" \" + attributeString + \">\" + encodeSpecialCharacters(flattenedTitle, encode) + \"</\" + type + \">\" : \"<\" + type + \" \" + _HelmetConstants.HELMET_ATTRIBUTE + \"=\\\"true\\\">\" + encodeSpecialCharacters(flattenedTitle, encode) + \"</\" + type + \">\";\n};\n\nvar generateTagsAsString = function generateTagsAsString(type, tags, encode) {\n    return tags.reduce(function (str, tag) {\n        var attributeHtml = Object.keys(tag).filter(function (attribute) {\n            return !(attribute === _HelmetConstants.TAG_PROPERTIES.INNER_HTML || attribute === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT);\n        }).reduce(function (string, attribute) {\n            var attr = typeof tag[attribute] === \"undefined\" ? attribute : attribute + \"=\\\"\" + encodeSpecialCharacters(tag[attribute], encode) + \"\\\"\";\n            return string ? string + \" \" + attr : attr;\n        }, \"\");\n\n        var tagContent = tag.innerHTML || tag.cssText || \"\";\n\n        var isSelfClosing = _HelmetConstants.SELF_CLOSING_TAGS.indexOf(type) === -1;\n\n        return str + \"<\" + type + \" \" + _HelmetConstants.HELMET_ATTRIBUTE + \"=\\\"true\\\" \" + attributeHtml + (isSelfClosing ? \"/>\" : \">\" + tagContent + \"</\" + type + \">\");\n    }, \"\");\n};\n\nvar convertElementAttributestoReactProps = function convertElementAttributestoReactProps(attributes) {\n    var initProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    return Object.keys(attributes).reduce(function (obj, key) {\n        obj[_HelmetConstants.REACT_TAG_MAP[key] || key] = attributes[key];\n        return obj;\n    }, initProps);\n};\n\nvar convertReactPropstoHtmlAttributes = function convertReactPropstoHtmlAttributes(props) {\n    var initAttributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    return Object.keys(props).reduce(function (obj, key) {\n        obj[_HelmetConstants.HTML_TAG_MAP[key] || key] = props[key];\n        return obj;\n    }, initAttributes);\n};\n\nvar generateTitleAsReactComponent = function generateTitleAsReactComponent(type, title, attributes) {\n    var _initProps;\n\n    // assigning into an array to define toString function on it\n    var initProps = (_initProps = {\n        key: title\n    }, _initProps[_HelmetConstants.HELMET_ATTRIBUTE] = true, _initProps);\n    var props = convertElementAttributestoReactProps(attributes, initProps);\n\n    return [_react2.default.createElement(_HelmetConstants.TAG_NAMES.TITLE, props, title)];\n};\n\nvar generateTagsAsReactComponent = function generateTagsAsReactComponent(type, tags) {\n    return tags.map(function (tag, i) {\n        var _mappedTag;\n\n        var mappedTag = (_mappedTag = {\n            key: i\n        }, _mappedTag[_HelmetConstants.HELMET_ATTRIBUTE] = true, _mappedTag);\n\n        Object.keys(tag).forEach(function (attribute) {\n            var mappedAttribute = _HelmetConstants.REACT_TAG_MAP[attribute] || attribute;\n\n            if (mappedAttribute === _HelmetConstants.TAG_PROPERTIES.INNER_HTML || mappedAttribute === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT) {\n                var content = tag.innerHTML || tag.cssText;\n                mappedTag.dangerouslySetInnerHTML = { __html: content };\n            } else {\n                mappedTag[mappedAttribute] = tag[attribute];\n            }\n        });\n\n        return _react2.default.createElement(type, mappedTag);\n    });\n};\n\nvar getMethodsForTag = function getMethodsForTag(type, tags, encode) {\n    switch (type) {\n        case _HelmetConstants.TAG_NAMES.TITLE:\n            return {\n                toComponent: function toComponent() {\n                    return generateTitleAsReactComponent(type, tags.title, tags.titleAttributes, encode);\n                },\n                toString: function toString() {\n                    return generateTitleAsString(type, tags.title, tags.titleAttributes, encode);\n                }\n            };\n        case _HelmetConstants.ATTRIBUTE_NAMES.BODY:\n        case _HelmetConstants.ATTRIBUTE_NAMES.HTML:\n            return {\n                toComponent: function toComponent() {\n                    return convertElementAttributestoReactProps(tags);\n                },\n                toString: function toString() {\n                    return generateElementAttributesAsString(tags);\n                }\n            };\n        default:\n            return {\n                toComponent: function toComponent() {\n                    return generateTagsAsReactComponent(type, tags);\n                },\n                toString: function toString() {\n                    return generateTagsAsString(type, tags, encode);\n                }\n            };\n    }\n};\n\nvar mapStateOnServer = function mapStateOnServer(_ref) {\n    var baseTag = _ref.baseTag,\n        bodyAttributes = _ref.bodyAttributes,\n        encode = _ref.encode,\n        htmlAttributes = _ref.htmlAttributes,\n        linkTags = _ref.linkTags,\n        metaTags = _ref.metaTags,\n        noscriptTags = _ref.noscriptTags,\n        scriptTags = _ref.scriptTags,\n        styleTags = _ref.styleTags,\n        _ref$title = _ref.title,\n        title = _ref$title === undefined ? \"\" : _ref$title,\n        titleAttributes = _ref.titleAttributes;\n    return {\n        base: getMethodsForTag(_HelmetConstants.TAG_NAMES.BASE, baseTag, encode),\n        bodyAttributes: getMethodsForTag(_HelmetConstants.ATTRIBUTE_NAMES.BODY, bodyAttributes, encode),\n        htmlAttributes: getMethodsForTag(_HelmetConstants.ATTRIBUTE_NAMES.HTML, htmlAttributes, encode),\n        link: getMethodsForTag(_HelmetConstants.TAG_NAMES.LINK, linkTags, encode),\n        meta: getMethodsForTag(_HelmetConstants.TAG_NAMES.META, metaTags, encode),\n        noscript: getMethodsForTag(_HelmetConstants.TAG_NAMES.NOSCRIPT, noscriptTags, encode),\n        script: getMethodsForTag(_HelmetConstants.TAG_NAMES.SCRIPT, scriptTags, encode),\n        style: getMethodsForTag(_HelmetConstants.TAG_NAMES.STYLE, styleTags, encode),\n        title: getMethodsForTag(_HelmetConstants.TAG_NAMES.TITLE, { title: title, titleAttributes: titleAttributes }, encode)\n    };\n};\n\nexports.convertReactPropstoHtmlAttributes = convertReactPropstoHtmlAttributes;\nexports.handleClientStateChange = handleClientStateChange;\nexports.mapStateOnServer = mapStateOnServer;\nexports.reducePropsToState = reducePropsToState;\nexports.requestAnimationFrame = requestAnimationFrame;\nexports.warn = warn;","var camel2hyphen = require('string-convert/camel2hyphen');\n\nvar isDimension = function (feature) {\n  var re = /[height|width]$/;\n  return re.test(feature);\n};\n\nvar obj2mq = function (obj) {\n  var mq = '';\n  var features = Object.keys(obj);\n  features.forEach(function (feature, index) {\n    var value = obj[feature];\n    feature = camel2hyphen(feature);\n    // Add px to dimension features\n    if (isDimension(feature) && typeof value === 'number') {\n      value = value + 'px';\n    }\n    if (value === true) {\n      mq += feature;\n    } else if (value === false) {\n      mq += 'not ' + feature;\n    } else {\n      mq += '(' + feature + ': ' + value + ')';\n    }\n    if (index < features.length-1) {\n      mq += ' and '\n    }\n  });\n  return mq;\n};\n\nvar json2mq = function (query) {\n  var mq = '';\n  if (typeof query === 'string') {\n    return query;\n  }\n  // Handling array of media queries\n  if (query instanceof Array) {\n    query.forEach(function (q, index) {\n      mq += obj2mq(q);\n      if (index < query.length-1) {\n        mq += ', '\n      }\n    });\n    return mq;\n  }\n  // Handling single media query\n  return obj2mq(query);\n};\n\nmodule.exports = json2mq;","var camel2hyphen = function (str) {\n  return str\n          .replace(/[A-Z]/g, function (match) {\n            return '-' + match.toLowerCase();\n          })\n          .toLowerCase();\n};\n\nmodule.exports = camel2hyphen;","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports['default'] = {\n  slide: require('./menus/slide'),\n  stack: require('./menus/stack'),\n  elastic: require('./menus/elastic'),\n  bubble: require('./menus/bubble'),\n  push: require('./menus/push'),\n  pushRotate: require('./menus/pushRotate'),\n  scaleDown: require('./menus/scaleDown'),\n  scaleRotate: require('./menus/scaleRotate'),\n  fallDown: require('./menus/fallDown'),\n  reveal: require('./menus/reveal')\n};\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar styles = {\n  overlay: function overlay(isOpen) {\n    return {\n      position: 'fixed',\n      zIndex: 1000,\n      width: '100%',\n      height: '100%',\n      background: 'rgba(0, 0, 0, 0.3)',\n      opacity: isOpen ? 1 : 0,\n      MozTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      MsTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      OTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      WebkitTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      transform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      transition: isOpen ? 'opacity 0.3s' : 'opacity 0.3s, transform 0s 0.3s'\n    };\n  },\n\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      position: 'fixed',\n      right: right ? 0 : 'inherit',\n      zIndex: 1100,\n      width: width,\n      height: '100%',\n      MozTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transition: 'all 0.5s'\n    };\n  },\n\n  menu: function menu(height) {\n    return {\n      height: height,\n      boxSizing: 'border-box',\n      overflow: 'auto'\n    };\n  },\n\n  itemList: function itemList() {\n    return {\n      height: '100%'\n    };\n  },\n\n  item: function item() {\n    return {\n      display: 'block',\n      outline: 'none'\n    };\n  }\n};\n\nexports['default'] = styles;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar BurgerIcon = (function (_Component) {\n  _inherits(BurgerIcon, _Component);\n\n  function BurgerIcon(props) {\n    _classCallCheck(this, BurgerIcon);\n\n    _get(Object.getPrototypeOf(BurgerIcon.prototype), 'constructor', this).call(this, props);\n    this.state = {\n      hover: false\n    };\n  }\n\n  _createClass(BurgerIcon, [{\n    key: 'getLineStyle',\n    value: function getLineStyle(index) {\n      return {\n        position: 'absolute',\n        height: '20%',\n        left: 0,\n        right: 0,\n        top: 20 * (index * 2) + '%',\n        opacity: this.state.hover ? 0.6 : 1\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this = this;\n\n      var icon = undefined;\n      var buttonStyle = {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        width: '100%',\n        height: '100%',\n        margin: 0,\n        padding: 0,\n        border: 'none',\n        opacity: 0,\n        fontSize: 8,\n        cursor: 'pointer'\n      };\n\n      if (this.props.customIcon) {\n        var extraProps = {\n          className: 'bm-icon',\n          style: _extends({ width: '100%', height: '100%' }, this.props.styles.bmIcon)\n        };\n        icon = _react2['default'].cloneElement(this.props.customIcon, extraProps);\n      } else {\n        icon = _react2['default'].createElement(\n          'span',\n          null,\n          [0, 1, 2].map(function (bar) {\n            return _react2['default'].createElement('span', {\n              key: bar,\n              className: ('bm-burger-bars ' + _this.props.barClassName).trim(),\n              style: _extends({}, _this.getLineStyle(bar), _this.props.styles.bmBurgerBars)\n            });\n          })\n        );\n      }\n\n      return _react2['default'].createElement(\n        'div',\n        {\n          className: ('bm-burger-button ' + this.props.className).trim(),\n          style: _extends({ zIndex: 1000 }, this.props.styles.bmBurgerButton)\n        },\n        icon,\n        _react2['default'].createElement(\n          'button',\n          {\n            onClick: this.props.onClick,\n            onMouseOver: function () {\n              return _this.setState({ hover: true });\n            },\n            onMouseOut: function () {\n              return _this.setState({ hover: false });\n            },\n            style: buttonStyle\n          },\n          'Open Menu'\n        )\n      );\n    }\n  }]);\n\n  return BurgerIcon;\n})(_react.Component);\n\nexports['default'] = BurgerIcon;\n\nBurgerIcon.propTypes = {\n  barClassName: _propTypes2['default'].string,\n  customIcon: _propTypes2['default'].element,\n  styles: _propTypes2['default'].object\n};\n\nBurgerIcon.defaultProps = {\n  barClassName: '',\n  className: '',\n  styles: {}\n};\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar CrossIcon = (function (_Component) {\n  _inherits(CrossIcon, _Component);\n\n  function CrossIcon() {\n    _classCallCheck(this, CrossIcon);\n\n    _get(Object.getPrototypeOf(CrossIcon.prototype), 'constructor', this).apply(this, arguments);\n  }\n\n  _createClass(CrossIcon, [{\n    key: 'getCrossStyle',\n    value: function getCrossStyle(type) {\n      return {\n        position: 'absolute',\n        transform: type === 'before' ? 'rotate(45deg)' : 'rotate(-45deg)'\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this = this;\n\n      var icon;\n      var buttonWrapperStyle = {\n      };\n      var buttonStyle = {\n      };\n\n      if (this.props.customIcon) {\n        var extraProps = {\n          className: 'bm-cross',\n          style: _extends({ width: '100%', height: '100%' }, this.props.styles.bmCross)\n        };\n        icon = _react2['default'].cloneElement(this.props.customIcon, extraProps);\n      } else {\n        icon = _react2['default'].createElement(\n          'span',\n          { style: { position: 'absolute', top: '15px', right: '28px' } },\n          ['before', 'after'].map(function (type, i) {\n            return _react2['default'].createElement('span', {\n              key: i,\n              className: ('bm-cross ' + _this.props.crossClassName).trim(),\n              style: _extends({}, _this.getCrossStyle(type), _this.props.styles.bmCross)\n            });\n          })\n        );\n      }\n\n      return _react2['default'].createElement(\n        'div',\n        {\n          className: ('bm-cross-button ' + this.props.className).trim(),\n          style: _extends({}, buttonWrapperStyle, this.props.styles.bmCrossButton)\n        },\n        icon,\n      );\n    }\n  }]);\n\n  return CrossIcon;\n})(_react.Component);\n\nexports['default'] = CrossIcon;\n\nCrossIcon.propTypes = {\n  crossClassName: _propTypes2['default'].string,\n  customIcon: _propTypes2['default'].element,\n  styles: _propTypes2['default'].object\n};\n\nCrossIcon.defaultProps = {\n  crossClassName: '',\n  className: '',\n  styles: {}\n};\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'transform 0.8s cubic-bezier(0.7, 0, 0.3, 1)' : 'transform 0.4s cubic-bezier(0.7, 0, 0.3, 1)'\n    };\n  },\n\n  item: function item(isOpen, width, right, nthChild) {\n    return {\n      MozTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      MsTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      OTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      WebkitTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      transform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      transition: isOpen ? 'transform 0.8s cubic-bezier(0.7, 0, 0.3, 1)' : 'transform 0s 0.2s cubic-bezier(0.7, 0, 0.3, 1)'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _snapsvgImporter = require('../snapsvgImporter');\n\nvar _snapsvgImporter2 = _interopRequireDefault(_snapsvgImporter);\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  svg: {\n    lib: _snapsvgImporter2['default'],\n    pathInitial: 'M-1,0h101c0,0-97.833,153.603-97.833,396.167C2.167,627.579,100,800,100,800H-1V0z',\n    pathOpen: 'M-1,0h101c0,0,0-1,0,395c0,404,0,405,0,405H-1V0z',\n    animate: function animate(path) {\n      path.animate({ path: this.pathOpen }, 400, window.mina.easeinout);\n    }\n  },\n\n  morphShape: function morphShape(isOpen, width, right) {\n    return {\n      position: 'absolute',\n      width: 120,\n      height: '100%',\n      right: right ? 'inherit' : 0,\n      left: right ? 0 : 'inherit',\n      MozTransform: right ? 'rotateY(180deg)' : '',\n      MsTransform: right ? 'rotateY(180deg)' : '',\n      OTransform: right ? 'rotateY(180deg)' : '',\n      WebkitTransform: right ? 'rotateY(180deg)' : '',\n      transform: right ? 'rotateY(180deg)' : ''\n    };\n  },\n\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transition: 'all 0.3s'\n    };\n  },\n\n  menu: function menu(isOpen, width, right) {\n    return {\n      position: 'fixed',\n      right: right ? 0 : 'inherit',\n      width: 180,\n      whiteSpace: 'nowrap',\n      boxSizing: 'border-box',\n      overflow: 'visible'\n    };\n  },\n\n  itemList: function itemList(isOpen, width, right) {\n    if (right) {\n      return {\n        position: 'relative',\n        left: '-110px',\n        width: '170%',\n        overflow: 'auto'\n      };\n    }\n  },\n\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      transition: isOpen ? 'all 0.3s' : 'all 0.3s 0.1s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","window.eve = require('eve')\n\n// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar mina = (function (eve) {\n    var animations = {},\n    requestAnimFrame = window.requestAnimationFrame       ||\n                       window.webkitRequestAnimationFrame ||\n                       window.mozRequestAnimationFrame    ||\n                       window.oRequestAnimationFrame      ||\n                       window.msRequestAnimationFrame     ||\n                       function (callback) {\n                           setTimeout(callback, 16, new Date().getTime());\n                           return true;\n                       },\n    requestID,\n    isArray = Array.isArray || function (a) {\n        return a instanceof Array ||\n            Object.prototype.toString.call(a) == \"[object Array]\";\n    },\n    idgen = 0,\n    idprefix = \"M\" + (+new Date).toString(36),\n    ID = function () {\n        return idprefix + (idgen++).toString(36);\n    },\n    diff = function (a, b, A, B) {\n        if (isArray(a)) {\n            res = [];\n            for (var i = 0, ii = a.length; i < ii; i++) {\n                res[i] = diff(a[i], b, A[i], B);\n            }\n            return res;\n        }\n        var dif = (A - a) / (B - b);\n        return function (bb) {\n            return a + dif * (bb - b);\n        };\n    },\n    timer = Date.now || function () {\n        return +new Date;\n    },\n    sta = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.s;\n        }\n        var ds = a.s - val;\n        a.b += a.dur * ds;\n        a.B += a.dur * ds;\n        a.s = val;\n    },\n    speed = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.spd;\n        }\n        a.spd = val;\n    },\n    duration = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.dur;\n        }\n        a.s = a.s * val / a.dur;\n        a.dur = val;\n    },\n    stopit = function () {\n        var a = this;\n        delete animations[a.id];\n        a.update();\n        eve(\"mina.stop.\" + a.id, a);\n    },\n    pause = function () {\n        var a = this;\n        if (a.pdif) {\n            return;\n        }\n        delete animations[a.id];\n        a.update();\n        a.pdif = a.get() - a.b;\n    },\n    resume = function () {\n        var a = this;\n        if (!a.pdif) {\n            return;\n        }\n        a.b = a.get() - a.pdif;\n        delete a.pdif;\n        animations[a.id] = a;\n        frame();\n    },\n    update = function () {\n        var a = this,\n            res;\n        if (isArray(a.start)) {\n            res = [];\n            for (var j = 0, jj = a.start.length; j < jj; j++) {\n                res[j] = +a.start[j] +\n                    (a.end[j] - a.start[j]) * a.easing(a.s);\n            }\n        } else {\n            res = +a.start + (a.end - a.start) * a.easing(a.s);\n        }\n        a.set(res);\n    },\n    frame = function (timeStamp) {\n        // Manual invokation?\n        if (!timeStamp) {\n            // Frame loop stopped?\n            if (!requestID) {\n                // Start frame loop...\n                requestID = requestAnimFrame(frame);\n            }\n            return;\n        }\n        var len = 0;\n        for (var i in animations) if (animations.hasOwnProperty(i)) {\n            var a = animations[i],\n                b = a.get(),\n                res;\n            len++;\n            a.s = (b - a.b) / (a.dur / a.spd);\n            if (a.s >= 1) {\n                delete animations[i];\n                a.s = 1;\n                len--;\n                (function (a) {\n                    setTimeout(function () {\n                        eve(\"mina.finish.\" + a.id, a);\n                    });\n                }(a));\n            }\n            a.update();\n        }\n        requestID = len ? requestAnimFrame(frame) : false;\n    },\n    /*\\\n     * mina\n     [ method ]\n     **\n     * Generic animation of numbers\n     **\n     - a (number) start _slave_ number\n     - A (number) end _slave_ number\n     - b (number) start _master_ number (start time in general case)\n     - B (number) end _master_ number (end time in general case)\n     - get (function) getter of _master_ number (see @mina.time)\n     - set (function) setter of _slave_ number\n     - easing (function) #optional easing function, default is @mina.linear\n     = (object) animation descriptor\n     o {\n     o         id (string) animation id,\n     o         start (number) start _slave_ number,\n     o         end (number) end _slave_ number,\n     o         b (number) start _master_ number,\n     o         s (number) animation status (0..1),\n     o         dur (number) animation duration,\n     o         spd (number) animation speed,\n     o         get (function) getter of _master_ number (see @mina.time),\n     o         set (function) setter of _slave_ number,\n     o         easing (function) easing function, default is @mina.linear,\n     o         status (function) status getter/setter,\n     o         speed (function) speed getter/setter,\n     o         duration (function) duration getter/setter,\n     o         stop (function) animation stopper\n     o         pause (function) pauses the animation\n     o         resume (function) resumes the animation\n     o         update (function) calles setter with the right value of the animation\n     o }\n    \\*/\n    mina = function (a, A, b, B, get, set, easing) {\n        var anim = {\n            id: ID(),\n            start: a,\n            end: A,\n            b: b,\n            s: 0,\n            dur: B - b,\n            spd: 1,\n            get: get,\n            set: set,\n            easing: easing || mina.linear,\n            status: sta,\n            speed: speed,\n            duration: duration,\n            stop: stopit,\n            pause: pause,\n            resume: resume,\n            update: update\n        };\n        animations[anim.id] = anim;\n        var len = 0, i;\n        for (i in animations) if (animations.hasOwnProperty(i)) {\n            len++;\n            if (len == 2) {\n                break;\n            }\n        }\n        len == 1 && frame();\n        return anim;\n    };\n    /*\\\n     * mina.time\n     [ method ]\n     **\n     * Returns the current time. Equivalent to:\n     | function () {\n     |     return (new Date).getTime();\n     | }\n    \\*/\n    mina.time = timer;\n    /*\\\n     * mina.getById\n     [ method ]\n     **\n     * Returns an animation by its id\n     - id (string) animation's id\n     = (object) See @mina\n    \\*/\n    mina.getById = function (id) {\n        return animations[id] || null;\n    };\n\n    /*\\\n     * mina.linear\n     [ method ]\n     **\n     * Default linear easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.linear = function (n) {\n        return n;\n    };\n    /*\\\n     * mina.easeout\n     [ method ]\n     **\n     * Easeout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeout = function (n) {\n        return Math.pow(n, 1.7);\n    };\n    /*\\\n     * mina.easein\n     [ method ]\n     **\n     * Easein easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easein = function (n) {\n        return Math.pow(n, .48);\n    };\n    /*\\\n     * mina.easeinout\n     [ method ]\n     **\n     * Easeinout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeinout = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        if (n == 0) {\n            return 0;\n        }\n        var q = .48 - n / 1.04,\n            Q = Math.sqrt(.1734 + q * q),\n            x = Q - q,\n            X = Math.pow(Math.abs(x), 1 / 3) * (x < 0 ? -1 : 1),\n            y = -Q - q,\n            Y = Math.pow(Math.abs(y), 1 / 3) * (y < 0 ? -1 : 1),\n            t = X + Y + .5;\n        return (1 - t) * 3 * t * t + t * t * t;\n    };\n    /*\\\n     * mina.backin\n     [ method ]\n     **\n     * Backin easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backin = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        var s = 1.70158;\n        return n * n * ((s + 1) * n - s);\n    };\n    /*\\\n     * mina.backout\n     [ method ]\n     **\n     * Backout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backout = function (n) {\n        if (n == 0) {\n            return 0;\n        }\n        n = n - 1;\n        var s = 1.70158;\n        return n * n * ((s + 1) * n + s) + 1;\n    };\n    /*\\\n     * mina.elastic\n     [ method ]\n     **\n     * Elastic easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.elastic = function (n) {\n        if (n == !!n) {\n            return n;\n        }\n        return Math.pow(2, -10 * n) * Math.sin((n - .075) *\n            (2 * Math.PI) / .3) + 1;\n    };\n    /*\\\n     * mina.bounce\n     [ method ]\n     **\n     * Bounce easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.bounce = function (n) {\n        var s = 7.5625,\n            p = 2.75,\n            l;\n        if (n < 1 / p) {\n            l = s * n * n;\n        } else {\n            if (n < 2 / p) {\n                n -= 1.5 / p;\n                l = s * n * n + .75;\n            } else {\n                if (n < 2.5 / p) {\n                    n -= 2.25 / p;\n                    l = s * n * n + .9375;\n                } else {\n                    n -= 2.625 / p;\n                    l = s * n * n + .984375;\n                }\n            }\n        }\n        return l;\n    };\n    window.mina = mina;\n    return mina;\n})(typeof eve == \"undefined\" ? function () {} : eve);\n\n// Copyright (c) 2013 - 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar Snap = (function(root) {\nSnap.version = \"0.5.1\";\n/*\\\n * Snap\n [ method ]\n **\n * Creates a drawing surface or wraps existing SVG element.\n **\n - width (number|string) width of surface\n - height (number|string) height of surface\n * or\n - DOM (SVGElement) element to be wrapped into Snap structure\n * or\n - array (array) array of elements (will return set of elements)\n * or\n - query (string) CSS query selector\n = (object) @Element\n\\*/\nfunction Snap(w, h) {\n    if (w) {\n        if (w.nodeType) {\n            return wrap(w);\n        }\n        if (is(w, \"array\") && Snap.set) {\n            return Snap.set.apply(Snap, w);\n        }\n        if (w instanceof Element) {\n            return w;\n        }\n        if (h == null) {\n            try {\n                w = glob.doc.querySelector(String(w));\n                return wrap(w);\n            } catch (e) {\n                return null;\n            }\n        }\n    }\n    w = w == null ? \"100%\" : w;\n    h = h == null ? \"100%\" : h;\n    return new Paper(w, h);\n}\nSnap.toString = function () {\n    return \"Snap v\" + this.version;\n};\nSnap._ = {};\nvar glob = {\n    win: root.window,\n    doc: root.window.document\n};\nSnap._.glob = glob;\nvar has = \"hasOwnProperty\",\n    Str = String,\n    toFloat = parseFloat,\n    toInt = parseInt,\n    math = Math,\n    mmax = math.max,\n    mmin = math.min,\n    abs = math.abs,\n    pow = math.pow,\n    PI = math.PI,\n    round = math.round,\n    E = \"\",\n    S = \" \",\n    objectToString = Object.prototype.toString,\n    ISURL = /^url\\(['\"]?([^\\)]+?)['\"]?\\)$/i,\n    colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i,\n    bezierrg = /^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,\n    separator = Snap._.separator = /[,\\s]+/,\n    whitespace = /[\\s]/g,\n    commaSpaces = /[\\s]*,[\\s]*/,\n    hsrg = {hs: 1, rg: 1},\n    pathCommand = /([a-z])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    tCommand = /([rstm])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\s]*,?[\\s]*/ig,\n    idgen = 0,\n    idprefix = \"S\" + (+new Date).toString(36),\n    ID = function (el) {\n        return (el && el.type ? el.type : E) + idprefix + (idgen++).toString(36);\n    },\n    xlink = \"http://www.w3.org/1999/xlink\",\n    xmlns = \"http://www.w3.org/2000/svg\",\n    hub = {},\n    /*\\\n     * Snap.url\n     [ method ]\n     **\n     * Wraps path into `\"url('<path>')\"`.\n     - value (string) path\n     = (string) wrapped path\n    \\*/\n    URL = Snap.url = function (url) {\n        return \"url('#\" + url + \"')\";\n    };\n\nfunction $(el, attr) {\n    if (attr) {\n        if (el == \"#text\") {\n            el = glob.doc.createTextNode(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (el == \"#comment\") {\n            el = glob.doc.createComment(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (typeof el == \"string\") {\n            el = $(el);\n        }\n        if (typeof attr == \"string\") {\n            if (el.nodeType == 1) {\n                if (attr.substring(0, 6) == \"xlink:\") {\n                    return el.getAttributeNS(xlink, attr.substring(6));\n                }\n                if (attr.substring(0, 4) == \"xml:\") {\n                    return el.getAttributeNS(xmlns, attr.substring(4));\n                }\n                return el.getAttribute(attr);\n            } else if (attr == \"text\") {\n                return el.nodeValue;\n            } else {\n                return null;\n            }\n        }\n        if (el.nodeType == 1) {\n            for (var key in attr) if (attr[has](key)) {\n                var val = Str(attr[key]);\n                if (val) {\n                    if (key.substring(0, 6) == \"xlink:\") {\n                        el.setAttributeNS(xlink, key.substring(6), val);\n                    } else if (key.substring(0, 4) == \"xml:\") {\n                        el.setAttributeNS(xmlns, key.substring(4), val);\n                    } else {\n                        el.setAttribute(key, val);\n                    }\n                } else {\n                    el.removeAttribute(key);\n                }\n            }\n        } else if (\"text\" in attr) {\n            el.nodeValue = attr.text;\n        }\n    } else {\n        el = glob.doc.createElementNS(xmlns, el);\n    }\n    return el;\n}\nSnap._.$ = $;\nSnap._.id = ID;\nfunction getAttrs(el) {\n    var attrs = el.attributes,\n        name,\n        out = {};\n    for (var i = 0; i < attrs.length; i++) {\n        if (attrs[i].namespaceURI == xlink) {\n            name = \"xlink:\";\n        } else {\n            name = \"\";\n        }\n        name += attrs[i].name;\n        out[name] = attrs[i].textContent;\n    }\n    return out;\n}\nfunction is(o, type) {\n    type = Str.prototype.toLowerCase.call(type);\n    if (type == \"finite\") {\n        return isFinite(o);\n    }\n    if (type == \"array\" &&\n        (o instanceof Array || Array.isArray && Array.isArray(o))) {\n        return true;\n    }\n    return  type == \"null\" && o === null ||\n            type == typeof o && o !== null ||\n            type == \"object\" && o === Object(o) ||\n            objectToString.call(o).slice(8, -1).toLowerCase() == type;\n}\n/*\\\n * Snap.format\n [ method ]\n **\n * Replaces construction of type `{<name>}` to the corresponding argument\n **\n - token (string) string to format\n - json (object) object which properties are used as a replacement\n = (string) formatted string\n > Usage\n | // this draws a rectangular shape equivalent to \"M10,20h40v50h-40z\"\n | paper.path(Snap.format(\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\", {\n |     x: 10,\n |     y: 20,\n |     dim: {\n |         width: 40,\n |         height: 50,\n |         \"negative width\": -40\n |     }\n | }));\n\\*/\nSnap.format = (function () {\n    var tokenRegex = /\\{([^\\}]+)\\}/g,\n        objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g, // matches .xxxxx or [\"xxxxx\"] to run over object properties\n        replacer = function (all, key, obj) {\n            var res = obj;\n            key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\n                name = name || quotedName;\n                if (res) {\n                    if (name in res) {\n                        res = res[name];\n                    }\n                    typeof res == \"function\" && isFunc && (res = res());\n                }\n            });\n            res = (res == null || res == obj ? all : res) + \"\";\n            return res;\n        };\n    return function (str, obj) {\n        return Str(str).replace(tokenRegex, function (all, key) {\n            return replacer(all, key, obj);\n        });\n    };\n})();\nfunction clone(obj) {\n    if (typeof obj == \"function\" || Object(obj) !== obj) {\n        return obj;\n    }\n    var res = new obj.constructor;\n    for (var key in obj) if (obj[has](key)) {\n        res[key] = clone(obj[key]);\n    }\n    return res;\n}\nSnap._.clone = clone;\nfunction repush(array, item) {\n    for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\n        return array.push(array.splice(i, 1)[0]);\n    }\n}\nfunction cacher(f, scope, postprocessor) {\n    function newf() {\n        var arg = Array.prototype.slice.call(arguments, 0),\n            args = arg.join(\"\\u2400\"),\n            cache = newf.cache = newf.cache || {},\n            count = newf.count = newf.count || [];\n        if (cache[has](args)) {\n            repush(count, args);\n            return postprocessor ? postprocessor(cache[args]) : cache[args];\n        }\n        count.length >= 1e3 && delete cache[count.shift()];\n        count.push(args);\n        cache[args] = f.apply(scope, arg);\n        return postprocessor ? postprocessor(cache[args]) : cache[args];\n    }\n    return newf;\n}\nSnap._.cacher = cacher;\nfunction angle(x1, y1, x2, y2, x3, y3) {\n    if (x3 == null) {\n        var x = x1 - x2,\n            y = y1 - y2;\n        if (!x && !y) {\n            return 0;\n        }\n        return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;\n    } else {\n        return angle(x1, y1, x3, y3) - angle(x2, y2, x3, y3);\n    }\n}\nfunction rad(deg) {\n    return deg % 360 * PI / 180;\n}\nfunction deg(rad) {\n    return rad * 180 / PI % 360;\n}\nfunction x_y() {\n    return this.x + S + this.y;\n}\nfunction x_y_w_h() {\n    return this.x + S + this.y + S + this.width + \" \\xd7 \" + this.height;\n}\n\n/*\\\n * Snap.rad\n [ method ]\n **\n * Transform angle to radians\n - deg (number) angle in degrees\n = (number) angle in radians\n\\*/\nSnap.rad = rad;\n/*\\\n * Snap.deg\n [ method ]\n **\n * Transform angle to degrees\n - rad (number) angle in radians\n = (number) angle in degrees\n\\*/\nSnap.deg = deg;\n/*\\\n * Snap.sin\n [ method ]\n **\n * Equivalent to `Math.sin()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) sin\n\\*/\nSnap.sin = function (angle) {\n    return math.sin(Snap.rad(angle));\n};\n/*\\\n * Snap.tan\n [ method ]\n **\n * Equivalent to `Math.tan()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) tan\n\\*/\nSnap.tan = function (angle) {\n    return math.tan(Snap.rad(angle));\n};\n/*\\\n * Snap.cos\n [ method ]\n **\n * Equivalent to `Math.cos()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) cos\n\\*/\nSnap.cos = function (angle) {\n    return math.cos(Snap.rad(angle));\n};\n/*\\\n * Snap.asin\n [ method ]\n **\n * Equivalent to `Math.asin()` only works with degrees, not radians.\n - num (number) value\n = (number) asin in degrees\n\\*/\nSnap.asin = function (num) {\n    return Snap.deg(math.asin(num));\n};\n/*\\\n * Snap.acos\n [ method ]\n **\n * Equivalent to `Math.acos()` only works with degrees, not radians.\n - num (number) value\n = (number) acos in degrees\n\\*/\nSnap.acos = function (num) {\n    return Snap.deg(math.acos(num));\n};\n/*\\\n * Snap.atan\n [ method ]\n **\n * Equivalent to `Math.atan()` only works with degrees, not radians.\n - num (number) value\n = (number) atan in degrees\n\\*/\nSnap.atan = function (num) {\n    return Snap.deg(math.atan(num));\n};\n/*\\\n * Snap.atan2\n [ method ]\n **\n * Equivalent to `Math.atan2()` only works with degrees, not radians.\n - num (number) value\n = (number) atan2 in degrees\n\\*/\nSnap.atan2 = function (num) {\n    return Snap.deg(math.atan2(num));\n};\n/*\\\n * Snap.angle\n [ method ]\n **\n * Returns an angle between two or three points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n - x3 (number) #optional x coord of third point\n - y3 (number) #optional y coord of third point\n = (number) angle in degrees\n\\*/\nSnap.angle = angle;\n/*\\\n * Snap.len\n [ method ]\n **\n * Returns distance between two points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len = function (x1, y1, x2, y2) {\n    return Math.sqrt(Snap.len2(x1, y1, x2, y2));\n};\n/*\\\n * Snap.len2\n [ method ]\n **\n * Returns squared distance between two points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len2 = function (x1, y1, x2, y2) {\n    return (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n};\n/*\\\n * Snap.closestPoint\n [ method ]\n **\n * Returns closest point to a given one on a given path.\n - path (Element) path element\n - x (number) x coord of a point\n - y (number) y coord of a point\n = (object) in format\n {\n    x (number) x coord of the point on the path\n    y (number) y coord of the point on the path\n    length (number) length of the path to the point\n    distance (number) distance from the given point to the path\n }\n\\*/\n// Copied from http://bl.ocks.org/mbostock/8027637\nSnap.closestPoint = function (path, x, y) {\n    function distance2(p) {\n        var dx = p.x - x,\n            dy = p.y - y;\n        return dx * dx + dy * dy;\n    }\n    var pathNode = path.node,\n        pathLength = pathNode.getTotalLength(),\n        precision = pathLength / pathNode.pathSegList.numberOfItems * .125,\n        best,\n        bestLength,\n        bestDistance = Infinity;\n\n    // linear scan for coarse approximation\n    for (var scan, scanLength = 0, scanDistance; scanLength <= pathLength; scanLength += precision) {\n        if ((scanDistance = distance2(scan = pathNode.getPointAtLength(scanLength))) < bestDistance) {\n            best = scan;\n            bestLength = scanLength;\n            bestDistance = scanDistance;\n        }\n    }\n\n    // binary search for precise estimate\n    precision *= .5;\n    while (precision > .5) {\n        var before,\n            after,\n            beforeLength,\n            afterLength,\n            beforeDistance,\n            afterDistance;\n        if ((beforeLength = bestLength - precision) >= 0 && (beforeDistance = distance2(before = pathNode.getPointAtLength(beforeLength))) < bestDistance) {\n            best = before;\n            bestLength = beforeLength;\n            bestDistance = beforeDistance;\n        } else if ((afterLength = bestLength + precision) <= pathLength && (afterDistance = distance2(after = pathNode.getPointAtLength(afterLength))) < bestDistance) {\n            best = after;\n            bestLength = afterLength;\n            bestDistance = afterDistance;\n        } else {\n            precision *= .5;\n        }\n    }\n\n    best = {\n        x: best.x,\n        y: best.y,\n        length: bestLength,\n        distance: Math.sqrt(bestDistance)\n    };\n    return best;\n}\n/*\\\n * Snap.is\n [ method ]\n **\n * Handy replacement for the `typeof` operator\n - o (…) any object or primitive\n - type (string) name of the type, e.g., `string`, `function`, `number`, etc.\n = (boolean) `true` if given value is of given type\n\\*/\nSnap.is = is;\n/*\\\n * Snap.snapTo\n [ method ]\n **\n * Snaps given value to given grid\n - values (array|number) given array of values or step of the grid\n - value (number) value to adjust\n - tolerance (number) #optional maximum distance to the target value that would trigger the snap. Default is `10`.\n = (number) adjusted value\n\\*/\nSnap.snapTo = function (values, value, tolerance) {\n    tolerance = is(tolerance, \"finite\") ? tolerance : 10;\n    if (is(values, \"array\")) {\n        var i = values.length;\n        while (i--) if (abs(values[i] - value) <= tolerance) {\n            return values[i];\n        }\n    } else {\n        values = +values;\n        var rem = value % values;\n        if (rem < tolerance) {\n            return value - rem;\n        }\n        if (rem > values - tolerance) {\n            return value - rem + values;\n        }\n    }\n    return value;\n};\n// Colour\n/*\\\n * Snap.getRGB\n [ method ]\n **\n * Parses color string as RGB object\n - color (string) color string in one of the following formats:\n # <ul>\n #     <li>Color name (<code>red</code>, <code>green</code>, <code>cornflowerblue</code>, etc)</li>\n #     <li>#••• — shortened HTML color: (<code>#000</code>, <code>#fc0</code>, etc.)</li>\n #     <li>#•••••• — full length HTML color: (<code>#000000</code>, <code>#bd2300</code>)</li>\n #     <li>rgb(•••, •••, •••) — red, green and blue channels values: (<code>rgb(200,&nbsp;100,&nbsp;0)</code>)</li>\n #     <li>rgba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>)</li>\n #     <li>rgba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>)</li>\n #     <li>hsba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsl(•••, •••, •••) — hue, saturation and luminosity values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;0.5)</code>)</li>\n #     <li>hsla(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsla(•••%, •••%, •••%, •••%) — also with opacity</li>\n # </ul>\n * Note that `%` can be used any time: `rgb(20%, 255, 50%)`.\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) true if string can't be parsed\n o }\n\\*/\nSnap.getRGB = cacher(function (colour) {\n    if (!colour || !!((colour = Str(colour)).indexOf(\"-\") + 1)) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    if (colour == \"none\") {\n        return {r: -1, g: -1, b: -1, hex: \"none\", toString: rgbtoString};\n    }\n    !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = toHex(colour));\n    if (!colour) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    var res,\n        red,\n        green,\n        blue,\n        opacity,\n        t,\n        values,\n        rgb = colour.match(colourRegExp);\n    if (rgb) {\n        if (rgb[2]) {\n            blue = toInt(rgb[2].substring(5), 16);\n            green = toInt(rgb[2].substring(3, 5), 16);\n            red = toInt(rgb[2].substring(1, 3), 16);\n        }\n        if (rgb[3]) {\n            blue = toInt((t = rgb[3].charAt(3)) + t, 16);\n            green = toInt((t = rgb[3].charAt(2)) + t, 16);\n            red = toInt((t = rgb[3].charAt(1)) + t, 16);\n        }\n        if (rgb[4]) {\n            values = rgb[4].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red *= 2.55);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green *= 2.55);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue *= 2.55);\n            rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n        }\n        if (rgb[5]) {\n            values = rgb[5].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsb2rgb(red, green, blue, opacity);\n        }\n        if (rgb[6]) {\n            values = rgb[6].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsl2rgb(red, green, blue, opacity);\n        }\n        red = mmin(math.round(red), 255);\n        green = mmin(math.round(green), 255);\n        blue = mmin(math.round(blue), 255);\n        opacity = mmin(mmax(opacity, 0), 1);\n        rgb = {r: red, g: green, b: blue, toString: rgbtoString};\n        rgb.hex = \"#\" + (16777216 | blue | green << 8 | red << 16).toString(16).slice(1);\n        rgb.opacity = is(opacity, \"finite\") ? opacity : 1;\n        return rgb;\n    }\n    return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n}, Snap);\n/*\\\n * Snap.hsb\n [ method ]\n **\n * Converts HSB values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - b (number) value or brightness\n = (string) hex representation of the color\n\\*/\nSnap.hsb = cacher(function (h, s, b) {\n    return Snap.hsb2rgb(h, s, b).hex;\n});\n/*\\\n * Snap.hsl\n [ method ]\n **\n * Converts HSL values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (string) hex representation of the color\n\\*/\nSnap.hsl = cacher(function (h, s, l) {\n    return Snap.hsl2rgb(h, s, l).hex;\n});\n/*\\\n * Snap.rgb\n [ method ]\n **\n * Converts RGB values to a hex representation of the color\n - r (number) red\n - g (number) green\n - b (number) blue\n = (string) hex representation of the color\n\\*/\nSnap.rgb = cacher(function (r, g, b, o) {\n    if (is(o, \"finite\")) {\n        var round = math.round;\n        return \"rgba(\" + [round(r), round(g), round(b), +o.toFixed(2)] + \")\";\n    }\n    return \"#\" + (16777216 | b | g << 8 | r << 16).toString(16).slice(1);\n});\nvar toHex = function (color) {\n    var i = glob.doc.getElementsByTagName(\"head\")[0] || glob.doc.getElementsByTagName(\"svg\")[0],\n        red = \"rgb(255, 0, 0)\";\n    toHex = cacher(function (color) {\n        if (color.toLowerCase() == \"red\") {\n            return red;\n        }\n        i.style.color = red;\n        i.style.color = color;\n        var out = glob.doc.defaultView.getComputedStyle(i, E).getPropertyValue(\"color\");\n        return out == red ? null : out;\n    });\n    return toHex(color);\n},\nhsbtoString = function () {\n    return \"hsb(\" + [this.h, this.s, this.b] + \")\";\n},\nhsltoString = function () {\n    return \"hsl(\" + [this.h, this.s, this.l] + \")\";\n},\nrgbtoString = function () {\n    return this.opacity == 1 || this.opacity == null ?\n            this.hex :\n            \"rgba(\" + [this.r, this.g, this.b, this.opacity] + \")\";\n},\nprepareRGB = function (r, g, b) {\n    if (g == null && is(r, \"object\") && \"r\" in r && \"g\" in r && \"b\" in r) {\n        b = r.b;\n        g = r.g;\n        r = r.r;\n    }\n    if (g == null && is(r, string)) {\n        var clr = Snap.getRGB(r);\n        r = clr.r;\n        g = clr.g;\n        b = clr.b;\n    }\n    if (r > 1 || g > 1 || b > 1) {\n        r /= 255;\n        g /= 255;\n        b /= 255;\n    }\n\n    return [r, g, b];\n},\npackageRGB = function (r, g, b, o) {\n    r = math.round(r * 255);\n    g = math.round(g * 255);\n    b = math.round(b * 255);\n    var rgb = {\n        r: r,\n        g: g,\n        b: b,\n        opacity: is(o, \"finite\") ? o : 1,\n        hex: Snap.rgb(r, g, b),\n        toString: rgbtoString\n    };\n    is(o, \"finite\") && (rgb.opacity = o);\n    return rgb;\n};\n/*\\\n * Snap.color\n [ method ]\n **\n * Parses the color string and returns an object featuring the color's component values\n - clr (string) color string in one of the supported formats (see @Snap.getRGB)\n = (object) Combined RGB/HSB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) `true` if string can't be parsed,\n o     h (number) hue,\n o     s (number) saturation,\n o     v (number) value (brightness),\n o     l (number) lightness\n o }\n\\*/\nSnap.color = function (clr) {\n    var rgb;\n    if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"b\" in clr) {\n        rgb = Snap.hsb2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"l\" in clr) {\n        rgb = Snap.hsl2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else {\n        if (is(clr, \"string\")) {\n            clr = Snap.getRGB(clr);\n        }\n        if (is(clr, \"object\") && \"r\" in clr && \"g\" in clr && \"b\" in clr && !(\"error\" in clr)) {\n            rgb = Snap.rgb2hsl(clr);\n            clr.h = rgb.h;\n            clr.s = rgb.s;\n            clr.l = rgb.l;\n            rgb = Snap.rgb2hsb(clr);\n            clr.v = rgb.b;\n        } else {\n            clr = {hex: \"none\"};\n            clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;\n            clr.error = 1;\n        }\n    }\n    clr.toString = rgbtoString;\n    return clr;\n};\n/*\\\n * Snap.hsb2rgb\n [ method ]\n **\n * Converts HSB values to an RGB object\n - h (number) hue\n - s (number) saturation\n - v (number) value or brightness\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsb2rgb = function (h, s, v, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"b\" in h) {\n        v = h.b;\n        s = h.s;\n        o = h.o;\n        h = h.h;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = v * s;\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = v - C;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.hsl2rgb\n [ method ]\n **\n * Converts HSL values to an RGB object\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsl2rgb = function (h, s, l, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"l\" in h) {\n        l = h.l;\n        s = h.s;\n        h = h.h;\n    }\n    if (h > 1 || s > 1 || l > 1) {\n        h /= 360;\n        s /= 100;\n        l /= 100;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = 2 * s * (l < .5 ? l : 1 - l);\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = l - C / 2;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.rgb2hsb\n [ method ]\n **\n * Converts RGB values to an HSB object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSB object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     b (number) brightness\n o }\n\\*/\nSnap.rgb2hsb = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, V, C;\n    V = mmax(r, g, b);\n    C = V - mmin(r, g, b);\n    H = C == 0 ? null :\n        V == r ? (g - b) / C :\n        V == g ? (b - r) / C + 2 :\n                 (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    S = C == 0 ? 0 : C / V;\n    return {h: H, s: S, b: V, toString: hsbtoString};\n};\n/*\\\n * Snap.rgb2hsl\n [ method ]\n **\n * Converts RGB values to an HSL object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSL object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     l (number) luminosity\n o }\n\\*/\nSnap.rgb2hsl = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, L, M, m, C;\n    M = mmax(r, g, b);\n    m = mmin(r, g, b);\n    C = M - m;\n    H = C == 0 ? null :\n        M == r ? (g - b) / C :\n        M == g ? (b - r) / C + 2 :\n                 (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    L = (M + m) / 2;\n    S = C == 0 ? 0 :\n         L < .5 ? C / (2 * L) :\n                  C / (2 - 2 * L);\n    return {h: H, s: S, l: L, toString: hsltoString};\n};\n\n// Transformations\n/*\\\n * Snap.parsePathString\n [ method ]\n **\n * Utility method\n **\n * Parses given path string into an array of arrays of path segments\n - pathString (string|array) path string or array of segments (in the last case it is returned straight away)\n = (array) array of segments\n\\*/\nSnap.parsePathString = function (pathString) {\n    if (!pathString) {\n        return null;\n    }\n    var pth = Snap.path(pathString);\n    if (pth.arr) {\n        return Snap.path.clone(pth.arr);\n    }\n\n    var paramCounts = {a: 7, c: 6, o: 2, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, u: 3, z: 0},\n        data = [];\n    if (is(pathString, \"array\") && is(pathString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(pathString);\n    }\n    if (!data.length) {\n        Str(pathString).replace(pathCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            if (name == \"m\" && params.length > 2) {\n                data.push([b].concat(params.splice(0, 2)));\n                name = \"l\";\n                b = b == \"m\" ? \"l\" : \"L\";\n            }\n            if (name == \"o\" && params.length == 1) {\n                data.push([b, params[0]]);\n            }\n            if (name == \"r\") {\n                data.push([b].concat(params));\n            } else while (params.length >= paramCounts[name]) {\n                data.push([b].concat(params.splice(0, paramCounts[name])));\n                if (!paramCounts[name]) {\n                    break;\n                }\n            }\n        });\n    }\n    data.toString = Snap.path.toString;\n    pth.arr = Snap.path.clone(data);\n    return data;\n};\n/*\\\n * Snap.parseTransformString\n [ method ]\n **\n * Utility method\n **\n * Parses given transform string into an array of transformations\n - TString (string|array) transform string or array of transformations (in the last case it is returned straight away)\n = (array) array of transformations\n\\*/\nvar parseTransformString = Snap.parseTransformString = function (TString) {\n    if (!TString) {\n        return null;\n    }\n    var paramCounts = {r: 3, s: 4, t: 2, m: 6},\n        data = [];\n    if (is(TString, \"array\") && is(TString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(TString);\n    }\n    if (!data.length) {\n        Str(TString).replace(tCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            data.push([b].concat(params));\n        });\n    }\n    data.toString = Snap.path.toString;\n    return data;\n};\nfunction svgTransform2string(tstr) {\n    var res = [];\n    tstr = tstr.replace(/(?:^|\\s)(\\w+)\\(([^)]+)\\)/g, function (all, name, params) {\n        params = params.split(/\\s*,\\s*|\\s+/);\n        if (name == \"rotate\" && params.length == 1) {\n            params.push(0, 0);\n        }\n        if (name == \"scale\") {\n            if (params.length > 2) {\n                params = params.slice(0, 2);\n            } else if (params.length == 2) {\n                params.push(0, 0);\n            }\n            if (params.length == 1) {\n                params.push(params[0], 0, 0);\n            }\n        }\n        if (name == \"skewX\") {\n            res.push([\"m\", 1, 0, math.tan(rad(params[0])), 1, 0, 0]);\n        } else if (name == \"skewY\") {\n            res.push([\"m\", 1, math.tan(rad(params[0])), 0, 1, 0, 0]);\n        } else {\n            res.push([name.charAt(0)].concat(params));\n        }\n        return all;\n    });\n    return res;\n}\nSnap._.svgTransform2string = svgTransform2string;\nSnap._.rgTransform = /^[a-z][\\s]*-?\\.?\\d/i;\nfunction transform2matrix(tstr, bbox) {\n    var tdata = parseTransformString(tstr),\n        m = new Snap.Matrix;\n    if (tdata) {\n        for (var i = 0, ii = tdata.length; i < ii; i++) {\n            var t = tdata[i],\n                tlen = t.length,\n                command = Str(t[0]).toLowerCase(),\n                absolute = t[0] != command,\n                inver = absolute ? m.invert() : 0,\n                x1,\n                y1,\n                x2,\n                y2,\n                bb;\n            if (command == \"t\" && tlen == 2){\n                m.translate(t[1], 0);\n            } else if (command == \"t\" && tlen == 3) {\n                if (absolute) {\n                    x1 = inver.x(0, 0);\n                    y1 = inver.y(0, 0);\n                    x2 = inver.x(t[1], t[2]);\n                    y2 = inver.y(t[1], t[2]);\n                    m.translate(x2 - x1, y2 - y1);\n                } else {\n                    m.translate(t[1], t[2]);\n                }\n            } else if (command == \"r\") {\n                if (tlen == 2) {\n                    bb = bb || bbox;\n                    m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.rotate(t[1], x2, y2);\n                    } else {\n                        m.rotate(t[1], t[2], t[3]);\n                    }\n                }\n            } else if (command == \"s\") {\n                if (tlen == 2 || tlen == 3) {\n                    bb = bb || bbox;\n                    m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.scale(t[1], t[1], x2, y2);\n                    } else {\n                        m.scale(t[1], t[1], t[2], t[3]);\n                    }\n                } else if (tlen == 5) {\n                    if (absolute) {\n                        x2 = inver.x(t[3], t[4]);\n                        y2 = inver.y(t[3], t[4]);\n                        m.scale(t[1], t[2], x2, y2);\n                    } else {\n                        m.scale(t[1], t[2], t[3], t[4]);\n                    }\n                }\n            } else if (command == \"m\" && tlen == 7) {\n                m.add(t[1], t[2], t[3], t[4], t[5], t[6]);\n            }\n        }\n    }\n    return m;\n}\nSnap._.transform2matrix = transform2matrix;\nSnap._unit2px = unit2px;\nvar contains = glob.doc.contains || glob.doc.compareDocumentPosition ?\n    function (a, b) {\n        var adown = a.nodeType == 9 ? a.documentElement : a,\n            bup = b && b.parentNode;\n            return a == bup || !!(bup && bup.nodeType == 1 && (\n                adown.contains ?\n                    adown.contains(bup) :\n                    a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16\n            ));\n    } :\n    function (a, b) {\n        if (b) {\n            while (b) {\n                b = b.parentNode;\n                if (b == a) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\nfunction getSomeDefs(el) {\n    var p = el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) ||\n            el.node.parentNode && wrap(el.node.parentNode) ||\n            Snap.select(\"svg\") ||\n            Snap(0, 0),\n        pdefs = p.select(\"defs\"),\n        defs  = pdefs == null ? false : pdefs.node;\n    if (!defs) {\n        defs = make(\"defs\", p.node).node;\n    }\n    return defs;\n}\nfunction getSomeSVG(el) {\n    return el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) || Snap.select(\"svg\");\n}\nSnap._.getSomeDefs = getSomeDefs;\nSnap._.getSomeSVG = getSomeSVG;\nfunction unit2px(el, name, value) {\n    var svg = getSomeSVG(el).node,\n        out = {},\n        mgr = svg.querySelector(\".svg---mgr\");\n    if (!mgr) {\n        mgr = $(\"rect\");\n        $(mgr, {x: -9e9, y: -9e9, width: 10, height: 10, \"class\": \"svg---mgr\", fill: \"none\"});\n        svg.appendChild(mgr);\n    }\n    function getW(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {width: val});\n        try {\n            return mgr.getBBox().width;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function getH(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {height: val});\n        try {\n            return mgr.getBBox().height;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function set(nam, f) {\n        if (name == null) {\n            out[nam] = f(el.attr(nam) || 0);\n        } else if (nam == name) {\n            out = f(value == null ? el.attr(nam) || 0 : value);\n        }\n    }\n    switch (el.type) {\n        case \"rect\":\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        case \"image\":\n            set(\"width\", getW);\n            set(\"height\", getH);\n        case \"text\":\n            set(\"x\", getW);\n            set(\"y\", getH);\n        break;\n        case \"circle\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"r\", getW);\n        break;\n        case \"ellipse\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        break;\n        case \"line\":\n            set(\"x1\", getW);\n            set(\"x2\", getW);\n            set(\"y1\", getH);\n            set(\"y2\", getH);\n        break;\n        case \"marker\":\n            set(\"refX\", getW);\n            set(\"markerWidth\", getW);\n            set(\"refY\", getH);\n            set(\"markerHeight\", getH);\n        break;\n        case \"radialGradient\":\n            set(\"fx\", getW);\n            set(\"fy\", getH);\n        break;\n        case \"tspan\":\n            set(\"dx\", getW);\n            set(\"dy\", getH);\n        break;\n        default:\n            set(name, getW);\n    }\n    svg.removeChild(mgr);\n    return out;\n}\n/*\\\n * Snap.select\n [ method ]\n **\n * Wraps a DOM element specified by CSS selector as @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.select = function (query) {\n    query = Str(query).replace(/([^\\\\]):/g, \"$1\\\\:\");\n    return wrap(glob.doc.querySelector(query));\n};\n/*\\\n * Snap.selectAll\n [ method ]\n **\n * Wraps DOM elements specified by CSS selector as set or array of @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.selectAll = function (query) {\n    var nodelist = glob.doc.querySelectorAll(query),\n        set = (Snap.set || Array)();\n    for (var i = 0; i < nodelist.length; i++) {\n        set.push(wrap(nodelist[i]));\n    }\n    return set;\n};\n\nfunction add2group(list) {\n    if (!is(list, \"array\")) {\n        list = Array.prototype.slice.call(arguments, 0);\n    }\n    var i = 0,\n        j = 0,\n        node = this.node;\n    while (this[i]) delete this[i++];\n    for (i = 0; i < list.length; i++) {\n        if (list[i].type == \"set\") {\n            list[i].forEach(function (el) {\n                node.appendChild(el.node);\n            });\n        } else {\n            node.appendChild(list[i].node);\n        }\n    }\n    var children = node.childNodes;\n    for (i = 0; i < children.length; i++) {\n        this[j++] = wrap(children[i]);\n    }\n    return this;\n}\n// Hub garbage collector every 10s\nsetInterval(function () {\n    for (var key in hub) if (hub[has](key)) {\n        var el = hub[key],\n            node = el.node;\n        if (el.type != \"svg\" && !node.ownerSVGElement || el.type == \"svg\" && (!node.parentNode || \"ownerSVGElement\" in node.parentNode && !node.ownerSVGElement)) {\n            delete hub[key];\n        }\n    }\n}, 1e4);\nfunction Element(el) {\n    if (el.snap in hub) {\n        return hub[el.snap];\n    }\n    var svg;\n    try {\n        svg = el.ownerSVGElement;\n    } catch(e) {}\n    /*\\\n     * Element.node\n     [ property (object) ]\n     **\n     * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.\n     > Usage\n     | // draw a circle at coordinate 10,10 with radius of 10\n     | var c = paper.circle(10, 10, 10);\n     | c.node.onclick = function () {\n     |     c.attr(\"fill\", \"red\");\n     | };\n    \\*/\n    this.node = el;\n    if (svg) {\n        this.paper = new Paper(svg);\n    }\n    /*\\\n     * Element.type\n     [ property (string) ]\n     **\n     * SVG tag name of the given element.\n    \\*/\n    this.type = el.tagName || el.nodeName;\n    var id = this.id = ID(this);\n    this.anims = {};\n    this._ = {\n        transform: []\n    };\n    el.snap = id;\n    hub[id] = this;\n    if (this.type == \"g\") {\n        this.add = add2group;\n    }\n    if (this.type in {g: 1, mask: 1, pattern: 1, symbol: 1}) {\n        for (var method in Paper.prototype) if (Paper.prototype[has](method)) {\n            this[method] = Paper.prototype[method];\n        }\n    }\n}\n   /*\\\n     * Element.attr\n     [ method ]\n     **\n     * Gets or sets given attributes of the element.\n     **\n     - params (object) contains key-value pairs of attributes you want to set\n     * or\n     - param (string) name of the attribute\n     = (Element) the current element\n     * or\n     = (string) value of attribute\n     > Usage\n     | el.attr({\n     |     fill: \"#fc0\",\n     |     stroke: \"#000\",\n     |     strokeWidth: 2, // CamelCase...\n     |     \"fill-opacity\": 0.5, // or dash-separated names\n     |     width: \"*=2\" // prefixed values\n     | });\n     | console.log(el.attr(\"fill\")); // #fc0\n     * Prefixed values in format `\"+=10\"` supported. All four operations\n     * (`+`, `-`, `*` and `/`) could be used. Optionally you can use units for `+`\n     * and `-`: `\"+=2em\"`.\n    \\*/\n    Element.prototype.attr = function (params, value) {\n        var el = this,\n            node = el.node;\n        if (!params) {\n            if (node.nodeType != 1) {\n                return {\n                    text: node.nodeValue\n                };\n            }\n            var attr = node.attributes,\n                out = {};\n            for (var i = 0, ii = attr.length; i < ii; i++) {\n                out[attr[i].nodeName] = attr[i].nodeValue;\n            }\n            return out;\n        }\n        if (is(params, \"string\")) {\n            if (arguments.length > 1) {\n                var json = {};\n                json[params] = value;\n                params = json;\n            } else {\n                return eve(\"snap.util.getattr.\" + params, el).firstDefined();\n            }\n        }\n        for (var att in params) {\n            if (params[has](att)) {\n                eve(\"snap.util.attr.\" + att, el, params[att]);\n            }\n        }\n        return el;\n    };\n/*\\\n * Snap.parse\n [ method ]\n **\n * Parses SVG fragment and converts it into a @Fragment\n **\n - svg (string) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.parse = function (svg) {\n    var f = glob.doc.createDocumentFragment(),\n        full = true,\n        div = glob.doc.createElement(\"div\");\n    svg = Str(svg);\n    if (!svg.match(/^\\s*<\\s*svg(?:\\s|>)/)) {\n        svg = \"<svg>\" + svg + \"</svg>\";\n        full = false;\n    }\n    div.innerHTML = svg;\n    svg = div.getElementsByTagName(\"svg\")[0];\n    if (svg) {\n        if (full) {\n            f = svg;\n        } else {\n            while (svg.firstChild) {\n                f.appendChild(svg.firstChild);\n            }\n        }\n    }\n    return new Fragment(f);\n};\nfunction Fragment(frag) {\n    this.node = frag;\n}\n/*\\\n * Snap.fragment\n [ method ]\n **\n * Creates a DOM fragment from a given list of elements or strings\n **\n - varargs (…) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.fragment = function () {\n    var args = Array.prototype.slice.call(arguments, 0),\n        f = glob.doc.createDocumentFragment();\n    for (var i = 0, ii = args.length; i < ii; i++) {\n        var item = args[i];\n        if (item.node && item.node.nodeType) {\n            f.appendChild(item.node);\n        }\n        if (item.nodeType) {\n            f.appendChild(item);\n        }\n        if (typeof item == \"string\") {\n            f.appendChild(Snap.parse(item).node);\n        }\n    }\n    return new Fragment(f);\n};\n\nfunction make(name, parent) {\n    var res = $(name);\n    parent.appendChild(res);\n    var el = wrap(res);\n    return el;\n}\nfunction Paper(w, h) {\n    var res,\n        desc,\n        defs,\n        proto = Paper.prototype;\n    if (w && w.tagName && w.tagName.toLowerCase() == \"svg\") {\n        if (w.snap in hub) {\n            return hub[w.snap];\n        }\n        var doc = w.ownerDocument;\n        res = new Element(w);\n        desc = w.getElementsByTagName(\"desc\")[0];\n        defs = w.getElementsByTagName(\"defs\")[0];\n        if (!desc) {\n            desc = $(\"desc\");\n            desc.appendChild(doc.createTextNode(\"Created with Snap\"));\n            res.node.appendChild(desc);\n        }\n        if (!defs) {\n            defs = $(\"defs\");\n            res.node.appendChild(defs);\n        }\n        res.defs = defs;\n        for (var key in proto) if (proto[has](key)) {\n            res[key] = proto[key];\n        }\n        res.paper = res.root = res;\n    } else {\n        res = make(\"svg\", glob.doc.body);\n        $(res.node, {\n            height: h,\n            version: 1.1,\n            width: w,\n            xmlns: xmlns\n        });\n    }\n    return res;\n}\nfunction wrap(dom) {\n    if (!dom) {\n        return dom;\n    }\n    if (dom instanceof Element || dom instanceof Fragment) {\n        return dom;\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"svg\") {\n        return new Paper(dom);\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"object\" && dom.type == \"image/svg+xml\") {\n        return new Paper(dom.contentDocument.getElementsByTagName(\"svg\")[0]);\n    }\n    return new Element(dom);\n}\n\nSnap._.make = make;\nSnap._.wrap = wrap;\n/*\\\n * Paper.el\n [ method ]\n **\n * Creates an element on paper with a given name and no attributes\n **\n - name (string) tag name\n - attr (object) attributes\n = (Element) the current element\n > Usage\n | var c = paper.circle(10, 10, 10); // is the same as...\n | var c = paper.el(\"circle\").attr({\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n | // and the same as\n | var c = paper.el(\"circle\", {\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n\\*/\nPaper.prototype.el = function (name, attr) {\n    var el = make(name, this.node);\n    attr && el.attr(attr);\n    return el;\n};\n/*\\\n * Element.children\n [ method ]\n **\n * Returns array of all the children of the element.\n = (array) array of Elements\n\\*/\nElement.prototype.children = function () {\n    var out = [],\n        ch = this.node.childNodes;\n    for (var i = 0, ii = ch.length; i < ii; i++) {\n        out[i] = Snap(ch[i]);\n    }\n    return out;\n};\nfunction jsonFiller(root, o) {\n    for (var i = 0, ii = root.length; i < ii; i++) {\n        var item = {\n                type: root[i].type,\n                attr: root[i].attr()\n            },\n            children = root[i].children();\n        o.push(item);\n        if (children.length) {\n            jsonFiller(children, item.childNodes = []);\n        }\n    }\n}\n/*\\\n * Element.toJSON\n [ method ]\n **\n * Returns object representation of the given element and all its children.\n = (object) in format\n o {\n o     type (string) this.type,\n o     attr (object) attributes map,\n o     childNodes (array) optional array of children in the same format\n o }\n\\*/\nElement.prototype.toJSON = function () {\n    var out = [];\n    jsonFiller([this], out);\n    return out[0];\n};\n// default\neve.on(\"snap.util.getattr\", function () {\n    var att = eve.nt();\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    var css = att.replace(/[A-Z]/g, function (letter) {\n        return \"-\" + letter.toLowerCase();\n    });\n    if (cssAttr[has](css)) {\n        return this.node.ownerDocument.defaultView.getComputedStyle(this.node, null).getPropertyValue(css);\n    } else {\n        return $(this.node, att);\n    }\n});\nvar cssAttr = {\n    \"alignment-baseline\": 0,\n    \"baseline-shift\": 0,\n    \"clip\": 0,\n    \"clip-path\": 0,\n    \"clip-rule\": 0,\n    \"color\": 0,\n    \"color-interpolation\": 0,\n    \"color-interpolation-filters\": 0,\n    \"color-profile\": 0,\n    \"color-rendering\": 0,\n    \"cursor\": 0,\n    \"direction\": 0,\n    \"display\": 0,\n    \"dominant-baseline\": 0,\n    \"enable-background\": 0,\n    \"fill\": 0,\n    \"fill-opacity\": 0,\n    \"fill-rule\": 0,\n    \"filter\": 0,\n    \"flood-color\": 0,\n    \"flood-opacity\": 0,\n    \"font\": 0,\n    \"font-family\": 0,\n    \"font-size\": 0,\n    \"font-size-adjust\": 0,\n    \"font-stretch\": 0,\n    \"font-style\": 0,\n    \"font-variant\": 0,\n    \"font-weight\": 0,\n    \"glyph-orientation-horizontal\": 0,\n    \"glyph-orientation-vertical\": 0,\n    \"image-rendering\": 0,\n    \"kerning\": 0,\n    \"letter-spacing\": 0,\n    \"lighting-color\": 0,\n    \"marker\": 0,\n    \"marker-end\": 0,\n    \"marker-mid\": 0,\n    \"marker-start\": 0,\n    \"mask\": 0,\n    \"opacity\": 0,\n    \"overflow\": 0,\n    \"pointer-events\": 0,\n    \"shape-rendering\": 0,\n    \"stop-color\": 0,\n    \"stop-opacity\": 0,\n    \"stroke\": 0,\n    \"stroke-dasharray\": 0,\n    \"stroke-dashoffset\": 0,\n    \"stroke-linecap\": 0,\n    \"stroke-linejoin\": 0,\n    \"stroke-miterlimit\": 0,\n    \"stroke-opacity\": 0,\n    \"stroke-width\": 0,\n    \"text-anchor\": 0,\n    \"text-decoration\": 0,\n    \"text-rendering\": 0,\n    \"unicode-bidi\": 0,\n    \"visibility\": 0,\n    \"word-spacing\": 0,\n    \"writing-mode\": 0\n};\n\neve.on(\"snap.util.attr\", function (value) {\n    var att = eve.nt(),\n        attr = {};\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    attr[att] = value;\n    var style = att.replace(/-(\\w)/gi, function (all, letter) {\n            return letter.toUpperCase();\n        }),\n        css = att.replace(/[A-Z]/g, function (letter) {\n            return \"-\" + letter.toLowerCase();\n        });\n    if (cssAttr[has](css)) {\n        this.node.style[style] = value == null ? E : value;\n    } else {\n        $(this.node, attr);\n    }\n});\n(function (proto) {}(Paper.prototype));\n\n// simple ajax\n/*\\\n * Snap.ajax\n [ method ]\n **\n * Simple implementation of Ajax\n **\n - url (string) URL\n - postData (object|string) data for post request\n - callback (function) callback\n - scope (object) #optional scope of callback\n * or\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n = (XMLHttpRequest) the XMLHttpRequest object, just in case\n\\*/\nSnap.ajax = function (url, postData, callback, scope){\n    var req = new XMLHttpRequest,\n        id = ID();\n    if (req) {\n        if (is(postData, \"function\")) {\n            scope = callback;\n            callback = postData;\n            postData = null;\n        } else if (is(postData, \"object\")) {\n            var pd = [];\n            for (var key in postData) if (postData.hasOwnProperty(key)) {\n                pd.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(postData[key]));\n            }\n            postData = pd.join(\"&\");\n        }\n        req.open(postData ? \"POST\" : \"GET\", url, true);\n        if (postData) {\n            req.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n            req.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n        }\n        if (callback) {\n            eve.once(\"snap.ajax.\" + id + \".0\", callback);\n            eve.once(\"snap.ajax.\" + id + \".200\", callback);\n            eve.once(\"snap.ajax.\" + id + \".304\", callback);\n        }\n        req.onreadystatechange = function() {\n            if (req.readyState != 4) return;\n            eve(\"snap.ajax.\" + id + \".\" + req.status, scope, req);\n        };\n        if (req.readyState == 4) {\n            return req;\n        }\n        req.send(postData);\n        return req;\n    }\n};\n/*\\\n * Snap.load\n [ method ]\n **\n * Loads external SVG file as a @Fragment (see @Snap.ajax for more advanced AJAX)\n **\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n\\*/\nSnap.load = function (url, callback, scope) {\n    Snap.ajax(url, function (req) {\n        var f = Snap.parse(req.responseText);\n        scope ? callback.call(scope, f) : callback(f);\n    });\n};\nvar getOffset = function (elem) {\n    var box = elem.getBoundingClientRect(),\n        doc = elem.ownerDocument,\n        body = doc.body,\n        docElem = doc.documentElement,\n        clientTop = docElem.clientTop || body.clientTop || 0, clientLeft = docElem.clientLeft || body.clientLeft || 0,\n        top  = box.top  + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop ) - clientTop,\n        left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;\n    return {\n        y: top,\n        x: left\n    };\n};\n/*\\\n * Snap.getElementByPoint\n [ method ]\n **\n * Returns you topmost element under given point.\n **\n = (object) Snap element object\n - x (number) x coordinate from the top left corner of the window\n - y (number) y coordinate from the top left corner of the window\n > Usage\n | Snap.getElementByPoint(mouseX, mouseY).attr({stroke: \"#f00\"});\n\\*/\nSnap.getElementByPoint = function (x, y) {\n    var paper = this,\n        svg = paper.canvas,\n        target = glob.doc.elementFromPoint(x, y);\n    if (glob.win.opera && target.tagName == \"svg\") {\n        var so = getOffset(target),\n            sr = target.createSVGRect();\n        sr.x = x - so.x;\n        sr.y = y - so.y;\n        sr.width = sr.height = 1;\n        var hits = target.getIntersectionList(sr, null);\n        if (hits.length) {\n            target = hits[hits.length - 1];\n        }\n    }\n    if (!target) {\n        return null;\n    }\n    return wrap(target);\n};\n/*\\\n * Snap.plugin\n [ method ]\n **\n * Let you write plugins. You pass in a function with five arguments, like this:\n | Snap.plugin(function (Snap, Element, Paper, global, Fragment) {\n |     Snap.newmethod = function () {};\n |     Element.prototype.newmethod = function () {};\n |     Paper.prototype.newmethod = function () {};\n | });\n * Inside the function you have access to all main objects (and their\n * prototypes). This allow you to extend anything you want.\n **\n - f (function) your plugin body\n\\*/\nSnap.plugin = function (f) {\n    f(Snap, Element, Paper, glob, Fragment);\n};\nglob.win.Snap = Snap;\nreturn Snap;\n}(window || this));\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        unit2px = Snap._unit2px,\n        $ = Snap._.$,\n        make = Snap._.make,\n        getSomeDefs = Snap._.getSomeDefs,\n        has = \"hasOwnProperty\",\n        wrap = Snap._.wrap;\n    /*\\\n     * Element.getBBox\n     [ method ]\n     **\n     * Returns the bounding box descriptor for the given element\n     **\n     = (object) bounding box descriptor:\n     o {\n     o     cx: (number) x of the center,\n     o     cy: (number) x of the center,\n     o     h: (number) height,\n     o     height: (number) height,\n     o     path: (string) path command for the box,\n     o     r0: (number) radius of a circle that fully encloses the box,\n     o     r1: (number) radius of the smallest circle that can be enclosed,\n     o     r2: (number) radius of the largest circle that can be enclosed,\n     o     vb: (string) box as a viewbox command,\n     o     w: (number) width,\n     o     width: (number) width,\n     o     x2: (number) x of the right side,\n     o     x: (number) x of the left side,\n     o     y2: (number) y of the bottom edge,\n     o     y: (number) y of the top edge\n     o }\n    \\*/\n    elproto.getBBox = function (isWithoutTransform) {\n        if (this.type == \"tspan\") {\n            return Snap._.box(this.node.getClientRects().item(0));\n        }\n        if (!Snap.Matrix || !Snap.path) {\n            return this.node.getBBox();\n        }\n        var el = this,\n            m = new Snap.Matrix;\n        if (el.removed) {\n            return Snap._.box();\n        }\n        while (el.type == \"use\") {\n            if (!isWithoutTransform) {\n                m = m.add(el.transform().localMatrix.translate(el.attr(\"x\") || 0, el.attr(\"y\") || 0));\n            }\n            if (el.original) {\n                el = el.original;\n            } else {\n                var href = el.attr(\"xlink:href\");\n                el = el.original = el.node.ownerDocument.getElementById(href.substring(href.indexOf(\"#\") + 1));\n            }\n        }\n        var _ = el._,\n            pathfinder = Snap.path.get[el.type] || Snap.path.get.deflt;\n        try {\n            if (isWithoutTransform) {\n                _.bboxwt = pathfinder ? Snap.path.getBBox(el.realPath = pathfinder(el)) : Snap._.box(el.node.getBBox());\n                return Snap._.box(_.bboxwt);\n            } else {\n                el.realPath = pathfinder(el);\n                el.matrix = el.transform().localMatrix;\n                _.bbox = Snap.path.getBBox(Snap.path.map(el.realPath, m.add(el.matrix)));\n                return Snap._.box(_.bbox);\n            }\n        } catch (e) {\n            // Firefox doesn’t give you bbox of hidden element\n            return Snap._.box();\n        }\n    };\n    var propString = function () {\n        return this.string;\n    };\n    function extractTransform(el, tstr) {\n        if (tstr == null) {\n            var doReturn = true;\n            if (el.type == \"linearGradient\" || el.type == \"radialGradient\") {\n                tstr = el.node.getAttribute(\"gradientTransform\");\n            } else if (el.type == \"pattern\") {\n                tstr = el.node.getAttribute(\"patternTransform\");\n            } else {\n                tstr = el.node.getAttribute(\"transform\");\n            }\n            if (!tstr) {\n                return new Snap.Matrix;\n            }\n            tstr = Snap._.svgTransform2string(tstr);\n        } else {\n            if (!Snap._.rgTransform.test(tstr)) {\n                tstr = Snap._.svgTransform2string(tstr);\n            } else {\n                tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, el._.transform || \"\");\n            }\n            if (is(tstr, \"array\")) {\n                tstr = Snap.path ? Snap.path.toString.call(tstr) : Str(tstr);\n            }\n            el._.transform = tstr;\n        }\n        var m = Snap._.transform2matrix(tstr, el.getBBox(1));\n        if (doReturn) {\n            return m;\n        } else {\n            el.matrix = m;\n        }\n    }\n    /*\\\n     * Element.transform\n     [ method ]\n     **\n     * Gets or sets transformation of the element\n     **\n     - tstr (string) transform string in Snap or SVG format\n     = (Element) the current element\n     * or\n     = (object) transformation descriptor:\n     o {\n     o     string (string) transform string,\n     o     globalMatrix (Matrix) matrix of all transformations applied to element or its parents,\n     o     localMatrix (Matrix) matrix of transformations applied only to the element,\n     o     diffMatrix (Matrix) matrix of difference between global and local transformations,\n     o     global (string) global transformation as string,\n     o     local (string) local transformation as string,\n     o     toString (function) returns `string` property\n     o }\n    \\*/\n    elproto.transform = function (tstr) {\n        var _ = this._;\n        if (tstr == null) {\n            var papa = this,\n                global = new Snap.Matrix(this.node.getCTM()),\n                local = extractTransform(this),\n                ms = [local],\n                m = new Snap.Matrix,\n                i,\n                localString = local.toTransformString(),\n                string = Str(local) == Str(this.matrix) ?\n                            Str(_.transform) : localString;\n            while (papa.type != \"svg\" && (papa = papa.parent())) {\n                ms.push(extractTransform(papa));\n            }\n            i = ms.length;\n            while (i--) {\n                m.add(ms[i]);\n            }\n            return {\n                string: string,\n                globalMatrix: global,\n                totalMatrix: m,\n                localMatrix: local,\n                diffMatrix: global.clone().add(local.invert()),\n                global: global.toTransformString(),\n                total: m.toTransformString(),\n                local: localString,\n                toString: propString\n            };\n        }\n        if (tstr instanceof Snap.Matrix) {\n            this.matrix = tstr;\n            this._.transform = tstr.toTransformString();\n        } else {\n            extractTransform(this, tstr);\n        }\n\n        if (this.node) {\n            if (this.type == \"linearGradient\" || this.type == \"radialGradient\") {\n                $(this.node, {gradientTransform: this.matrix});\n            } else if (this.type == \"pattern\") {\n                $(this.node, {patternTransform: this.matrix});\n            } else {\n                $(this.node, {transform: this.matrix});\n            }\n        }\n\n        return this;\n    };\n    /*\\\n     * Element.parent\n     [ method ]\n     **\n     * Returns the element's parent\n     **\n     = (Element) the parent element\n    \\*/\n    elproto.parent = function () {\n        return wrap(this.node.parentNode);\n    };\n    /*\\\n     * Element.append\n     [ method ]\n     **\n     * Appends the given element to current one\n     **\n     - el (Element|Set) element to append\n     = (Element) the parent element\n    \\*/\n    /*\\\n     * Element.add\n     [ method ]\n     **\n     * See @Element.append\n    \\*/\n    elproto.append = elproto.add = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this;\n                el.forEach(function (el) {\n                    it.add(el);\n                });\n                return this;\n            }\n            el = wrap(el);\n            this.node.appendChild(el.node);\n            el.paper = this.paper;\n        }\n        return this;\n    };\n    /*\\\n     * Element.appendTo\n     [ method ]\n     **\n     * Appends the current element to the given one\n     **\n     - el (Element) parent element to append to\n     = (Element) the child element\n    \\*/\n    elproto.appendTo = function (el) {\n        if (el) {\n            el = wrap(el);\n            el.append(this);\n        }\n        return this;\n    };\n    /*\\\n     * Element.prepend\n     [ method ]\n     **\n     * Prepends the given element to the current one\n     **\n     - el (Element) element to prepend\n     = (Element) the parent element\n    \\*/\n    elproto.prepend = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this,\n                    first;\n                el.forEach(function (el) {\n                    if (first) {\n                        first.after(el);\n                    } else {\n                        it.prepend(el);\n                    }\n                    first = el;\n                });\n                return this;\n            }\n            el = wrap(el);\n            var parent = el.parent();\n            this.node.insertBefore(el.node, this.node.firstChild);\n            this.add && this.add();\n            el.paper = this.paper;\n            this.parent() && this.parent().add();\n            parent && parent.add();\n        }\n        return this;\n    };\n    /*\\\n     * Element.prependTo\n     [ method ]\n     **\n     * Prepends the current element to the given one\n     **\n     - el (Element) parent element to prepend to\n     = (Element) the child element\n    \\*/\n    elproto.prependTo = function (el) {\n        el = wrap(el);\n        el.prepend(this);\n        return this;\n    };\n    /*\\\n     * Element.before\n     [ method ]\n     **\n     * Inserts given element before the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.before = function (el) {\n        if (el.type == \"set\") {\n            var it = this;\n            el.forEach(function (el) {\n                var parent = el.parent();\n                it.node.parentNode.insertBefore(el.node, it.node);\n                parent && parent.add();\n            });\n            this.parent().add();\n            return this;\n        }\n        el = wrap(el);\n        var parent = el.parent();\n        this.node.parentNode.insertBefore(el.node, this.node);\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.after\n     [ method ]\n     **\n     * Inserts given element after the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.after = function (el) {\n        el = wrap(el);\n        var parent = el.parent();\n        if (this.node.nextSibling) {\n            this.node.parentNode.insertBefore(el.node, this.node.nextSibling);\n        } else {\n            this.node.parentNode.appendChild(el.node);\n        }\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.insertBefore\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertBefore = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.insertAfter\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertAfter = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node.nextSibling);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.remove\n     [ method ]\n     **\n     * Removes element from the DOM\n     = (Element) the detached element\n    \\*/\n    elproto.remove = function () {\n        var parent = this.parent();\n        this.node.parentNode && this.node.parentNode.removeChild(this.node);\n        delete this.paper;\n        this.removed = true;\n        parent && parent.add();\n        return this;\n    };\n    /*\\\n     * Element.select\n     [ method ]\n     **\n     * Gathers the nested @Element matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Element) result of query selection\n    \\*/\n    elproto.select = function (query) {\n        return wrap(this.node.querySelector(query));\n    };\n    /*\\\n     * Element.selectAll\n     [ method ]\n     **\n     * Gathers nested @Element objects matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Set|array) result of query selection\n    \\*/\n    elproto.selectAll = function (query) {\n        var nodelist = this.node.querySelectorAll(query),\n            set = (Snap.set || Array)();\n        for (var i = 0; i < nodelist.length; i++) {\n            set.push(wrap(nodelist[i]));\n        }\n        return set;\n    };\n    /*\\\n     * Element.asPX\n     [ method ]\n     **\n     * Returns given attribute of the element as a `px` value (not %, em, etc.)\n     **\n     - attr (string) attribute name\n     - value (string) #optional attribute value\n     = (Element) result of query selection\n    \\*/\n    elproto.asPX = function (attr, value) {\n        if (value == null) {\n            value = this.attr(attr);\n        }\n        return +unit2px(this, attr, value);\n    };\n    // SIERRA Element.use(): I suggest adding a note about how to access the original element the returned <use> instantiates. It's a part of SVG with which ordinary web developers may be least familiar.\n    /*\\\n     * Element.use\n     [ method ]\n     **\n     * Creates a `<use>` element linked to the current element\n     **\n     = (Element) the `<use>` element\n    \\*/\n    elproto.use = function () {\n        var use,\n            id = this.node.id;\n        if (!id) {\n            id = this.id;\n            $(this.node, {\n                id: id\n            });\n        }\n        if (this.type == \"linearGradient\" || this.type == \"radialGradient\" ||\n            this.type == \"pattern\") {\n            use = make(this.type, this.node.parentNode);\n        } else {\n            use = make(\"use\", this.node.parentNode);\n        }\n        $(use.node, {\n            \"xlink:href\": \"#\" + id\n        });\n        use.original = this;\n        return use;\n    };\n    function fixids(el) {\n        var els = el.selectAll(\"*\"),\n            it,\n            url = /^\\s*url\\((\"|'|)(.*)\\1\\)\\s*$/,\n            ids = [],\n            uses = {};\n        function urltest(it, name) {\n            var val = $(it.node, name);\n            val = val && val.match(url);\n            val = val && val[2];\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    var attr = {};\n                    attr[name] = Snap.url(id);\n                    $(it.node, attr);\n                });\n            }\n        }\n        function linktest(it) {\n            var val = $(it.node, \"xlink:href\");\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    it.attr(\"xlink:href\", \"#\" + id);\n                });\n            }\n        }\n        for (var i = 0, ii = els.length; i < ii; i++) {\n            it = els[i];\n            urltest(it, \"fill\");\n            urltest(it, \"stroke\");\n            urltest(it, \"filter\");\n            urltest(it, \"mask\");\n            urltest(it, \"clip-path\");\n            linktest(it);\n            var oldid = $(it.node, \"id\");\n            if (oldid) {\n                $(it.node, {id: it.id});\n                ids.push({\n                    old: oldid,\n                    id: it.id\n                });\n            }\n        }\n        for (i = 0, ii = ids.length; i < ii; i++) {\n            var fs = uses[ids[i].old];\n            if (fs) {\n                for (var j = 0, jj = fs.length; j < jj; j++) {\n                    fs[j](ids[i].id);\n                }\n            }\n        }\n    }\n    /*\\\n     * Element.clone\n     [ method ]\n     **\n     * Creates a clone of the element and inserts it after the element\n     **\n     = (Element) the clone\n    \\*/\n    elproto.clone = function () {\n        var clone = wrap(this.node.cloneNode(true));\n        if ($(clone.node, \"id\")) {\n            $(clone.node, {id: clone.id});\n        }\n        fixids(clone);\n        clone.insertAfter(this);\n        return clone;\n    };\n    /*\\\n     * Element.toDefs\n     [ method ]\n     **\n     * Moves element to the shared `<defs>` area\n     **\n     = (Element) the element\n    \\*/\n    elproto.toDefs = function () {\n        var defs = getSomeDefs(this);\n        defs.appendChild(this.node);\n        return this;\n    };\n    /*\\\n     * Element.toPattern\n     [ method ]\n     **\n     * Creates a `<pattern>` element from the current element\n     **\n     * To create a pattern you have to specify the pattern rect:\n     - x (string|number)\n     - y (string|number)\n     - width (string|number)\n     - height (string|number)\n     = (Element) the `<pattern>` element\n     * You can use pattern later on as an argument for `fill` attribute:\n     | var p = paper.path(\"M10-5-10,15M15,0,0,15M0-5-20,15\").attr({\n     |         fill: \"none\",\n     |         stroke: \"#bada55\",\n     |         strokeWidth: 5\n     |     }).pattern(0, 0, 10, 10),\n     |     c = paper.circle(200, 200, 100);\n     | c.attr({\n     |     fill: p\n     | });\n    \\*/\n    elproto.pattern = elproto.toPattern = function (x, y, width, height) {\n        var p = make(\"pattern\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        $(p.node, {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            patternUnits: \"userSpaceOnUse\",\n            id: p.id,\n            viewBox: [x, y, width, height].join(\" \")\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n// SIERRA Element.marker(): clarify what a reference point is. E.g., helps you offset the object from its edge such as when centering it over a path.\n// SIERRA Element.marker(): I suggest the method should accept default reference point values.  Perhaps centered with (refX = width/2) and (refY = height/2)? Also, couldn't it assume the element's current _width_ and _height_? And please specify what _x_ and _y_ mean: offsets? If so, from where?  Couldn't they also be assigned default values?\n    /*\\\n     * Element.marker\n     [ method ]\n     **\n     * Creates a `<marker>` element from the current element\n     **\n     * To create a marker you have to specify the bounding rect and reference point:\n     - x (number)\n     - y (number)\n     - width (number)\n     - height (number)\n     - refX (number)\n     - refY (number)\n     = (Element) the `<marker>` element\n     * You can specify the marker later as an argument for `marker-start`, `marker-end`, `marker-mid`, and `marker` attributes. The `marker` attribute places the marker at every point along the path, and `marker-mid` places them at every point except the start and end.\n    \\*/\n    // TODO add usage for markers\n    elproto.marker = function (x, y, width, height, refX, refY) {\n        var p = make(\"marker\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            refX = x.refX || x.cx;\n            refY = x.refY || x.cy;\n            x = x.x;\n        }\n        $(p.node, {\n            viewBox: [x, y, width, height].join(\" \"),\n            markerWidth: width,\n            markerHeight: height,\n            orient: \"auto\",\n            refX: refX || 0,\n            refY: refY || 0,\n            id: p.id\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n    var eldata = {};\n    /*\\\n     * Element.data\n     [ method ]\n     **\n     * Adds or retrieves given value associated with given key. (Don’t confuse\n     * with `data-` attributes)\n     *\n     * See also @Element.removeData\n     - key (string) key to store data\n     - value (any) #optional value to store\n     = (object) @Element\n     * or, if value is not specified:\n     = (any) value\n     > Usage\n     | for (var i = 0, i < 5, i++) {\n     |     paper.circle(10 + 15 * i, 10, 10)\n     |          .attr({fill: \"#000\"})\n     |          .data(\"i\", i)\n     |          .click(function () {\n     |             alert(this.data(\"i\"));\n     |          });\n     | }\n    \\*/\n    elproto.data = function (key, value) {\n        var data = eldata[this.id] = eldata[this.id] || {};\n        if (arguments.length == 0){\n            eve(\"snap.data.get.\" + this.id, this, data, null);\n            return data;\n        }\n        if (arguments.length == 1) {\n            if (Snap.is(key, \"object\")) {\n                for (var i in key) if (key[has](i)) {\n                    this.data(i, key[i]);\n                }\n                return this;\n            }\n            eve(\"snap.data.get.\" + this.id, this, data[key], key);\n            return data[key];\n        }\n        data[key] = value;\n        eve(\"snap.data.set.\" + this.id, this, value, key);\n        return this;\n    };\n    /*\\\n     * Element.removeData\n     [ method ]\n     **\n     * Removes value associated with an element by given key.\n     * If key is not provided, removes all the data of the element.\n     - key (string) #optional key\n     = (object) @Element\n    \\*/\n    elproto.removeData = function (key) {\n        if (key == null) {\n            eldata[this.id] = {};\n        } else {\n            eldata[this.id] && delete eldata[this.id][key];\n        }\n        return this;\n    };\n    /*\\\n     * Element.outerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element, equivalent to HTML's `outerHTML`.\n     *\n     * See also @Element.innerSVG\n     = (string) SVG code for the element\n    \\*/\n    /*\\\n     * Element.toString\n     [ method ]\n     **\n     * See @Element.outerSVG\n    \\*/\n    elproto.outerSVG = elproto.toString = toString(1);\n    /*\\\n     * Element.innerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element's contents, equivalent to HTML's `innerHTML`\n     = (string) SVG code for the element\n    \\*/\n    elproto.innerSVG = toString();\n    function toString(type) {\n        return function () {\n            var res = type ? \"<\" + this.type : \"\",\n                attr = this.node.attributes,\n                chld = this.node.childNodes;\n            if (type) {\n                for (var i = 0, ii = attr.length; i < ii; i++) {\n                    res += \" \" + attr[i].name + '=\"' +\n                            attr[i].value.replace(/\"/g, '\\\\\"') + '\"';\n                }\n            }\n            if (chld.length) {\n                type && (res += \">\");\n                for (i = 0, ii = chld.length; i < ii; i++) {\n                    if (chld[i].nodeType == 3) {\n                        res += chld[i].nodeValue;\n                    } else if (chld[i].nodeType == 1) {\n                        res += wrap(chld[i]).toString();\n                    }\n                }\n                type && (res += \"</\" + this.type + \">\");\n            } else {\n                type && (res += \"/>\");\n            }\n            return res;\n        };\n    }\n    elproto.toDataURL = function () {\n        if (window && window.btoa) {\n            var bb = this.getBBox(),\n                svg = Snap.format('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"{width}\" height=\"{height}\" viewBox=\"{x} {y} {width} {height}\">{contents}</svg>', {\n                x: +bb.x.toFixed(3),\n                y: +bb.y.toFixed(3),\n                width: +bb.width.toFixed(3),\n                height: +bb.height.toFixed(3),\n                contents: this.outerSVG()\n            });\n            return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(svg)));\n        }\n    };\n    /*\\\n     * Fragment.select\n     [ method ]\n     **\n     * See @Element.select\n    \\*/\n    Fragment.prototype.select = elproto.select;\n    /*\\\n     * Fragment.selectAll\n     [ method ]\n     **\n     * See @Element.selectAll\n    \\*/\n    Fragment.prototype.selectAll = elproto.selectAll;\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var objectToString = Object.prototype.toString,\n        Str = String,\n        math = Math,\n        E = \"\";\n    function Matrix(a, b, c, d, e, f) {\n        if (b == null && objectToString.call(a) == \"[object SVGMatrix]\") {\n            this.a = a.a;\n            this.b = a.b;\n            this.c = a.c;\n            this.d = a.d;\n            this.e = a.e;\n            this.f = a.f;\n            return;\n        }\n        if (a != null) {\n            this.a = +a;\n            this.b = +b;\n            this.c = +c;\n            this.d = +d;\n            this.e = +e;\n            this.f = +f;\n        } else {\n            this.a = 1;\n            this.b = 0;\n            this.c = 0;\n            this.d = 1;\n            this.e = 0;\n            this.f = 0;\n        }\n    }\n    (function (matrixproto) {\n        /*\\\n         * Matrix.add\n         [ method ]\n         **\n         * Adds the given matrix to existing one\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        matrixproto.add = function (a, b, c, d, e, f) {\n            if (a && a instanceof Matrix) {\n                return this.add(a.a, a.b, a.c, a.d, a.e, a.f);\n            }\n            var aNew = a * this.a + b * this.c,\n                bNew = a * this.b + b * this.d;\n            this.e += e * this.a + f * this.c;\n            this.f += e * this.b + f * this.d;\n            this.c = c * this.a + d * this.c;\n            this.d = c * this.b + d * this.d;\n\n            this.a = aNew;\n            this.b = bNew;\n            return this;\n        };\n        /*\\\n         * Matrix.multLeft\n         [ method ]\n         **\n         * Multiplies a passed affine transform to the left: M * this.\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        Matrix.prototype.multLeft = function (a, b, c, d, e, f) {\n            if (a && a instanceof Matrix) {\n                return this.multLeft(a.a, a.b, a.c, a.d, a.e, a.f);\n            }\n            var aNew = a * this.a + c * this.b,\n                cNew = a * this.c + c * this.d,\n                eNew = a * this.e + c * this.f + e;\n            this.b = b * this.a + d * this.b;\n            this.d = b * this.c + d * this.d;\n            this.f = b * this.e + d * this.f + f;\n\n            this.a = aNew;\n            this.c = cNew;\n            this.e = eNew;\n            return this;\n        };\n        /*\\\n         * Matrix.invert\n         [ method ]\n         **\n         * Returns an inverted version of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.invert = function () {\n            var me = this,\n                x = me.a * me.d - me.b * me.c;\n            return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x);\n        };\n        /*\\\n         * Matrix.clone\n         [ method ]\n         **\n         * Returns a copy of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.clone = function () {\n            return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\n        };\n        /*\\\n         * Matrix.translate\n         [ method ]\n         **\n         * Translate the matrix\n         - x (number) horizontal offset distance\n         - y (number) vertical offset distance\n        \\*/\n        matrixproto.translate = function (x, y) {\n            this.e += x * this.a + y * this.c;\n            this.f += x * this.b + y * this.d;\n            return this;\n        };\n        /*\\\n         * Matrix.scale\n         [ method ]\n         **\n         * Scales the matrix\n         - x (number) amount to be scaled, with `1` resulting in no change\n         - y (number) #optional amount to scale along the vertical axis. (Otherwise `x` applies to both axes.)\n         - cx (number) #optional horizontal origin point from which to scale\n         - cy (number) #optional vertical origin point from which to scale\n         * Default cx, cy is the middle point of the element.\n        \\*/\n        matrixproto.scale = function (x, y, cx, cy) {\n            y == null && (y = x);\n            (cx || cy) && this.translate(cx, cy);\n            this.a *= x;\n            this.b *= x;\n            this.c *= y;\n            this.d *= y;\n            (cx || cy) && this.translate(-cx, -cy);\n            return this;\n        };\n        /*\\\n         * Matrix.rotate\n         [ method ]\n         **\n         * Rotates the matrix\n         - a (number) angle of rotation, in degrees\n         - x (number) horizontal origin point from which to rotate\n         - y (number) vertical origin point from which to rotate\n        \\*/\n        matrixproto.rotate = function (a, x, y) {\n            a = Snap.rad(a);\n            x = x || 0;\n            y = y || 0;\n            var cos = +math.cos(a).toFixed(9),\n                sin = +math.sin(a).toFixed(9);\n            this.add(cos, sin, -sin, cos, x, y);\n            return this.add(1, 0, 0, 1, -x, -y);\n        };\n        /*\\\n         * Matrix.skewX\n         [ method ]\n         **\n         * Skews the matrix along the x-axis\n         - x (number) Angle to skew along the x-axis (in degrees).\n        \\*/\n        matrixproto.skewX = function (x) {\n            return this.skew(x, 0);\n        };\n        /*\\\n         * Matrix.skewY\n         [ method ]\n         **\n         * Skews the matrix along the y-axis\n         - y (number) Angle to skew along the y-axis (in degrees).\n        \\*/\n        matrixproto.skewY = function (y) {\n            return this.skew(0, y);\n        };\n        /*\\\n         * Matrix.skew\n         [ method ]\n         **\n         * Skews the matrix\n         - y (number) Angle to skew along the y-axis (in degrees).\n         - x (number) Angle to skew along the x-axis (in degrees).\n        \\*/\n        matrixproto.skew = function (x, y) {\n            x = x || 0;\n            y = y || 0;\n            x = Snap.rad(x);\n            y = Snap.rad(y);\n            var c = math.tan(x).toFixed(9);\n            var b = math.tan(y).toFixed(9);\n            return this.add(1, b, c, 1, 0, 0);\n        };\n        /*\\\n         * Matrix.x\n         [ method ]\n         **\n         * Returns x coordinate for given point after transformation described by the matrix. See also @Matrix.y\n         - x (number)\n         - y (number)\n         = (number) x\n        \\*/\n        matrixproto.x = function (x, y) {\n            return x * this.a + y * this.c + this.e;\n        };\n        /*\\\n         * Matrix.y\n         [ method ]\n         **\n         * Returns y coordinate for given point after transformation described by the matrix. See also @Matrix.x\n         - x (number)\n         - y (number)\n         = (number) y\n        \\*/\n        matrixproto.y = function (x, y) {\n            return x * this.b + y * this.d + this.f;\n        };\n        matrixproto.get = function (i) {\n            return +this[Str.fromCharCode(97 + i)].toFixed(4);\n        };\n        matrixproto.toString = function () {\n            return \"matrix(\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + \")\";\n        };\n        matrixproto.offset = function () {\n            return [this.e.toFixed(4), this.f.toFixed(4)];\n        };\n        function norm(a) {\n            return a[0] * a[0] + a[1] * a[1];\n        }\n        function normalize(a) {\n            var mag = math.sqrt(norm(a));\n            a[0] && (a[0] /= mag);\n            a[1] && (a[1] /= mag);\n        }\n        /*\\\n         * Matrix.determinant\n         [ method ]\n         **\n         * Finds determinant of the given matrix.\n         = (number) determinant\n        \\*/\n        matrixproto.determinant = function () {\n            return this.a * this.d - this.b * this.c;\n        };\n        /*\\\n         * Matrix.split\n         [ method ]\n         **\n         * Splits matrix into primitive transformations\n         = (object) in format:\n         o dx (number) translation by x\n         o dy (number) translation by y\n         o scalex (number) scale by x\n         o scaley (number) scale by y\n         o shear (number) shear\n         o rotate (number) rotation in deg\n         o isSimple (boolean) could it be represented via simple transformations\n        \\*/\n        matrixproto.split = function () {\n            var out = {};\n            // translation\n            out.dx = this.e;\n            out.dy = this.f;\n\n            // scale and shear\n            var row = [[this.a, this.b], [this.c, this.d]];\n            out.scalex = math.sqrt(norm(row[0]));\n            normalize(row[0]);\n\n            out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];\n            row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];\n\n            out.scaley = math.sqrt(norm(row[1]));\n            normalize(row[1]);\n            out.shear /= out.scaley;\n\n            if (this.determinant() < 0) {\n                out.scalex = -out.scalex;\n            }\n\n            // rotation\n            var sin = row[0][1],\n                cos = row[1][1];\n            if (cos < 0) {\n                out.rotate = Snap.deg(math.acos(cos));\n                if (sin < 0) {\n                    out.rotate = 360 - out.rotate;\n                }\n            } else {\n                out.rotate = Snap.deg(math.asin(sin));\n            }\n\n            out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);\n            out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;\n            out.noRotation = !+out.shear.toFixed(9) && !out.rotate;\n            return out;\n        };\n        /*\\\n         * Matrix.toTransformString\n         [ method ]\n         **\n         * Returns transform string that represents given matrix\n         = (string) transform string\n        \\*/\n        matrixproto.toTransformString = function (shorter) {\n            var s = shorter || this.split();\n            if (!+s.shear.toFixed(9)) {\n                s.scalex = +s.scalex.toFixed(4);\n                s.scaley = +s.scaley.toFixed(4);\n                s.rotate = +s.rotate.toFixed(4);\n                return  (s.dx || s.dy ? \"t\" + [+s.dx.toFixed(4), +s.dy.toFixed(4)] : E) +\n                        (s.rotate ? \"r\" + [+s.rotate.toFixed(4), 0, 0] : E) +\n                        (s.scalex != 1 || s.scaley != 1 ? \"s\" + [s.scalex, s.scaley, 0, 0] : E);\n            } else {\n                return \"m\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];\n            }\n        };\n    })(Matrix.prototype);\n    /*\\\n     * Snap.Matrix\n     [ method ]\n     **\n     * Matrix constructor, extend on your own risk.\n     * To create matrices use @Snap.matrix.\n    \\*/\n    Snap.Matrix = Matrix;\n    /*\\\n     * Snap.matrix\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns a matrix based on the given parameters\n     - a (number)\n     - b (number)\n     - c (number)\n     - d (number)\n     - e (number)\n     - f (number)\n     * or\n     - svgMatrix (SVGMatrix)\n     = (object) @Matrix\n    \\*/\n    Snap.matrix = function (a, b, c, d, e, f) {\n        return new Matrix(a, b, c, d, e, f);\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var has = \"hasOwnProperty\",\n        make = Snap._.make,\n        wrap = Snap._.wrap,\n        is = Snap.is,\n        getSomeDefs = Snap._.getSomeDefs,\n        reURLValue = /^url\\((['\"]?)([^)]+)\\1\\)$/,\n        $ = Snap._.$,\n        URL = Snap.url,\n        Str = String,\n        separator = Snap._.separator,\n        E = \"\";\n    /*\\\n     * Snap.deurl\n     [ method ]\n     **\n     * Unwraps path from `\"url(<path>)\"`.\n     - value (string) url path\n     = (string) unwrapped path\n    \\*/\n    Snap.deurl = function (value) {\n        var res = String(value).match(reURLValue);\n        return res ? res[2] : value;\n    }\n    // Attributes event handlers\n    eve.on(\"snap.util.attr.mask\", function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value.type == \"mask\") {\n                var mask = value;\n            } else {\n                mask = make(\"mask\", getSomeDefs(this));\n                mask.node.appendChild(value.node);\n            }\n            !mask.node.id && $(mask.node, {\n                id: mask.id\n            });\n            $(this.node, {\n                mask: URL(mask.id)\n            });\n        }\n    });\n    (function (clipIt) {\n        eve.on(\"snap.util.attr.clip\", clipIt);\n        eve.on(\"snap.util.attr.clip-path\", clipIt);\n        eve.on(\"snap.util.attr.clipPath\", clipIt);\n    }(function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            var clip,\n                node = value.node;\n            while (node) {\n                if (node.nodeName === \"clipPath\") {\n                    clip = new Element(node);\n                    break;\n                }\n                if (node.nodeName === \"svg\") {\n                    clip = undefined;\n                    break;\n                }\n                node = node.parentNode;\n            }\n            if (!clip) {\n                clip = make(\"clipPath\", getSomeDefs(this));\n                clip.node.appendChild(value.node);\n                !clip.node.id && $(clip.node, {\n                    id: clip.id\n                });\n            }\n            $(this.node, {\n                \"clip-path\": URL(clip.node.id || clip.id)\n            });\n        }\n    }));\n    function fillStroke(name) {\n        return function (value) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1 &&\n                (value.node.firstChild.tagName == \"radialGradient\" ||\n                value.node.firstChild.tagName == \"linearGradient\" ||\n                value.node.firstChild.tagName == \"pattern\")) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value instanceof Element) {\n                if (value.type == \"radialGradient\" || value.type == \"linearGradient\"\n                   || value.type == \"pattern\") {\n                    if (!value.node.id) {\n                        $(value.node, {\n                            id: value.id\n                        });\n                    }\n                    var fill = URL(value.node.id);\n                } else {\n                    fill = value.attr(name);\n                }\n            } else {\n                fill = Snap.color(value);\n                if (fill.error) {\n                    var grad = Snap(getSomeDefs(this).ownerSVGElement).gradient(value);\n                    if (grad) {\n                        if (!grad.node.id) {\n                            $(grad.node, {\n                                id: grad.id\n                            });\n                        }\n                        fill = URL(grad.node.id);\n                    } else {\n                        fill = value;\n                    }\n                } else {\n                    fill = Str(fill);\n                }\n            }\n            var attrs = {};\n            attrs[name] = fill;\n            $(this.node, attrs);\n            this.node.style[name] = E;\n        };\n    }\n    eve.on(\"snap.util.attr.fill\", fillStroke(\"fill\"));\n    eve.on(\"snap.util.attr.stroke\", fillStroke(\"stroke\"));\n    var gradrg = /^([lr])(?:\\(([^)]*)\\))?(.*)$/i;\n    eve.on(\"snap.util.grad.parse\", function parseGrad(string) {\n        string = Str(string);\n        var tokens = string.match(gradrg);\n        if (!tokens) {\n            return null;\n        }\n        var type = tokens[1],\n            params = tokens[2],\n            stops = tokens[3];\n        params = params.split(/\\s*,\\s*/).map(function (el) {\n            return +el == el ? +el : el;\n        });\n        if (params.length == 1 && params[0] == 0) {\n            params = [];\n        }\n        stops = stops.split(\"-\");\n        stops = stops.map(function (el) {\n            el = el.split(\":\");\n            var out = {\n                color: el[0]\n            };\n            if (el[1]) {\n                out.offset = parseFloat(el[1]);\n            }\n            return out;\n        });\n        var len = stops.length,\n            start = 0,\n            j = 0;\n        function seed(i, end) {\n            var step = (end - start) / (i - j);\n            for (var k = j; k < i; k++) {\n                stops[k].offset = +(+start + step * (k - j)).toFixed(2);\n            }\n            j = i;\n            start = end;\n        }\n        len--;\n        for (var i = 0; i < len; i++) if (\"offset\" in stops[i]) {\n            seed(i, stops[i].offset);\n        }\n        stops[len].offset = stops[len].offset || 100;\n        seed(len, stops[len].offset);\n        return {\n            type: type,\n            params: params,\n            stops: stops\n        };\n    });\n\n    eve.on(\"snap.util.attr.d\", function (value) {\n        eve.stop();\n        if (is(value, \"array\") && is(value[0], \"array\")) {\n            value = Snap.path.toString.call(value);\n        }\n        value = Str(value);\n        if (value.match(/[ruo]/i)) {\n            value = Snap.path.toAbsolute(value);\n        }\n        $(this.node, {d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.#text\", function (value) {\n        eve.stop();\n        value = Str(value);\n        var txt = glob.doc.createTextNode(value);\n        while (this.node.firstChild) {\n            this.node.removeChild(this.node.firstChild);\n        }\n        this.node.appendChild(txt);\n    })(-1);\n    eve.on(\"snap.util.attr.path\", function (value) {\n        eve.stop();\n        this.attr({d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.class\", function (value) {\n        eve.stop();\n        this.node.className.baseVal = value;\n    })(-1);\n    eve.on(\"snap.util.attr.viewBox\", function (value) {\n        var vb;\n        if (is(value, \"object\") && \"x\" in value) {\n            vb = [value.x, value.y, value.width, value.height].join(\" \");\n        } else if (is(value, \"array\")) {\n            vb = value.join(\" \");\n        } else {\n            vb = value;\n        }\n        $(this.node, {\n            viewBox: vb\n        });\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.transform\", function (value) {\n        this.transform(value);\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.r\", function (value) {\n        if (this.type == \"rect\") {\n            eve.stop();\n            $(this.node, {\n                rx: value,\n                ry: value\n            });\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.textpath\", function (value) {\n        eve.stop();\n        if (this.type == \"text\") {\n            var id, tp, node;\n            if (!value && this.textPath) {\n                tp = this.textPath;\n                while (tp.node.firstChild) {\n                    this.node.appendChild(tp.node.firstChild);\n                }\n                tp.remove();\n                delete this.textPath;\n                return;\n            }\n            if (is(value, \"string\")) {\n                var defs = getSomeDefs(this),\n                    path = wrap(defs.parentNode).path(value);\n                defs.appendChild(path.node);\n                id = path.id;\n                path.attr({id: id});\n            } else {\n                value = wrap(value);\n                if (value instanceof Element) {\n                    id = value.attr(\"id\");\n                    if (!id) {\n                        id = value.id;\n                        value.attr({id: id});\n                    }\n                }\n            }\n            if (id) {\n                tp = this.textPath;\n                node = this.node;\n                if (tp) {\n                    tp.attr({\"xlink:href\": \"#\" + id});\n                } else {\n                    tp = $(\"textPath\", {\n                        \"xlink:href\": \"#\" + id\n                    });\n                    while (node.firstChild) {\n                        tp.appendChild(node.firstChild);\n                    }\n                    node.appendChild(tp);\n                    this.textPath = wrap(tp);\n                }\n            }\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.text\", function (value) {\n        if (this.type == \"text\") {\n            var i = 0,\n                node = this.node,\n                tuner = function (chunk) {\n                    var out = $(\"tspan\");\n                    if (is(chunk, \"array\")) {\n                        for (var i = 0; i < chunk.length; i++) {\n                            out.appendChild(tuner(chunk[i]));\n                        }\n                    } else {\n                        out.appendChild(glob.doc.createTextNode(chunk));\n                    }\n                    out.normalize && out.normalize();\n                    return out;\n                };\n            while (node.firstChild) {\n                node.removeChild(node.firstChild);\n            }\n            var tuned = tuner(value);\n            while (tuned.firstChild) {\n                node.appendChild(tuned.firstChild);\n            }\n        }\n        eve.stop();\n    })(-1);\n    function setFontSize(value) {\n        eve.stop();\n        if (value == +value) {\n            value += \"px\";\n        }\n        this.node.style.fontSize = value;\n    }\n    eve.on(\"snap.util.attr.fontSize\", setFontSize)(-1);\n    eve.on(\"snap.util.attr.font-size\", setFontSize)(-1);\n\n\n    eve.on(\"snap.util.getattr.transform\", function () {\n        eve.stop();\n        return this.transform();\n    })(-1);\n    eve.on(\"snap.util.getattr.textpath\", function () {\n        eve.stop();\n        return this.textPath;\n    })(-1);\n    // Markers\n    (function () {\n        function getter(end) {\n            return function () {\n                eve.stop();\n                var style = glob.doc.defaultView.getComputedStyle(this.node, null).getPropertyValue(\"marker-\" + end);\n                if (style == \"none\") {\n                    return style;\n                } else {\n                    return Snap(glob.doc.getElementById(style.match(reURLValue)[1]));\n                }\n            };\n        }\n        function setter(end) {\n            return function (value) {\n                eve.stop();\n                var name = \"marker\" + end.charAt(0).toUpperCase() + end.substring(1);\n                if (value == \"\" || !value) {\n                    this.node.style[name] = \"none\";\n                    return;\n                }\n                if (value.type == \"marker\") {\n                    var id = value.node.id;\n                    if (!id) {\n                        $(value.node, {id: value.id});\n                    }\n                    this.node.style[name] = URL(id);\n                    return;\n                }\n            };\n        }\n        eve.on(\"snap.util.getattr.marker-end\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.markerEnd\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.marker-start\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.markerStart\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.marker-mid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.getattr.markerMid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.marker-end\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.markerEnd\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.marker-start\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.markerStart\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.marker-mid\", setter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.markerMid\", setter(\"mid\"))(-1);\n    }());\n    eve.on(\"snap.util.getattr.r\", function () {\n        if (this.type == \"rect\" && $(this.node, \"rx\") == $(this.node, \"ry\")) {\n            eve.stop();\n            return $(this.node, \"rx\");\n        }\n    })(-1);\n    function textExtract(node) {\n        var out = [];\n        var children = node.childNodes;\n        for (var i = 0, ii = children.length; i < ii; i++) {\n            var chi = children[i];\n            if (chi.nodeType == 3) {\n                out.push(chi.nodeValue);\n            }\n            if (chi.tagName == \"tspan\") {\n                if (chi.childNodes.length == 1 && chi.firstChild.nodeType == 3) {\n                    out.push(chi.firstChild.nodeValue);\n                } else {\n                    out.push(textExtract(chi));\n                }\n            }\n        }\n        return out;\n    }\n    eve.on(\"snap.util.getattr.text\", function () {\n        if (this.type == \"text\" || this.type == \"tspan\") {\n            eve.stop();\n            var out = textExtract(this.node);\n            return out.length == 1 ? out[0] : out;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.#text\", function () {\n        return this.node.textContent;\n    })(-1);\n    eve.on(\"snap.util.getattr.fill\", function (internal) {\n        if (internal) {\n            return;\n        }\n        eve.stop();\n        var value = eve(\"snap.util.getattr.fill\", this, true).firstDefined();\n        return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on(\"snap.util.getattr.stroke\", function (internal) {\n        if (internal) {\n            return;\n        }\n        eve.stop();\n        var value = eve(\"snap.util.getattr.stroke\", this, true).firstDefined();\n        return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on(\"snap.util.getattr.viewBox\", function () {\n        eve.stop();\n        var vb = $(this.node, \"viewBox\");\n        if (vb) {\n            vb = vb.split(separator);\n            return Snap._.box(+vb[0], +vb[1], +vb[2], +vb[3]);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.points\", function () {\n        var p = $(this.node, \"points\");\n        eve.stop();\n        if (p) {\n            return p.split(separator);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.path\", function () {\n        var p = $(this.node, \"d\");\n        eve.stop();\n        return p;\n    })(-1);\n    eve.on(\"snap.util.getattr.class\", function () {\n        return this.node.className.baseVal;\n    })(-1);\n    function getFontSize() {\n        eve.stop();\n        return this.node.style.fontSize;\n    }\n    eve.on(\"snap.util.getattr.fontSize\", getFontSize)(-1);\n    eve.on(\"snap.util.getattr.font-size\", getFontSize)(-1);\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var rgNotSpace = /\\S+/g,\n        rgBadSpace = /[\\t\\r\\n\\f]/g,\n        rgTrim = /(^\\s+|\\s+$)/g,\n        Str = String,\n        elproto = Element.prototype;\n    /*\\\n     * Element.addClass\n     [ method ]\n     **\n     * Adds given class name or list of class names to the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.addClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n\n        if (classes.length) {\n            j = 0;\n            while (clazz = classes[j++]) {\n                pos = curClasses.indexOf(clazz);\n                if (!~pos) {\n                    curClasses.push(clazz);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.removeClass\n     [ method ]\n     **\n     * Removes given class name or list of class names from the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.removeClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        if (curClasses.length) {\n            j = 0;\n            while (clazz = classes[j++]) {\n                pos = curClasses.indexOf(clazz);\n                if (~pos) {\n                    curClasses.splice(pos, 1);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.hasClass\n     [ method ]\n     **\n     * Checks if the element has a given class name in the list of class names applied to it.\n     - value (string) class name\n     **\n     = (boolean) `true` if the element has given class\n    \\*/\n    elproto.hasClass = function (value) {\n        var elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [];\n        return !!~curClasses.indexOf(value);\n    };\n    /*\\\n     * Element.toggleClass\n     [ method ]\n     **\n     * Add or remove one or more classes from the element, depending on either\n     * the class’s presence or the value of the `flag` argument.\n     - value (string) class name or space separated list of class names\n     - flag (boolean) value to determine whether the class should be added or removed\n     **\n     = (Element) original element.\n    \\*/\n    elproto.toggleClass = function (value, flag) {\n        if (flag != null) {\n            if (flag) {\n                return this.addClass(value);\n            } else {\n                return this.removeClass(value);\n            }\n        }\n        var classes = (value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        j = 0;\n        while (clazz = classes[j++]) {\n            pos = curClasses.indexOf(clazz);\n            if (~pos) {\n                curClasses.splice(pos, 1);\n            } else {\n                curClasses.push(clazz);\n            }\n        }\n\n        finalValue = curClasses.join(\" \");\n        if (className != finalValue) {\n            elem.className.baseVal = finalValue;\n        }\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var operators = {\n            \"+\": function (x, y) {\n                    return x + y;\n                },\n            \"-\": function (x, y) {\n                    return x - y;\n                },\n            \"/\": function (x, y) {\n                    return x / y;\n                },\n            \"*\": function (x, y) {\n                    return x * y;\n                }\n        },\n        Str = String,\n        reUnit = /[a-z]+$/i,\n        reAddon = /^\\s*([+\\-\\/*])\\s*=\\s*([\\d.eE+\\-]+)\\s*([^\\d\\s]+)?\\s*$/;\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    eve.on(\"snap.util.attr\", function (val) {\n        var plus = Str(val).match(reAddon);\n        if (plus) {\n            var evnt = eve.nt(),\n                name = evnt.substring(evnt.lastIndexOf(\".\") + 1),\n                a = this.attr(name),\n                atr = {};\n            eve.stop();\n            var unit = plus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[plus[1]];\n            if (aUnit && aUnit == unit) {\n                val = op(parseFloat(a), +plus[2]);\n            } else {\n                a = this.asPX(name);\n                val = op(this.asPX(name), this.asPX(name, plus[2] + unit));\n            }\n            if (isNaN(a) || isNaN(val)) {\n                return;\n            }\n            atr[name] = val;\n            this.attr(atr);\n        }\n    })(-10);\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this,\n            bplus = Str(b).match(reAddon);\n        if (bplus) {\n            eve.stop();\n            var unit = bplus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[bplus[1]];\n            if (aUnit && aUnit == unit) {\n                return {\n                    from: parseFloat(a),\n                    to: op(parseFloat(a), +bplus[2]),\n                    f: getUnit(aUnit)\n                };\n            } else {\n                a = this.asPX(name);\n                return {\n                    from: a,\n                    to: op(a, this.asPX(name, bplus[2] + unit)),\n                    f: getNumber\n                };\n            }\n        }\n    })(-10);\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var proto = Paper.prototype,\n        is = Snap.is;\n    /*\\\n     * Paper.rect\n     [ method ]\n     *\n     * Draws a rectangle\n     **\n     - x (number) x coordinate of the top left corner\n     - y (number) y coordinate of the top left corner\n     - width (number) width\n     - height (number) height\n     - rx (number) #optional horizontal radius for rounded corners, default is 0\n     - ry (number) #optional vertical radius for rounded corners, default is rx or 0\n     = (object) the `rect` element\n     **\n     > Usage\n     | // regular rectangle\n     | var c = paper.rect(10, 10, 50, 50);\n     | // rectangle with rounded corners\n     | var c = paper.rect(40, 40, 50, 50, 10);\n    \\*/\n    proto.rect = function (x, y, w, h, rx, ry) {\n        var attr;\n        if (ry == null) {\n            ry = rx;\n        }\n        if (is(x, \"object\") && x == \"[object Object]\") {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                width: w,\n                height: h\n            };\n            if (rx != null) {\n                attr.rx = rx;\n                attr.ry = ry;\n            }\n        }\n        return this.el(\"rect\", attr);\n    };\n    /*\\\n     * Paper.circle\n     [ method ]\n     **\n     * Draws a circle\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - r (number) radius\n     = (object) the `circle` element\n     **\n     > Usage\n     | var c = paper.circle(50, 50, 40);\n    \\*/\n    proto.circle = function (cx, cy, r) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr = {\n                cx: cx,\n                cy: cy,\n                r: r\n            };\n        }\n        return this.el(\"circle\", attr);\n    };\n\n    var preload = (function () {\n        function onerror() {\n            this.parentNode.removeChild(this);\n        }\n        return function (src, f) {\n            var img = glob.doc.createElement(\"img\"),\n                body = glob.doc.body;\n            img.style.cssText = \"position:absolute;left:-9999em;top:-9999em\";\n            img.onload = function () {\n                f.call(img);\n                img.onload = img.onerror = null;\n                body.removeChild(img);\n            };\n            img.onerror = onerror;\n            body.appendChild(img);\n            img.src = src;\n        };\n    }());\n\n    /*\\\n     * Paper.image\n     [ method ]\n     **\n     * Places an image on the surface\n     **\n     - src (string) URI of the source image\n     - x (number) x offset position\n     - y (number) y offset position\n     - width (number) width of the image\n     - height (number) height of the image\n     = (object) the `image` element\n     * or\n     = (object) Snap element object with type `image`\n     **\n     > Usage\n     | var c = paper.image(\"apple.png\", 10, 10, 80, 80);\n    \\*/\n    proto.image = function (src, x, y, width, height) {\n        var el = this.el(\"image\");\n        if (is(src, \"object\") && \"src\" in src) {\n            el.attr(src);\n        } else if (src != null) {\n            var set = {\n                \"xlink:href\": src,\n                preserveAspectRatio: \"none\"\n            };\n            if (x != null && y != null) {\n                set.x = x;\n                set.y = y;\n            }\n            if (width != null && height != null) {\n                set.width = width;\n                set.height = height;\n            } else {\n                preload(src, function () {\n                    Snap._.$(el.node, {\n                        width: this.offsetWidth,\n                        height: this.offsetHeight\n                    });\n                });\n            }\n            Snap._.$(el.node, set);\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ellipse\n     [ method ]\n     **\n     * Draws an ellipse\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - rx (number) horizontal radius\n     - ry (number) vertical radius\n     = (object) the `ellipse` element\n     **\n     > Usage\n     | var c = paper.ellipse(50, 50, 40, 20);\n    \\*/\n    proto.ellipse = function (cx, cy, rx, ry) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr ={\n                cx: cx,\n                cy: cy,\n                rx: rx,\n                ry: ry\n            };\n        }\n        return this.el(\"ellipse\", attr);\n    };\n    // SIERRA Paper.path(): Unclear from the link what a Catmull-Rom curveto is, and why it would make life any easier.\n    /*\\\n     * Paper.path\n     [ method ]\n     **\n     * Creates a `<path>` element using the given string as the path's definition\n     - pathString (string) #optional path string in SVG format\n     * Path string consists of one-letter commands, followed by comma seprarated arguments in numerical form. Example:\n     | \"M10,20L30,40\"\n     * This example features two commands: `M`, with arguments `(10, 20)` and `L` with arguments `(30, 40)`. Uppercase letter commands express coordinates in absolute terms, while lowercase commands express them in relative terms from the most recently declared coordinates.\n     *\n     # <p>Here is short list of commands available, for more details see <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path's data attribute's format are described in the SVG specification.\">SVG path string format</a> or <a href=\"https://developer.mozilla.org/en/SVG/Tutorial/Paths\">article about path strings at MDN</a>.</p>\n     # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>\n     # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>\n     # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>\n     # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>\n     # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>\n     # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>\n     # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>\n     # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>\n     # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>\n     # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>\n     # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>\n     # <tr><td>R</td><td><a href=\"http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline\">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>\n     * * _Catmull-Rom curveto_ is a not standard SVG command and added to make life easier.\n     * Note: there is a special case when a path consists of only three commands: `M10,10R…z`. In this case the path connects back to its starting point.\n     > Usage\n     | var c = paper.path(\"M10 10L90 90\");\n     | // draw a diagonal line:\n     | // move to 10,10, line to 90,90\n    \\*/\n    proto.path = function (d) {\n        var attr;\n        if (is(d, \"object\") && !is(d, \"array\")) {\n            attr = d;\n        } else if (d) {\n            attr = {d: d};\n        }\n        return this.el(\"path\", attr);\n    };\n    /*\\\n     * Paper.g\n     [ method ]\n     **\n     * Creates a group element\n     **\n     - varargs (…) #optional elements to nest within the group\n     = (object) the `g` element\n     **\n     > Usage\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g(c2, c1); // note that the order of elements is different\n     * or\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g();\n     | g.add(c2, c1);\n    \\*/\n    /*\\\n     * Paper.group\n     [ method ]\n     **\n     * See @Paper.g\n    \\*/\n    proto.group = proto.g = function (first) {\n        var attr,\n            el = this.el(\"g\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.svg\n     [ method ]\n     **\n     * Creates a nested SVG element.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `svg` element\n     **\n    \\*/\n    proto.svg = function (x, y, width, height, vbx, vby, vbw, vbh) {\n        var attrs = {};\n        if (is(x, \"object\") && y == null) {\n            attrs = x;\n        } else {\n            if (x != null) {\n                attrs.x = x;\n            }\n            if (y != null) {\n                attrs.y = y;\n            }\n            if (width != null) {\n                attrs.width = width;\n            }\n            if (height != null) {\n                attrs.height = height;\n            }\n            if (vbx != null && vby != null && vbw != null && vbh != null) {\n                attrs.viewBox = [vbx, vby, vbw, vbh];\n            }\n        }\n        return this.el(\"svg\", attrs);\n    };\n    /*\\\n     * Paper.mask\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a mask.\n     **\n     = (object) the `mask` element\n     **\n    \\*/\n    proto.mask = function (first) {\n        var attr,\n            el = this.el(\"mask\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ptrn\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a pattern.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `pattern` element\n     **\n    \\*/\n    proto.ptrn = function (x, y, width, height, vx, vy, vw, vh) {\n        if (is(x, \"object\")) {\n            var attr = x;\n        } else {\n            attr = {patternUnits: \"userSpaceOnUse\"};\n            if (x) {\n                attr.x = x;\n            }\n            if (y) {\n                attr.y = y;\n            }\n            if (width != null) {\n                attr.width = width;\n            }\n            if (height != null) {\n                attr.height = height;\n            }\n            if (vx != null && vy != null && vw != null && vh != null) {\n                attr.viewBox = [vx, vy, vw, vh];\n            } else {\n                attr.viewBox = [x || 0, y || 0, width || 0, height || 0];\n            }\n        }\n        return this.el(\"pattern\", attr);\n    };\n    /*\\\n     * Paper.use\n     [ method ]\n     **\n     * Creates a <use> element.\n     - id (string) @optional id of element to link\n     * or\n     - id (Element) @optional element to link\n     **\n     = (object) the `use` element\n     **\n    \\*/\n    proto.use = function (id) {\n        if (id != null) {\n            if (id instanceof Element) {\n                if (!id.attr(\"id\")) {\n                    id.attr({id: Snap._.id(id)});\n                }\n                id = id.attr(\"id\");\n            }\n            if (String(id).charAt() == \"#\") {\n                id = id.substring(1);\n            }\n            return this.el(\"use\", {\"xlink:href\": \"#\" + id});\n        } else {\n            return Element.prototype.use.call(this);\n        }\n    };\n    /*\\\n     * Paper.symbol\n     [ method ]\n     **\n     * Creates a <symbol> element.\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     = (object) the `symbol` element\n     **\n    \\*/\n    proto.symbol = function (vx, vy, vw, vh) {\n        var attr = {};\n        if (vx != null && vy != null && vw != null && vh != null) {\n            attr.viewBox = [vx, vy, vw, vh];\n        }\n\n        return this.el(\"symbol\", attr);\n    };\n    /*\\\n     * Paper.text\n     [ method ]\n     **\n     * Draws a text string\n     **\n     - x (number) x coordinate position\n     - y (number) y coordinate position\n     - text (string|array) The text string to draw or array of strings to nest within separate `<tspan>` elements\n     = (object) the `text` element\n     **\n     > Usage\n     | var t1 = paper.text(50, 50, \"Snap\");\n     | var t2 = paper.text(50, 50, [\"S\",\"n\",\"a\",\"p\"]);\n     | // Text path usage\n     | t1.attr({textpath: \"M10,10L100,100\"});\n     | // or\n     | var pth = paper.path(\"M10,10L100,100\");\n     | t1.attr({textpath: pth});\n    \\*/\n    proto.text = function (x, y, text) {\n        var attr = {};\n        if (is(x, \"object\")) {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                text: text || \"\"\n            };\n        }\n        return this.el(\"text\", attr);\n    };\n    /*\\\n     * Paper.line\n     [ method ]\n     **\n     * Draws a line\n     **\n     - x1 (number) x coordinate position of the start\n     - y1 (number) y coordinate position of the start\n     - x2 (number) x coordinate position of the end\n     - y2 (number) y coordinate position of the end\n     = (object) the `line` element\n     **\n     > Usage\n     | var t1 = paper.line(50, 50, 100, 100);\n    \\*/\n    proto.line = function (x1, y1, x2, y2) {\n        var attr = {};\n        if (is(x1, \"object\")) {\n            attr = x1;\n        } else if (x1 != null) {\n            attr = {\n                x1: x1,\n                x2: x2,\n                y1: y1,\n                y2: y2\n            };\n        }\n        return this.el(\"line\", attr);\n    };\n    /*\\\n     * Paper.polyline\n     [ method ]\n     **\n     * Draws a polyline\n     **\n     - points (array) array of points\n     * or\n     - varargs (…) points\n     = (object) the `polyline` element\n     **\n     > Usage\n     | var p1 = paper.polyline([10, 10, 100, 100]);\n     | var p2 = paper.polyline(10, 10, 100, 100);\n    \\*/\n    proto.polyline = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polyline\", attr);\n    };\n    /*\\\n     * Paper.polygon\n     [ method ]\n     **\n     * Draws a polygon. See @Paper.polyline\n    \\*/\n    proto.polygon = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polygon\", attr);\n    };\n    // gradients\n    (function () {\n        var $ = Snap._.$;\n        // gradients' helpers\n        /*\\\n         * Element.stops\n         [ method ]\n         **\n         * Only for gradients!\n         * Returns array of gradient stops elements.\n         = (array) the stops array.\n        \\*/\n        function Gstops() {\n            return this.selectAll(\"stop\");\n        }\n        /*\\\n         * Element.addStop\n         [ method ]\n         **\n         * Only for gradients!\n         * Adds another stop to the gradient.\n         - color (string) stops color\n         - offset (number) stops offset 0..100\n         = (object) gradient element\n        \\*/\n        function GaddStop(color, offset) {\n            var stop = $(\"stop\"),\n                attr = {\n                    offset: +offset + \"%\"\n                };\n            color = Snap.color(color);\n            attr[\"stop-color\"] = color.hex;\n            if (color.opacity < 1) {\n                attr[\"stop-opacity\"] = color.opacity;\n            }\n            $(stop, attr);\n            var stops = this.stops(),\n                inserted;\n            for (var i = 0; i < stops.length; i++) {\n                var stopOffset = parseFloat(stops[i].attr(\"offset\"));\n                if (stopOffset > offset) {\n                    this.node.insertBefore(stop, stops[i].node);\n                    inserted = true;\n                    break;\n                }\n            }\n            if (!inserted) {\n                this.node.appendChild(stop);\n            }\n            return this;\n        }\n        function GgetBBox() {\n            if (this.type == \"linearGradient\") {\n                var x1 = $(this.node, \"x1\") || 0,\n                    x2 = $(this.node, \"x2\") || 1,\n                    y1 = $(this.node, \"y1\") || 0,\n                    y2 = $(this.node, \"y2\") || 0;\n                return Snap._.box(x1, y1, math.abs(x2 - x1), math.abs(y2 - y1));\n            } else {\n                var cx = this.node.cx || .5,\n                    cy = this.node.cy || .5,\n                    r = this.node.r || 0;\n                return Snap._.box(cx - r, cy - r, r * 2, r * 2);\n            }\n        }\n        /*\\\n         * Element.setStops\n         [ method ]\n         **\n         * Only for gradients!\n         * Updates stops of the gradient based on passed gradient descriptor. See @Ppaer.gradient\n         - str (string) gradient descriptor part after `()`.\n         = (object) gradient element\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         | g.setStops(\"#fff-#000-#f00-#fc0\");\n        \\*/\n        function GsetStops(str) {\n            var grad = str,\n                stops = this.stops();\n            if (typeof str == \"string\") {\n                grad = eve(\"snap.util.grad.parse\", null, \"l(0,0,0,1)\" + str).firstDefined().stops;\n            }\n            if (!Snap.is(grad, \"array\")) {\n                return;\n            }\n            for (var i = 0; i < stops.length; i++) {\n                if (grad[i]) {\n                    var color = Snap.color(grad[i].color),\n                        attr = {\"offset\": grad[i].offset + \"%\"};\n                    attr[\"stop-color\"] = color.hex;\n                    if (color.opacity < 1) {\n                        attr[\"stop-opacity\"] = color.opacity;\n                    }\n                    stops[i].attr(attr);\n                } else {\n                    stops[i].remove();\n                }\n            }\n            for (i = stops.length; i < grad.length; i++) {\n                this.addStop(grad[i].color, grad[i].offset);\n            }\n            return this;\n        }\n        function gradient(defs, str) {\n            var grad = eve(\"snap.util.grad.parse\", null, str).firstDefined(),\n                el;\n            if (!grad) {\n                return null;\n            }\n            grad.params.unshift(defs);\n            if (grad.type.toLowerCase() == \"l\") {\n                el = gradientLinear.apply(0, grad.params);\n            } else {\n                el = gradientRadial.apply(0, grad.params);\n            }\n            if (grad.type != grad.type.toLowerCase()) {\n                $(el.node, {\n                    gradientUnits: \"userSpaceOnUse\"\n                });\n            }\n            var stops = grad.stops,\n                len = stops.length;\n            for (var i = 0; i < len; i++) {\n                var stop = stops[i];\n                el.addStop(stop.color, stop.offset);\n            }\n            return el;\n        }\n        function gradientLinear(defs, x1, y1, x2, y2) {\n            var el = Snap._.make(\"linearGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            el.setStops = GsetStops;\n            if (x1 != null) {\n                $(el.node, {\n                    x1: x1,\n                    y1: y1,\n                    x2: x2,\n                    y2: y2\n                });\n            }\n            return el;\n        }\n        function gradientRadial(defs, cx, cy, r, fx, fy) {\n            var el = Snap._.make(\"radialGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            if (cx != null) {\n                $(el.node, {\n                    cx: cx,\n                    cy: cy,\n                    r: r\n                });\n            }\n            if (fx != null && fy != null) {\n                $(el.node, {\n                    fx: fx,\n                    fy: fy\n                });\n            }\n            return el;\n        }\n        /*\\\n         * Paper.gradient\n         [ method ]\n         **\n         * Creates a gradient element\n         **\n         - gradient (string) gradient descriptor\n         > Gradient Descriptor\n         * The gradient descriptor is an expression formatted as\n         * follows: `<type>(<coords>)<colors>`.  The `<type>` can be\n         * either linear or radial.  The uppercase `L` or `R` letters\n         * indicate absolute coordinates offset from the SVG surface.\n         * Lowercase `l` or `r` letters indicate coordinates\n         * calculated relative to the element to which the gradient is\n         * applied.  Coordinates specify a linear gradient vector as\n         * `x1`, `y1`, `x2`, `y2`, or a radial gradient as `cx`, `cy`,\n         * `r` and optional `fx`, `fy` specifying a focal point away\n         * from the center of the circle. Specify `<colors>` as a list\n         * of dash-separated CSS color values.  Each color may be\n         * followed by a custom offset value, separated with a colon\n         * character.\n         > Examples\n         * Linear gradient, relative from top-left corner to bottom-right\n         * corner, from black through red to white:\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         * Linear gradient, absolute from (0, 0) to (100, 100), from black\n         * through red at 25% to white:\n         | var g = paper.gradient(\"L(0, 0, 100, 100)#000-#f00:25-#fff\");\n         * Radial gradient, relative from the center of the element with radius\n         * half the width, from black to white:\n         | var g = paper.gradient(\"r(0.5, 0.5, 0.5)#000-#fff\");\n         * To apply the gradient:\n         | paper.circle(50, 50, 40).attr({\n         |     fill: g\n         | });\n         = (object) the `gradient` element\n        \\*/\n        proto.gradient = function (str) {\n            return gradient(this.defs, str);\n        };\n        proto.gradientLinear = function (x1, y1, x2, y2) {\n            return gradientLinear(this.defs, x1, y1, x2, y2);\n        };\n        proto.gradientRadial = function (cx, cy, r, fx, fy) {\n            return gradientRadial(this.defs, cx, cy, r, fx, fy);\n        };\n        /*\\\n         * Paper.toString\n         [ method ]\n         **\n         * Returns SVG code for the @Paper\n         = (string) SVG code for the @Paper\n        \\*/\n        proto.toString = function () {\n            var doc = this.node.ownerDocument,\n                f = doc.createDocumentFragment(),\n                d = doc.createElement(\"div\"),\n                svg = this.node.cloneNode(true),\n                res;\n            f.appendChild(d);\n            d.appendChild(svg);\n            Snap._.$(svg, {xmlns: \"http://www.w3.org/2000/svg\"});\n            res = d.innerHTML;\n            f.removeChild(f.firstChild);\n            return res;\n        };\n        /*\\\n         * Paper.toDataURL\n         [ method ]\n         **\n         * Returns SVG code for the @Paper as Data URI string.\n         = (string) Data URI string\n        \\*/\n        proto.toDataURL = function () {\n            if (window && window.btoa) {\n                return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(this)));\n            }\n        };\n        /*\\\n         * Paper.clear\n         [ method ]\n         **\n         * Removes all child nodes of the paper, except <defs>.\n        \\*/\n        proto.clear = function () {\n            var node = this.node.firstChild,\n                next;\n            while (node) {\n                next = node.nextSibling;\n                if (node.tagName != \"defs\") {\n                    node.parentNode.removeChild(node);\n                } else {\n                    proto.clear.call({node: node});\n                }\n                node = next;\n            }\n        };\n    }());\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        clone = Snap._.clone,\n        has = \"hasOwnProperty\",\n        p2s = /,?([a-z]),?/gi,\n        toFloat = parseFloat,\n        math = Math,\n        PI = math.PI,\n        mmin = math.min,\n        mmax = math.max,\n        pow = math.pow,\n        abs = math.abs;\n    function paths(ps) {\n        var p = paths.ps = paths.ps || {};\n        if (p[ps]) {\n            p[ps].sleep = 100;\n        } else {\n            p[ps] = {\n                sleep: 100\n            };\n        }\n        setTimeout(function () {\n            for (var key in p) if (p[has](key) && key != ps) {\n                p[key].sleep--;\n                !p[key].sleep && delete p[key];\n            }\n        });\n        return p[ps];\n    }\n    function box(x, y, width, height) {\n        if (x == null) {\n            x = y = width = height = 0;\n        }\n        if (y == null) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        return {\n            x: x,\n            y: y,\n            width: width,\n            w: width,\n            height: height,\n            h: height,\n            x2: x + width,\n            y2: y + height,\n            cx: x + width / 2,\n            cy: y + height / 2,\n            r1: math.min(width, height) / 2,\n            r2: math.max(width, height) / 2,\n            r0: math.sqrt(width * width + height * height) / 2,\n            path: rectPath(x, y, width, height),\n            vb: [x, y, width, height].join(\" \")\n        };\n    }\n    function toString() {\n        return this.join(\",\").replace(p2s, \"$1\");\n    }\n    function pathClone(pathArray) {\n        var res = clone(pathArray);\n        res.toString = toString;\n        return res;\n    }\n    function getPointAtSegmentLength(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\n        if (length == null) {\n            return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\n        } else {\n            return findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y,\n                getTotLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\n        }\n    }\n    function getLengthFactory(istotal, subpath) {\n        function O(val) {\n            return +(+val).toFixed(3);\n        }\n        return Snap._.cacher(function (path, length, onlystart) {\n            if (path instanceof Element) {\n                path = path.attr(\"d\");\n            }\n            path = path2curve(path);\n            var x, y, p, l, sp = \"\", subpaths = {}, point,\n                len = 0;\n            for (var i = 0, ii = path.length; i < ii; i++) {\n                p = path[i];\n                if (p[0] == \"M\") {\n                    x = +p[1];\n                    y = +p[2];\n                } else {\n                    l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                    if (len + l > length) {\n                        if (subpath && !subpaths.start) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            sp += [\n                                \"C\" + O(point.start.x),\n                                O(point.start.y),\n                                O(point.m.x),\n                                O(point.m.y),\n                                O(point.x),\n                                O(point.y)\n                            ];\n                            if (onlystart) {return sp;}\n                            subpaths.start = sp;\n                            sp = [\n                                \"M\" + O(point.x),\n                                O(point.y) + \"C\" + O(point.n.x),\n                                O(point.n.y),\n                                O(point.end.x),\n                                O(point.end.y),\n                                O(p[5]),\n                                O(p[6])\n                            ].join();\n                            len += l;\n                            x = +p[5];\n                            y = +p[6];\n                            continue;\n                        }\n                        if (!istotal && !subpath) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            return point;\n                        }\n                    }\n                    len += l;\n                    x = +p[5];\n                    y = +p[6];\n                }\n                sp += p.shift() + p;\n            }\n            subpaths.end = sp;\n            point = istotal ? len : subpath ? subpaths : findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\n            return point;\n        }, null, Snap._.clone);\n    }\n    var getTotalLength = getLengthFactory(1),\n        getPointAtLength = getLengthFactory(),\n        getSubpathsAtLength = getLengthFactory(0, 1);\n    function findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t,\n            t13 = pow(t1, 3),\n            t12 = pow(t1, 2),\n            t2 = t * t,\n            t3 = t2 * t,\n            x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n            y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\n            mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\n            my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\n            nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\n            ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\n            ax = t1 * p1x + t * c1x,\n            ay = t1 * p1y + t * c1y,\n            cx = t1 * c2x + t * p2x,\n            cy = t1 * c2y + t * p2y,\n            alpha = 90 - math.atan2(mx - nx, my - ny) * 180 / PI;\n        // (mx > nx || my < ny) && (alpha += 180);\n        return {\n            x: x,\n            y: y,\n            m: {x: mx, y: my},\n            n: {x: nx, y: ny},\n            start: {x: ax, y: ay},\n            end: {x: cx, y: cy},\n            alpha: alpha\n        };\n    }\n    function bezierBBox(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n        if (!Snap.is(p1x, \"array\")) {\n            p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n        }\n        var bbox = curveDim.apply(null, p1x);\n        return box(\n            bbox.min.x,\n            bbox.min.y,\n            bbox.max.x - bbox.min.x,\n            bbox.max.y - bbox.min.y\n        );\n    }\n    function isPointInsideBBox(bbox, x, y) {\n        return  x >= bbox.x &&\n                x <= bbox.x + bbox.width &&\n                y >= bbox.y &&\n                y <= bbox.y + bbox.height;\n    }\n    function isBBoxIntersect(bbox1, bbox2) {\n        bbox1 = box(bbox1);\n        bbox2 = box(bbox2);\n        return isPointInsideBBox(bbox2, bbox1.x, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2)\n            || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x\n                || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)\n            && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y\n                || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n    }\n    function base3(t, p1, p2, p3, p4) {\n        var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n            t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n        return t * t2 - 3 * p1 + 3 * p2;\n    }\n    function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n        if (z == null) {\n            z = 1;\n        }\n        z = z > 1 ? 1 : z < 0 ? 0 : z;\n        var z2 = z / 2,\n            n = 12,\n            Tvalues = [-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],\n            Cvalues = [0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],\n            sum = 0;\n        for (var i = 0; i < n; i++) {\n            var ct = z2 * Tvalues[i] + z2,\n                xbase = base3(ct, x1, x2, x3, x4),\n                ybase = base3(ct, y1, y2, y3, y4),\n                comb = xbase * xbase + ybase * ybase;\n            sum += Cvalues[i] * math.sqrt(comb);\n        }\n        return z2 * sum;\n    }\n    function getTotLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\n        if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\n            return;\n        }\n        var t = 1,\n            step = t / 2,\n            t2 = t - step,\n            l,\n            e = .01;\n        l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        while (abs(l - ll) > e) {\n            step /= 2;\n            t2 += (l < ll ? 1 : -1) * step;\n            l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        }\n        return t2;\n    }\n    function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n        if (\n            mmax(x1, x2) < mmin(x3, x4) ||\n            mmin(x1, x2) > mmax(x3, x4) ||\n            mmax(y1, y2) < mmin(y3, y4) ||\n            mmin(y1, y2) > mmax(y3, y4)\n        ) {\n            return;\n        }\n        var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n            ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n            denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n        if (!denominator) {\n            return;\n        }\n        var px = nx / denominator,\n            py = ny / denominator,\n            px2 = +px.toFixed(2),\n            py2 = +py.toFixed(2);\n        if (\n            px2 < +mmin(x1, x2).toFixed(2) ||\n            px2 > +mmax(x1, x2).toFixed(2) ||\n            px2 < +mmin(x3, x4).toFixed(2) ||\n            px2 > +mmax(x3, x4).toFixed(2) ||\n            py2 < +mmin(y1, y2).toFixed(2) ||\n            py2 > +mmax(y1, y2).toFixed(2) ||\n            py2 < +mmin(y3, y4).toFixed(2) ||\n            py2 > +mmax(y3, y4).toFixed(2)\n        ) {\n            return;\n        }\n        return {x: px, y: py};\n    }\n    function inter(bez1, bez2) {\n        return interHelper(bez1, bez2);\n    }\n    function interCount(bez1, bez2) {\n        return interHelper(bez1, bez2, 1);\n    }\n    function interHelper(bez1, bez2, justCount) {\n        var bbox1 = bezierBBox(bez1),\n            bbox2 = bezierBBox(bez2);\n        if (!isBBoxIntersect(bbox1, bbox2)) {\n            return justCount ? 0 : [];\n        }\n        var l1 = bezlen.apply(0, bez1),\n            l2 = bezlen.apply(0, bez2),\n            n1 = ~~(l1 / 8),\n            n2 = ~~(l2 / 8),\n            dots1 = [],\n            dots2 = [],\n            xy = {},\n            res = justCount ? 0 : [];\n        for (var i = 0; i < n1 + 1; i++) {\n            var p = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n            dots1.push({x: p.x, y: p.y, t: i / n1});\n        }\n        for (i = 0; i < n2 + 1; i++) {\n            p = findDotsAtSegment.apply(0, bez2.concat(i / n2));\n            dots2.push({x: p.x, y: p.y, t: i / n2});\n        }\n        for (i = 0; i < n1; i++) {\n            for (var j = 0; j < n2; j++) {\n                var di = dots1[i],\n                    di1 = dots1[i + 1],\n                    dj = dots2[j],\n                    dj1 = dots2[j + 1],\n                    ci = abs(di1.x - di.x) < .001 ? \"y\" : \"x\",\n                    cj = abs(dj1.x - dj.x) < .001 ? \"y\" : \"x\",\n                    is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n                if (is) {\n                    if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\n                        continue;\n                    }\n                    xy[is.x.toFixed(4)] = is.y.toFixed(4);\n                    var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n                        t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n                    if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n                        if (justCount) {\n                            res++;\n                        } else {\n                            res.push({\n                                x: is.x,\n                                y: is.y,\n                                t1: t1,\n                                t2: t2\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function pathIntersection(path1, path2) {\n        return interPathHelper(path1, path2);\n    }\n    function pathIntersectionNumber(path1, path2) {\n        return interPathHelper(path1, path2, 1);\n    }\n    function interPathHelper(path1, path2, justCount) {\n        path1 = path2curve(path1);\n        path2 = path2curve(path2);\n        var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,\n            res = justCount ? 0 : [];\n        for (var i = 0, ii = path1.length; i < ii; i++) {\n            var pi = path1[i];\n            if (pi[0] == \"M\") {\n                x1 = x1m = pi[1];\n                y1 = y1m = pi[2];\n            } else {\n                if (pi[0] == \"C\") {\n                    bez1 = [x1, y1].concat(pi.slice(1));\n                    x1 = bez1[6];\n                    y1 = bez1[7];\n                } else {\n                    bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n                    x1 = x1m;\n                    y1 = y1m;\n                }\n                for (var j = 0, jj = path2.length; j < jj; j++) {\n                    var pj = path2[j];\n                    if (pj[0] == \"M\") {\n                        x2 = x2m = pj[1];\n                        y2 = y2m = pj[2];\n                    } else {\n                        if (pj[0] == \"C\") {\n                            bez2 = [x2, y2].concat(pj.slice(1));\n                            x2 = bez2[6];\n                            y2 = bez2[7];\n                        } else {\n                            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n                            x2 = x2m;\n                            y2 = y2m;\n                        }\n                        var intr = interHelper(bez1, bez2, justCount);\n                        if (justCount) {\n                            res += intr;\n                        } else {\n                            for (var k = 0, kk = intr.length; k < kk; k++) {\n                                intr[k].segment1 = i;\n                                intr[k].segment2 = j;\n                                intr[k].bez1 = bez1;\n                                intr[k].bez2 = bez2;\n                            }\n                            res = res.concat(intr);\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function isPointInsidePath(path, x, y) {\n        var bbox = pathBBox(path);\n        return isPointInsideBBox(bbox, x, y) &&\n               interPathHelper(path, [[\"M\", x, y], [\"H\", bbox.x2 + 10]], 1) % 2 == 1;\n    }\n    function pathBBox(path) {\n        var pth = paths(path);\n        if (pth.bbox) {\n            return clone(pth.bbox);\n        }\n        if (!path) {\n            return box();\n        }\n        path = path2curve(path);\n        var x = 0,\n            y = 0,\n            X = [],\n            Y = [],\n            p;\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            p = path[i];\n            if (p[0] == \"M\") {\n                x = p[1];\n                y = p[2];\n                X.push(x);\n                Y.push(y);\n            } else {\n                var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                X = X.concat(dim.min.x, dim.max.x);\n                Y = Y.concat(dim.min.y, dim.max.y);\n                x = p[5];\n                y = p[6];\n            }\n        }\n        var xmin = mmin.apply(0, X),\n            ymin = mmin.apply(0, Y),\n            xmax = mmax.apply(0, X),\n            ymax = mmax.apply(0, Y),\n            bb = box(xmin, ymin, xmax - xmin, ymax - ymin);\n        pth.bbox = clone(bb);\n        return bb;\n    }\n    function rectPath(x, y, w, h, r) {\n        if (r) {\n            return [\n                [\"M\", +x + +r, y],\n                [\"l\", w - r * 2, 0],\n                [\"a\", r, r, 0, 0, 1, r, r],\n                [\"l\", 0, h - r * 2],\n                [\"a\", r, r, 0, 0, 1, -r, r],\n                [\"l\", r * 2 - w, 0],\n                [\"a\", r, r, 0, 0, 1, -r, -r],\n                [\"l\", 0, r * 2 - h],\n                [\"a\", r, r, 0, 0, 1, r, -r],\n                [\"z\"]\n            ];\n        }\n        var res = [[\"M\", x, y], [\"l\", w, 0], [\"l\", 0, h], [\"l\", -w, 0], [\"z\"]];\n        res.toString = toString;\n        return res;\n    }\n    function ellipsePath(x, y, rx, ry, a) {\n        if (a == null && ry == null) {\n            ry = rx;\n        }\n        x = +x;\n        y = +y;\n        rx = +rx;\n        ry = +ry;\n        if (a != null) {\n            var rad = Math.PI / 180,\n                x1 = x + rx * Math.cos(-ry * rad),\n                x2 = x + rx * Math.cos(-a * rad),\n                y1 = y + rx * Math.sin(-ry * rad),\n                y2 = y + rx * Math.sin(-a * rad),\n                res = [[\"M\", x1, y1], [\"A\", rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n        } else {\n            res = [\n                [\"M\", x, y],\n                [\"m\", 0, -ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry],\n                [\"z\"]\n            ];\n        }\n        res.toString = toString;\n        return res;\n    }\n    var unit2px = Snap._unit2px,\n        getPath = {\n        path: function (el) {\n            return el.attr(\"path\");\n        },\n        circle: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx, attr.cy, attr.r);\n        },\n        ellipse: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx || 0, attr.cy || 0, attr.rx, attr.ry);\n        },\n        rect: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height, attr.rx, attr.ry);\n        },\n        image: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height);\n        },\n        line: function (el) {\n            return \"M\" + [el.attr(\"x1\") || 0, el.attr(\"y1\") || 0, el.attr(\"x2\"), el.attr(\"y2\")];\n        },\n        polyline: function (el) {\n            return \"M\" + el.attr(\"points\");\n        },\n        polygon: function (el) {\n            return \"M\" + el.attr(\"points\") + \"z\";\n        },\n        deflt: function (el) {\n            var bbox = el.node.getBBox();\n            return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\n        }\n    };\n    function pathToRelative(pathArray) {\n        var pth = paths(pathArray),\n            lowerCase = String.prototype.toLowerCase;\n        if (pth.rel) {\n            return pathClone(pth.rel);\n        }\n        if (!Snap.is(pathArray, \"array\") || !Snap.is(pathArray && pathArray[0], \"array\")) {\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0;\n        if (pathArray[0][0] == \"M\") {\n            x = pathArray[0][1];\n            y = pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res.push([\"M\", x, y]);\n        }\n        for (var i = start, ii = pathArray.length; i < ii; i++) {\n            var r = res[i] = [],\n                pa = pathArray[i];\n            if (pa[0] != lowerCase.call(pa[0])) {\n                r[0] = lowerCase.call(pa[0]);\n                switch (r[0]) {\n                    case \"a\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +(pa[6] - x).toFixed(3);\n                        r[7] = +(pa[7] - y).toFixed(3);\n                        break;\n                    case \"v\":\n                        r[1] = +(pa[1] - y).toFixed(3);\n                        break;\n                    case \"m\":\n                        mx = pa[1];\n                        my = pa[2];\n                    default:\n                        for (var j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +(pa[j] - (j % 2 ? x : y)).toFixed(3);\n                        }\n                }\n            } else {\n                r = res[i] = [];\n                if (pa[0] == \"m\") {\n                    mx = pa[1] + x;\n                    my = pa[2] + y;\n                }\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    res[i][k] = pa[k];\n                }\n            }\n            var len = res[i].length;\n            switch (res[i][0]) {\n                case \"z\":\n                    x = mx;\n                    y = my;\n                    break;\n                case \"h\":\n                    x += +res[i][len - 1];\n                    break;\n                case \"v\":\n                    y += +res[i][len - 1];\n                    break;\n                default:\n                    x += +res[i][len - 2];\n                    y += +res[i][len - 1];\n            }\n        }\n        res.toString = toString;\n        pth.rel = pathClone(res);\n        return res;\n    }\n    function pathToAbsolute(pathArray) {\n        var pth = paths(pathArray);\n        if (pth.abs) {\n            return pathClone(pth.abs);\n        }\n        if (!is(pathArray, \"array\") || !is(pathArray && pathArray[0], \"array\")) { // rough assumption\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        if (!pathArray || !pathArray.length) {\n            return [[\"M\", 0, 0]];\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0,\n            pa0;\n        if (pathArray[0][0] == \"M\") {\n            x = +pathArray[0][1];\n            y = +pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res[0] = [\"M\", x, y];\n        }\n        var crz = pathArray.length == 3 &&\n            pathArray[0][0] == \"M\" &&\n            pathArray[1][0].toUpperCase() == \"R\" &&\n            pathArray[2][0].toUpperCase() == \"Z\";\n        for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n            res.push(r = []);\n            pa = pathArray[i];\n            pa0 = pa[0];\n            if (pa0 != pa0.toUpperCase()) {\n                r[0] = pa0.toUpperCase();\n                switch (r[0]) {\n                    case \"A\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +pa[6] + x;\n                        r[7] = +pa[7] + y;\n                        break;\n                    case \"V\":\n                        r[1] = +pa[1] + y;\n                        break;\n                    case \"H\":\n                        r[1] = +pa[1] + x;\n                        break;\n                    case \"R\":\n                        var dots = [x, y].concat(pa.slice(1));\n                        for (var j = 2, jj = dots.length; j < jj; j++) {\n                            dots[j] = +dots[j] + x;\n                            dots[++j] = +dots[j] + y;\n                        }\n                        res.pop();\n                        res = res.concat(catmullRom2bezier(dots, crz));\n                        break;\n                    case \"O\":\n                        res.pop();\n                        dots = ellipsePath(x, y, pa[1], pa[2]);\n                        dots.push(dots[0]);\n                        res = res.concat(dots);\n                        break;\n                    case \"U\":\n                        res.pop();\n                        res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                        r = [\"U\"].concat(res[res.length - 1].slice(-2));\n                        break;\n                    case \"M\":\n                        mx = +pa[1] + x;\n                        my = +pa[2] + y;\n                    default:\n                        for (j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +pa[j] + (j % 2 ? x : y);\n                        }\n                }\n            } else if (pa0 == \"R\") {\n                dots = [x, y].concat(pa.slice(1));\n                res.pop();\n                res = res.concat(catmullRom2bezier(dots, crz));\n                r = [\"R\"].concat(pa.slice(-2));\n            } else if (pa0 == \"O\") {\n                res.pop();\n                dots = ellipsePath(x, y, pa[1], pa[2]);\n                dots.push(dots[0]);\n                res = res.concat(dots);\n            } else if (pa0 == \"U\") {\n                res.pop();\n                res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                r = [\"U\"].concat(res[res.length - 1].slice(-2));\n            } else {\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    r[k] = pa[k];\n                }\n            }\n            pa0 = pa0.toUpperCase();\n            if (pa0 != \"O\") {\n                switch (r[0]) {\n                    case \"Z\":\n                        x = +mx;\n                        y = +my;\n                        break;\n                    case \"H\":\n                        x = r[1];\n                        break;\n                    case \"V\":\n                        y = r[1];\n                        break;\n                    case \"M\":\n                        mx = r[r.length - 2];\n                        my = r[r.length - 1];\n                    default:\n                        x = r[r.length - 2];\n                        y = r[r.length - 1];\n                }\n            }\n        }\n        res.toString = toString;\n        pth.abs = pathClone(res);\n        return res;\n    }\n    function l2c(x1, y1, x2, y2) {\n        return [x1, y1, x2, y2, x2, y2];\n    }\n    function q2c(x1, y1, ax, ay, x2, y2) {\n        var _13 = 1 / 3,\n            _23 = 2 / 3;\n        return [\n                _13 * x1 + _23 * ax,\n                _13 * y1 + _23 * ay,\n                _13 * x2 + _23 * ax,\n                _13 * y2 + _23 * ay,\n                x2,\n                y2\n            ];\n    }\n    function a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n        // for more information of where this math came from visit:\n        // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n        var _120 = PI * 120 / 180,\n            rad = PI / 180 * (+angle || 0),\n            res = [],\n            xy,\n            rotate = Snap._.cacher(function (x, y, rad) {\n                var X = x * math.cos(rad) - y * math.sin(rad),\n                    Y = x * math.sin(rad) + y * math.cos(rad);\n                return {x: X, y: Y};\n            });\n        if (!rx || !ry) {\n            return [x1, y1, x2, y2, x2, y2];\n        }\n        if (!recursive) {\n            xy = rotate(x1, y1, -rad);\n            x1 = xy.x;\n            y1 = xy.y;\n            xy = rotate(x2, y2, -rad);\n            x2 = xy.x;\n            y2 = xy.y;\n            var cos = math.cos(PI / 180 * angle),\n                sin = math.sin(PI / 180 * angle),\n                x = (x1 - x2) / 2,\n                y = (y1 - y2) / 2;\n            var h = x * x / (rx * rx) + y * y / (ry * ry);\n            if (h > 1) {\n                h = math.sqrt(h);\n                rx = h * rx;\n                ry = h * ry;\n            }\n            var rx2 = rx * rx,\n                ry2 = ry * ry,\n                k = (large_arc_flag == sweep_flag ? -1 : 1) *\n                    math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n                cx = k * rx * y / ry + (x1 + x2) / 2,\n                cy = k * -ry * x / rx + (y1 + y2) / 2,\n                f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n                f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n\n            f1 = x1 < cx ? PI - f1 : f1;\n            f2 = x2 < cx ? PI - f2 : f2;\n            f1 < 0 && (f1 = PI * 2 + f1);\n            f2 < 0 && (f2 = PI * 2 + f2);\n            if (sweep_flag && f1 > f2) {\n                f1 = f1 - PI * 2;\n            }\n            if (!sweep_flag && f2 > f1) {\n                f2 = f2 - PI * 2;\n            }\n        } else {\n            f1 = recursive[0];\n            f2 = recursive[1];\n            cx = recursive[2];\n            cy = recursive[3];\n        }\n        var df = f2 - f1;\n        if (abs(df) > _120) {\n            var f2old = f2,\n                x2old = x2,\n                y2old = y2;\n            f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n            x2 = cx + rx * math.cos(f2);\n            y2 = cy + ry * math.sin(f2);\n            res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n        }\n        df = f2 - f1;\n        var c1 = math.cos(f1),\n            s1 = math.sin(f1),\n            c2 = math.cos(f2),\n            s2 = math.sin(f2),\n            t = math.tan(df / 4),\n            hx = 4 / 3 * rx * t,\n            hy = 4 / 3 * ry * t,\n            m1 = [x1, y1],\n            m2 = [x1 + hx * s1, y1 - hy * c1],\n            m3 = [x2 + hx * s2, y2 - hy * c2],\n            m4 = [x2, y2];\n        m2[0] = 2 * m1[0] - m2[0];\n        m2[1] = 2 * m1[1] - m2[1];\n        if (recursive) {\n            return [m2, m3, m4].concat(res);\n        } else {\n            res = [m2, m3, m4].concat(res).join().split(\",\");\n            var newres = [];\n            for (var i = 0, ii = res.length; i < ii; i++) {\n                newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n            }\n            return newres;\n        }\n    }\n    function findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t;\n        return {\n            x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,\n            y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y\n        };\n    }\n\n    // Returns bounding box of cubic bezier curve.\n    // Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n    // Original version: NISHIO Hirokazu\n    // Modifications: https://github.com/timo22345\n    function curveDim(x0, y0, x1, y1, x2, y2, x3, y3) {\n        var tvalues = [],\n            bounds = [[], []],\n            a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n        for (var i = 0; i < 2; ++i) {\n            if (i == 0) {\n                b = 6 * x0 - 12 * x1 + 6 * x2;\n                a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n                c = 3 * x1 - 3 * x0;\n            } else {\n                b = 6 * y0 - 12 * y1 + 6 * y2;\n                a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n                c = 3 * y1 - 3 * y0;\n            }\n            if (abs(a) < 1e-12) {\n                if (abs(b) < 1e-12) {\n                    continue;\n                }\n                t = -c / b;\n                if (0 < t && t < 1) {\n                    tvalues.push(t);\n                }\n                continue;\n            }\n            b2ac = b * b - 4 * c * a;\n            sqrtb2ac = math.sqrt(b2ac);\n            if (b2ac < 0) {\n                continue;\n            }\n            t1 = (-b + sqrtb2ac) / (2 * a);\n            if (0 < t1 && t1 < 1) {\n                tvalues.push(t1);\n            }\n            t2 = (-b - sqrtb2ac) / (2 * a);\n            if (0 < t2 && t2 < 1) {\n                tvalues.push(t2);\n            }\n        }\n\n        var x, y, j = tvalues.length,\n            jlen = j,\n            mt;\n        while (j--) {\n            t = tvalues[j];\n            mt = 1 - t;\n            bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n            bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n        }\n\n        bounds[0][jlen] = x0;\n        bounds[1][jlen] = y0;\n        bounds[0][jlen + 1] = x3;\n        bounds[1][jlen + 1] = y3;\n        bounds[0].length = bounds[1].length = jlen + 2;\n\n\n        return {\n          min: {x: mmin.apply(0, bounds[0]), y: mmin.apply(0, bounds[1])},\n          max: {x: mmax.apply(0, bounds[0]), y: mmax.apply(0, bounds[1])}\n        };\n    }\n\n    function path2curve(path, path2) {\n        var pth = !path2 && paths(path);\n        if (!path2 && pth.curve) {\n            return pathClone(pth.curve);\n        }\n        var p = pathToAbsolute(path),\n            p2 = path2 && pathToAbsolute(path2),\n            attrs = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            attrs2 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            processPath = function (path, d, pcom) {\n                var nx, ny;\n                if (!path) {\n                    return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\n                }\n                !(path[0] in {T: 1, Q: 1}) && (d.qx = d.qy = null);\n                switch (path[0]) {\n                    case \"M\":\n                        d.X = path[1];\n                        d.Y = path[2];\n                        break;\n                    case \"A\":\n                        path = [\"C\"].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n                        break;\n                    case \"S\":\n                        if (pcom == \"C\" || pcom == \"S\") { // In \"S\" case we have to take into account, if the previous command is C/S.\n                            nx = d.x * 2 - d.bx;          // And reflect the previous\n                            ny = d.y * 2 - d.by;          // command's control point relative to the current point.\n                        }\n                        else {                            // or some else or nothing\n                            nx = d.x;\n                            ny = d.y;\n                        }\n                        path = [\"C\", nx, ny].concat(path.slice(1));\n                        break;\n                    case \"T\":\n                        if (pcom == \"Q\" || pcom == \"T\") { // In \"T\" case we have to take into account, if the previous command is Q/T.\n                            d.qx = d.x * 2 - d.qx;        // And make a reflection similar\n                            d.qy = d.y * 2 - d.qy;        // to case \"S\".\n                        }\n                        else {                            // or something else or nothing\n                            d.qx = d.x;\n                            d.qy = d.y;\n                        }\n                        path = [\"C\"].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n                        break;\n                    case \"Q\":\n                        d.qx = path[1];\n                        d.qy = path[2];\n                        path = [\"C\"].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n                        break;\n                    case \"L\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], path[2]));\n                        break;\n                    case \"H\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], d.y));\n                        break;\n                    case \"V\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.x, path[1]));\n                        break;\n                    case \"Z\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.X, d.Y));\n                        break;\n                }\n                return path;\n            },\n            fixArc = function (pp, i) {\n                if (pp[i].length > 7) {\n                    pp[i].shift();\n                    var pi = pp[i];\n                    while (pi.length) {\n                        pcoms1[i] = \"A\"; // if created multiple C:s, their original seg is saved\n                        p2 && (pcoms2[i] = \"A\"); // the same as above\n                        pp.splice(i++, 0, [\"C\"].concat(pi.splice(0, 6)));\n                    }\n                    pp.splice(i, 1);\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            fixM = function (path1, path2, a1, a2, i) {\n                if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\n                    path2.splice(i, 0, [\"M\", a2.x, a2.y]);\n                    a1.bx = 0;\n                    a1.by = 0;\n                    a1.x = path1[i][1];\n                    a1.y = path1[i][2];\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            pcoms1 = [], // path commands of original path p\n            pcoms2 = [], // path commands of original path p2\n            pfirst = \"\", // temporary holder for original path command\n            pcom = \"\"; // holder for previous path command of original path\n        for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\n            p[i] && (pfirst = p[i][0]); // save current path command\n\n            if (pfirst != \"C\") // C is not saved yet, because it may be result of conversion\n            {\n                pcoms1[i] = pfirst; // Save current path command\n                i && ( pcom = pcoms1[i - 1]); // Get previous path command pcom\n            }\n            p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n            if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\n            // which may produce multiple C:s\n            // so we have to make sure that C is also C in original path\n\n            fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n            if (p2) { // the same procedures is done to p2\n                p2[i] && (pfirst = p2[i][0]);\n                if (pfirst != \"C\") {\n                    pcoms2[i] = pfirst;\n                    i && (pcom = pcoms2[i - 1]);\n                }\n                p2[i] = processPath(p2[i], attrs2, pcom);\n\n                if (pcoms2[i] != \"A\" && pfirst == \"C\") {\n                    pcoms2[i] = \"C\";\n                }\n\n                fixArc(p2, i);\n            }\n            fixM(p, p2, attrs, attrs2, i);\n            fixM(p2, p, attrs2, attrs, i);\n            var seg = p[i],\n                seg2 = p2 && p2[i],\n                seglen = seg.length,\n                seg2len = p2 && seg2.length;\n            attrs.x = seg[seglen - 2];\n            attrs.y = seg[seglen - 1];\n            attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n            attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n            attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\n            attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\n            attrs2.x = p2 && seg2[seg2len - 2];\n            attrs2.y = p2 && seg2[seg2len - 1];\n        }\n        if (!p2) {\n            pth.curve = pathClone(p);\n        }\n        return p2 ? [p, p2] : p;\n    }\n    function mapPath(path, matrix) {\n        if (!matrix) {\n            return path;\n        }\n        var x, y, i, j, ii, jj, pathi;\n        path = path2curve(path);\n        for (i = 0, ii = path.length; i < ii; i++) {\n            pathi = path[i];\n            for (j = 1, jj = pathi.length; j < jj; j += 2) {\n                x = matrix.x(pathi[j], pathi[j + 1]);\n                y = matrix.y(pathi[j], pathi[j + 1]);\n                pathi[j] = x;\n                pathi[j + 1] = y;\n            }\n        }\n        return path;\n    }\n\n    // http://schepers.cc/getting-to-the-point\n    function catmullRom2bezier(crp, z) {\n        var d = [];\n        for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n            var p = [\n                        {x: +crp[i - 2], y: +crp[i - 1]},\n                        {x: +crp[i],     y: +crp[i + 1]},\n                        {x: +crp[i + 2], y: +crp[i + 3]},\n                        {x: +crp[i + 4], y: +crp[i + 5]}\n                    ];\n            if (z) {\n                if (!i) {\n                    p[0] = {x: +crp[iLen - 2], y: +crp[iLen - 1]};\n                } else if (iLen - 4 == i) {\n                    p[3] = {x: +crp[0], y: +crp[1]};\n                } else if (iLen - 2 == i) {\n                    p[2] = {x: +crp[0], y: +crp[1]};\n                    p[3] = {x: +crp[2], y: +crp[3]};\n                }\n            } else {\n                if (iLen - 4 == i) {\n                    p[3] = p[2];\n                } else if (!i) {\n                    p[0] = {x: +crp[i], y: +crp[i + 1]};\n                }\n            }\n            d.push([\"C\",\n                  (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n                  (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n                  (p[1].x + 6 * p[2].x - p[3].x) / 6,\n                  (p[1].y + 6*p[2].y - p[3].y) / 6,\n                  p[2].x,\n                  p[2].y\n            ]);\n        }\n\n        return d;\n    }\n\n    // export\n    Snap.path = paths;\n\n    /*\\\n     * Snap.path.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the given path in pixels\n     **\n     - path (string) SVG path string\n     **\n     = (number) length\n    \\*/\n    Snap.path.getTotalLength = getTotalLength;\n    /*\\\n     * Snap.path.getPointAtLength\n     [ method ]\n     **\n     * Returns the coordinates of the point located at the given length along the given path\n     **\n     - path (string) SVG path string\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    Snap.path.getPointAtLength = getPointAtLength;\n    /*\\\n     * Snap.path.getSubpath\n     [ method ]\n     **\n     * Returns the subpath of a given path between given start and end lengths\n     **\n     - path (string) SVG path string\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    Snap.path.getSubpath = function (path, from, to) {\n        if (this.getTotalLength(path) - to < 1e-6) {\n            return getSubpathsAtLength(path, from).end;\n        }\n        var a = getSubpathsAtLength(path, to, 1);\n        return from ? getSubpathsAtLength(a, from).end : a;\n    };\n    /*\\\n     * Element.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the path in pixels (only works for `path` elements)\n     = (number) length\n    \\*/\n    elproto.getTotalLength = function () {\n        if (this.node.getTotalLength) {\n            return this.node.getTotalLength();\n        }\n    };\n    // SIERRA Element.getPointAtLength()/Element.getTotalLength(): If a <path> is broken into different segments, is the jump distance to the new coordinates set by the _M_ or _m_ commands calculated as part of the path's total length?\n    /*\\\n     * Element.getPointAtLength\n     [ method ]\n     **\n     * Returns coordinates of the point located at the given length on the given path (only works for `path` elements)\n     **\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    elproto.getPointAtLength = function (length) {\n        return getPointAtLength(this.attr(\"d\"), length);\n    };\n    // SIERRA Element.getSubpath(): Similar to the problem for Element.getPointAtLength(). Unclear how this would work for a segmented path. Overall, the concept of _subpath_ and what I'm calling a _segment_ (series of non-_M_ or _Z_ commands) is unclear.\n    /*\\\n     * Element.getSubpath\n     [ method ]\n     **\n     * Returns subpath of a given element from given start and end lengths (only works for `path` elements)\n     **\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    elproto.getSubpath = function (from, to) {\n        return Snap.path.getSubpath(this.attr(\"d\"), from, to);\n    };\n    Snap._.box = box;\n    /*\\\n     * Snap.path.findDotsAtSegment\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds dot coordinates on the given cubic beziér curve at the given t\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     - t (number) position on the curve (0..1)\n     = (object) point information in format:\n     o {\n     o     x: (number) x coordinate of the point,\n     o     y: (number) y coordinate of the point,\n     o     m: {\n     o         x: (number) x coordinate of the left anchor,\n     o         y: (number) y coordinate of the left anchor\n     o     },\n     o     n: {\n     o         x: (number) x coordinate of the right anchor,\n     o         y: (number) y coordinate of the right anchor\n     o     },\n     o     start: {\n     o         x: (number) x coordinate of the start of the curve,\n     o         y: (number) y coordinate of the start of the curve\n     o     },\n     o     end: {\n     o         x: (number) x coordinate of the end of the curve,\n     o         y: (number) y coordinate of the end of the curve\n     o     },\n     o     alpha: (number) angle of the curve derivative at the point\n     o }\n    \\*/\n    Snap.path.findDotsAtSegment = findDotsAtSegment;\n    /*\\\n     * Snap.path.bezierBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given cubic beziér curve\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     * or\n     - bez (array) array of six points for beziér curve\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.bezierBBox = bezierBBox;\n    /*\\\n     * Snap.path.isPointInsideBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside bounding box\n     - bbox (string) bounding box\n     - x (string) x coordinate of the point\n     - y (string) y coordinate of the point\n     = (boolean) `true` if point is inside\n    \\*/\n    Snap.path.isPointInsideBBox = isPointInsideBBox;\n    Snap.closest = function (x, y, X, Y) {\n        var r = 100,\n            b = box(x - r / 2, y - r / 2, r, r),\n            inside = [],\n            getter = X[0].hasOwnProperty(\"x\") ? function (i) {\n                return {\n                    x: X[i].x,\n                    y: X[i].y\n                };\n            } : function (i) {\n                return {\n                    x: X[i],\n                    y: Y[i]\n                };\n            },\n            found = 0;\n        while (r <= 1e6 && !found) {\n            for (var i = 0, ii = X.length; i < ii; i++) {\n                var xy = getter(i);\n                if (isPointInsideBBox(b, xy.x, xy.y)) {\n                    found++;\n                    inside.push(xy);\n                    break;\n                }\n            }\n            if (!found) {\n                r *= 2;\n                b = box(x - r / 2, y - r / 2, r, r)\n            }\n        }\n        if (r == 1e6) {\n            return;\n        }\n        var len = Infinity,\n            res;\n        for (i = 0, ii = inside.length; i < ii; i++) {\n            var l = Snap.len(x, y, inside[i].x, inside[i].y);\n            if (len > l) {\n                len = l;\n                inside[i].len = l;\n                res = inside[i];\n            }\n        }\n        return res;\n    };\n    /*\\\n     * Snap.path.isBBoxIntersect\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if two bounding boxes intersect\n     - bbox1 (string) first bounding box\n     - bbox2 (string) second bounding box\n     = (boolean) `true` if bounding boxes intersect\n    \\*/\n    Snap.path.isBBoxIntersect = isBBoxIntersect;\n    /*\\\n     * Snap.path.intersection\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds intersections of two paths\n     - path1 (string) path string\n     - path2 (string) path string\n     = (array) dots of intersection\n     o [\n     o     {\n     o         x: (number) x coordinate of the point,\n     o         y: (number) y coordinate of the point,\n     o         t1: (number) t value for segment of path1,\n     o         t2: (number) t value for segment of path2,\n     o         segment1: (number) order number for segment of path1,\n     o         segment2: (number) order number for segment of path2,\n     o         bez1: (array) eight coordinates representing beziér curve for the segment of path1,\n     o         bez2: (array) eight coordinates representing beziér curve for the segment of path2\n     o     }\n     o ]\n    \\*/\n    Snap.path.intersection = pathIntersection;\n    Snap.path.intersectionNumber = pathIntersectionNumber;\n    /*\\\n     * Snap.path.isPointInside\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside a given closed path.\n     *\n     * Note: fill mode doesn’t affect the result of this method.\n     - path (string) path string\n     - x (number) x of the point\n     - y (number) y of the point\n     = (boolean) `true` if point is inside the path\n    \\*/\n    Snap.path.isPointInside = isPointInsidePath;\n    /*\\\n     * Snap.path.getBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given path\n     - path (string) path string\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.getBBox = pathBBox;\n    Snap.path.get = getPath;\n    /*\\\n     * Snap.path.toRelative\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into relative values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toRelative = pathToRelative;\n    /*\\\n     * Snap.path.toAbsolute\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into absolute values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toAbsolute = pathToAbsolute;\n    /*\\\n     * Snap.path.toCubic\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path to a new path where all segments are cubic beziér curves\n     - pathString (string|array) path string or array of segments\n     = (array) array of segments\n    \\*/\n    Snap.path.toCubic = path2curve;\n    /*\\\n     * Snap.path.map\n     [ method ]\n     **\n     * Transform the path string with the given matrix\n     - path (string) path string\n     - matrix (object) see @Matrix\n     = (string) transformed path string\n    \\*/\n    Snap.path.map = mapPath;\n    Snap.path.toString = toString;\n    Snap.path.clone = pathClone;\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var mmax = Math.max,\n        mmin = Math.min;\n\n    // Set\n    var Set = function (items) {\n        this.items = [];\n\tthis.bindings = {};\n        this.length = 0;\n        this.type = \"set\";\n        if (items) {\n            for (var i = 0, ii = items.length; i < ii; i++) {\n                if (items[i]) {\n                    this[this.items.length] = this.items[this.items.length] = items[i];\n                    this.length++;\n                }\n            }\n        }\n    },\n    setproto = Set.prototype;\n    /*\\\n     * Set.push\n     [ method ]\n     **\n     * Adds each argument to the current set\n     = (object) original element\n    \\*/\n    setproto.push = function () {\n        var item,\n            len;\n        for (var i = 0, ii = arguments.length; i < ii; i++) {\n            item = arguments[i];\n            if (item) {\n                len = this.items.length;\n                this[len] = this.items[len] = item;\n                this.length++;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.pop\n     [ method ]\n     **\n     * Removes last element and returns it\n     = (object) element\n    \\*/\n    setproto.pop = function () {\n        this.length && delete this[this.length--];\n        return this.items.pop();\n    };\n    /*\\\n     * Set.forEach\n     [ method ]\n     **\n     * Executes given function for each element in the set\n     *\n     * If the function returns `false`, the loop stops running.\n     **\n     - callback (function) function to run\n     - thisArg (object) context object for the callback\n     = (object) Set object\n    \\*/\n    setproto.forEach = function (callback, thisArg) {\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            if (callback.call(thisArg, this.items[i], i) === false) {\n                return this;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.animate\n     [ method ]\n     **\n     * Animates each element in set in sync.\n     *\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     * or\n     - animation (array) array of animation parameter for each element in set in format `[attrs, duration, easing, callback]`\n     > Usage\n     | // animate all elements in set to radius 10\n     | set.animate({r: 10}, 500, mina.easein);\n     | // or\n     | // animate first element to radius 10, but second to radius 20 and in different time\n     | set.animate([{r: 10}, 500, mina.easein], [{r: 20}, 1500, mina.easein]);\n     = (Element) the current element\n    \\*/\n    setproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Snap._.Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = easing.dur;\n            attrs = attrs.attr;\n        }\n        var args = arguments;\n        if (Snap.is(attrs, \"array\") && Snap.is(args[args.length - 1], \"array\")) {\n            var each = true;\n        }\n        var begin,\n            handler = function () {\n                if (begin) {\n                    this.b = begin;\n                } else {\n                    begin = this.b;\n                }\n            },\n            cb = 0,\n            set = this,\n            callbacker = callback && function () {\n                if (++cb == set.length) {\n                    callback.call(this);\n                }\n            };\n        return this.forEach(function (el, i) {\n            eve.once(\"snap.animcreated.\" + el.id, handler);\n            if (each) {\n                args[i] && el.animate.apply(el, args[i]);\n            } else {\n                el.animate(attrs, ms, easing, callbacker);\n            }\n        });\n    };\n    /*\\\n     * Set.remove\n     [ method ]\n     **\n     * Removes all children of the set.\n     *\n     = (object) Set object\n    \\*/\n    setproto.remove = function () {\n        while (this.length) {\n            this.pop().remove();\n        }\n        return this;\n    };\n    /*\\\n     * Set.bind\n     [ method ]\n     **\n     * Specifies how to handle a specific attribute when applied\n     * to a set.\n     *\n     **\n     - attr (string) attribute name\n     - callback (function) function to run\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     - eattr (string) attribute on the element to bind the attribute to\n     = (object) Set object\n    \\*/\n    setproto.bind = function (attr, a, b) {\n        var data = {};\n        if (typeof a == \"function\") {\n            this.bindings[attr] = a;\n        } else {\n            var aname = b || attr;\n            this.bindings[attr] = function (v) {\n                data[aname] = v;\n                a.attr(data);\n            };\n        }\n        return this;\n    };\n    /*\\\n     * Set.attr\n     [ method ]\n     **\n     * Equivalent of @Element.attr.\n     = (object) Set object\n    \\*/\n    setproto.attr = function (value) {\n        var unbound = {};\n        for (var k in value) {\n            if (this.bindings[k]) {\n                this.bindings[k](value[k]);\n            } else {\n                unbound[k] = value[k];\n            }\n        }\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            this.items[i].attr(unbound);\n        }\n        return this;\n    };\n    /*\\\n     * Set.clear\n     [ method ]\n     **\n     * Removes all elements from the set\n    \\*/\n    setproto.clear = function () {\n        while (this.length) {\n            this.pop();\n        }\n    };\n    /*\\\n     * Set.splice\n     [ method ]\n     **\n     * Removes range of elements from the set\n     **\n     - index (number) position of the deletion\n     - count (number) number of element to remove\n     - insertion… (object) #optional elements to insert\n     = (object) set elements that were deleted\n    \\*/\n    setproto.splice = function (index, count, insertion) {\n        index = index < 0 ? mmax(this.length + index, 0) : index;\n        count = mmax(0, mmin(this.length - index, count));\n        var tail = [],\n            todel = [],\n            args = [],\n            i;\n        for (i = 2; i < arguments.length; i++) {\n            args.push(arguments[i]);\n        }\n        for (i = 0; i < count; i++) {\n            todel.push(this[index + i]);\n        }\n        for (; i < this.length - index; i++) {\n            tail.push(this[index + i]);\n        }\n        var arglen = args.length;\n        for (i = 0; i < arglen + tail.length; i++) {\n            this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];\n        }\n        i = this.items.length = this.length -= count - arglen;\n        while (this[i]) {\n            delete this[i++];\n        }\n        return new Set(todel);\n    };\n    /*\\\n     * Set.exclude\n     [ method ]\n     **\n     * Removes given element from the set\n     **\n     - element (object) element to remove\n     = (boolean) `true` if object was found and removed from the set\n    \\*/\n    setproto.exclude = function (el) {\n        for (var i = 0, ii = this.length; i < ii; i++) if (this[i] == el) {\n            this.splice(i, 1);\n            return true;\n        }\n        return false;\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Inserts set elements after given element.\n     **\n     - element (object) set will be inserted after this element\n     = (object) Set object\n    \\*/\n    setproto.insertAfter = function (el) {\n        var i = this.items.length;\n        while (i--) {\n            this.items[i].insertAfter(el);\n        }\n        return this;\n    };\n    /*\\\n     * Set.getBBox\n     [ method ]\n     **\n     * Union of all bboxes of the set. See @Element.getBBox.\n     = (object) bounding box descriptor. See @Element.getBBox.\n    \\*/\n    setproto.getBBox = function () {\n        var x = [],\n            y = [],\n            x2 = [],\n            y2 = [];\n        for (var i = this.items.length; i--;) if (!this.items[i].removed) {\n            var box = this.items[i].getBBox();\n            x.push(box.x);\n            y.push(box.y);\n            x2.push(box.x + box.width);\n            y2.push(box.y + box.height);\n        }\n        x = mmin.apply(0, x);\n        y = mmin.apply(0, y);\n        x2 = mmax.apply(0, x2);\n        y2 = mmax.apply(0, y2);\n        return {\n            x: x,\n            y: y,\n            x2: x2,\n            y2: y2,\n            width: x2 - x,\n            height: y2 - y,\n            cx: x + (x2 - x) / 2,\n            cy: y + (y2 - y) / 2\n        };\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Creates a clone of the set.\n     **\n     = (object) New Set object\n    \\*/\n    setproto.clone = function (s) {\n        s = new Set;\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            s.push(this.items[i].clone());\n        }\n        return s;\n    };\n    setproto.toString = function () {\n        return \"Snap\\u2018s set\";\n    };\n    setproto.type = \"set\";\n    // export\n    /*\\\n     * Snap.Set\n     [ property ]\n     **\n     * Set constructor.\n    \\*/\n    Snap.Set = Set;\n    /*\\\n     * Snap.set\n     [ method ]\n     **\n     * Creates a set and fills it with list of arguments.\n     **\n     = (object) New Set object\n     | var r = paper.rect(0, 0, 10, 10),\n     |     s1 = Snap.set(), // empty set\n     |     s2 = Snap.set(r, paper.circle(100, 100, 20)); // prefilled set\n    \\*/\n    Snap.set = function () {\n        var set = new Set;\n        if (arguments.length) {\n            set.push.apply(set, Array.prototype.slice.call(arguments, 0));\n        }\n        return set;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var names = {},\n        reUnit = /[%a-z]+$/i,\n        Str = String;\n    names.stroke = names.fill = \"colour\";\n    function getEmpty(item) {\n        var l = item[0];\n        switch (l.toLowerCase()) {\n            case \"t\": return [l, 0, 0];\n            case \"m\": return [l, 1, 0, 0, 1, 0, 0];\n            case \"r\": if (item.length == 4) {\n                return [l, 0, item[2], item[3]];\n            } else {\n                return [l, 0];\n            }\n            case \"s\": if (item.length == 5) {\n                return [l, 1, 1, item[3], item[4]];\n            } else if (item.length == 3) {\n                return [l, 1, 1];\n            } else {\n                return [l, 1];\n            }\n        }\n    }\n    function equaliseTransform(t1, t2, getBBox) {\n        t1 = t1 || new Snap.Matrix;\n        t2 = t2 || new Snap.Matrix;\n        t1 = Snap.parseTransformString(t1.toTransformString()) || [];\n        t2 = Snap.parseTransformString(t2.toTransformString()) || [];\n        var maxlength = Math.max(t1.length, t2.length),\n            from = [],\n            to = [],\n            i = 0, j, jj,\n            tt1, tt2;\n        for (; i < maxlength; i++) {\n            tt1 = t1[i] || getEmpty(t2[i]);\n            tt2 = t2[i] || getEmpty(tt1);\n            if (tt1[0] != tt2[0] ||\n                tt1[0].toLowerCase() == \"r\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3]) ||\n                tt1[0].toLowerCase() == \"s\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4])\n                ) {\n                    t1 = Snap._.transform2matrix(t1, getBBox());\n                    t2 = Snap._.transform2matrix(t2, getBBox());\n                    from = [[\"m\", t1.a, t1.b, t1.c, t1.d, t1.e, t1.f]];\n                    to = [[\"m\", t2.a, t2.b, t2.c, t2.d, t2.e, t2.f]];\n                    break;\n            }\n            from[i] = [];\n            to[i] = [];\n            for (j = 0, jj = Math.max(tt1.length, tt2.length); j < jj; j++) {\n                j in tt1 && (from[i][j] = tt1[j]);\n                j in tt2 && (to[i][j] = tt2[j]);\n            }\n        }\n        return {\n            from: path2array(from),\n            to: path2array(to),\n            f: getPath(from)\n        };\n    }\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    function getViewBox(val) {\n        return val.join(\" \");\n    }\n    function getColour(clr) {\n        return Snap.rgb(clr[0], clr[1], clr[2], clr[3]);\n    }\n    function getPath(path) {\n        var k = 0, i, ii, j, jj, out, a, b = [];\n        for (i = 0, ii = path.length; i < ii; i++) {\n            out = \"[\";\n            a = ['\"' + path[i][0] + '\"'];\n            for (j = 1, jj = path[i].length; j < jj; j++) {\n                a[j] = \"val[\" + k++ + \"]\";\n            }\n            out += a + \"]\";\n            b[i] = out;\n        }\n        return Function(\"val\", \"return Snap.path.toString.call([\" + b + \"])\");\n    }\n    function path2array(path) {\n        var out = [];\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            for (var j = 1, jj = path[i].length; j < jj; j++) {\n                out.push(path[i][j]);\n            }\n        }\n        return out;\n    }\n    function isNumeric(obj) {\n        return isFinite(obj);\n    }\n    function arrayEqual(arr1, arr2) {\n        if (!Snap.is(arr1, \"array\") || !Snap.is(arr2, \"array\")) {\n            return false;\n        }\n        return arr1.toString() == arr2.toString();\n    }\n    Element.prototype.equal = function (name, b) {\n        return eve(\"snap.util.equal\", this, name, b).firstDefined();\n    };\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this;\n        if (names[name] == \"colour\") {\n            A = Snap.color(a);\n            B = Snap.color(b);\n            return {\n                from: [A.r, A.g, A.b, A.opacity],\n                to: [B.r, B.g, B.b, B.opacity],\n                f: getColour\n            };\n        }\n        if (name == \"viewBox\") {\n            A = this.attr(name).vb.split(\" \").map(Number);\n            B = b.split(\" \").map(Number);\n            return {\n                from: A,\n                to: B,\n                f: getViewBox\n            };\n        }\n        if (name == \"transform\" || name == \"gradientTransform\" || name == \"patternTransform\") {\n            if (typeof b == \"string\") {\n                b = Str(b).replace(/\\.{3}|\\u2026/g, a);\n            }\n            a = this.matrix;\n            if (!Snap._.rgTransform.test(b)) {\n                b = Snap._.transform2matrix(Snap._.svgTransform2string(b), this.getBBox());\n            } else {\n                b = Snap._.transform2matrix(b, this.getBBox());\n            }\n            return equaliseTransform(a, b, function () {\n                return el.getBBox(1);\n            });\n        }\n        if (name == \"d\" || name == \"path\") {\n            A = Snap.path.toCubic(a, b);\n            return {\n                from: path2array(A[0]),\n                to: path2array(A[1]),\n                f: getPath(A[0])\n            };\n        }\n        if (name == \"points\") {\n            A = Str(a).split(Snap._.separator);\n            B = Str(b).split(Snap._.separator);\n            return {\n                from: A,\n                to: B,\n                f: function (val) { return val; }\n            };\n        }\n        if (isNumeric(a) && isNumeric(b)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getNumber\n            };\n        }\n        var aUnit = a.match(reUnit),\n            bUnit = Str(b).match(reUnit);\n        if (aUnit && arrayEqual(aUnit, bUnit)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getUnit(aUnit)\n            };\n        } else {\n            return {\n                from: this.asPX(name),\n                to: this.asPX(name, b),\n                f: getNumber\n            };\n        }\n    });\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n    has = \"hasOwnProperty\",\n    supportsTouch = \"createTouch\" in glob.doc,\n    events = [\n        \"click\", \"dblclick\", \"mousedown\", \"mousemove\", \"mouseout\",\n        \"mouseover\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\",\n        \"touchcancel\"\n    ],\n    touchMap = {\n        mousedown: \"touchstart\",\n        mousemove: \"touchmove\",\n        mouseup: \"touchend\"\n    },\n    getScroll = function (xy, el) {\n        var name = xy == \"y\" ? \"scrollTop\" : \"scrollLeft\",\n            doc = el && el.node ? el.node.ownerDocument : glob.doc;\n        return doc[name in doc.documentElement ? \"documentElement\" : \"body\"][name];\n    },\n    preventDefault = function () {\n        this.returnValue = false;\n    },\n    preventTouch = function () {\n        return this.originalEvent.preventDefault();\n    },\n    stopPropagation = function () {\n        this.cancelBubble = true;\n    },\n    stopTouch = function () {\n        return this.originalEvent.stopPropagation();\n    },\n    addEvent = function (obj, type, fn, element) {\n        var realName = supportsTouch && touchMap[type] ? touchMap[type] : type,\n            f = function (e) {\n                var scrollY = getScroll(\"y\", element),\n                    scrollX = getScroll(\"x\", element);\n                if (supportsTouch && touchMap[has](type)) {\n                    for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {\n                        if (e.targetTouches[i].target == obj || obj.contains(e.targetTouches[i].target)) {\n                            var olde = e;\n                            e = e.targetTouches[i];\n                            e.originalEvent = olde;\n                            e.preventDefault = preventTouch;\n                            e.stopPropagation = stopTouch;\n                            break;\n                        }\n                    }\n                }\n                var x = e.clientX + scrollX,\n                    y = e.clientY + scrollY;\n                return fn.call(element, e, x, y);\n            };\n\n        if (type !== realName) {\n            obj.addEventListener(type, f, false);\n        }\n\n        obj.addEventListener(realName, f, false);\n\n        return function () {\n            if (type !== realName) {\n                obj.removeEventListener(type, f, false);\n            }\n\n            obj.removeEventListener(realName, f, false);\n            return true;\n        };\n    },\n    drag = [],\n    dragMove = function (e) {\n        var x = e.clientX,\n            y = e.clientY,\n            scrollY = getScroll(\"y\"),\n            scrollX = getScroll(\"x\"),\n            dragi,\n            j = drag.length;\n        while (j--) {\n            dragi = drag[j];\n            if (supportsTouch) {\n                var i = e.touches && e.touches.length,\n                    touch;\n                while (i--) {\n                    touch = e.touches[i];\n                    if (touch.identifier == dragi.el._drag.id || dragi.el.node.contains(touch.target)) {\n                        x = touch.clientX;\n                        y = touch.clientY;\n                        (e.originalEvent ? e.originalEvent : e).preventDefault();\n                        break;\n                    }\n                }\n            } else {\n                e.preventDefault();\n            }\n            var node = dragi.el.node,\n                o,\n                next = node.nextSibling,\n                parent = node.parentNode,\n                display = node.style.display;\n            // glob.win.opera && parent.removeChild(node);\n            // node.style.display = \"none\";\n            // o = dragi.el.paper.getElementByPoint(x, y);\n            // node.style.display = display;\n            // glob.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));\n            // o && eve(\"snap.drag.over.\" + dragi.el.id, dragi.el, o);\n            x += scrollX;\n            y += scrollY;\n            eve(\"snap.drag.move.\" + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);\n        }\n    },\n    dragUp = function (e) {\n        Snap.unmousemove(dragMove).unmouseup(dragUp);\n        var i = drag.length,\n            dragi;\n        while (i--) {\n            dragi = drag[i];\n            dragi.el._drag = {};\n            eve(\"snap.drag.end.\" + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);\n            eve.off(\"snap.drag.*.\" + dragi.el.id);\n        }\n        drag = [];\n    };\n    /*\\\n     * Element.click\n     [ method ]\n     **\n     * Adds a click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unclick\n     [ method ]\n     **\n     * Removes a click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.dblclick\n     [ method ]\n     **\n     * Adds a double click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.undblclick\n     [ method ]\n     **\n     * Removes a double click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mousedown\n     [ method ]\n     **\n     * Adds a mousedown event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousedown\n     [ method ]\n     **\n     * Removes a mousedown event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mousemove\n     [ method ]\n     **\n     * Adds a mousemove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousemove\n     [ method ]\n     **\n     * Removes a mousemove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseout\n     [ method ]\n     **\n     * Adds a mouseout event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseout\n     [ method ]\n     **\n     * Removes a mouseout event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseover\n     [ method ]\n     **\n     * Adds a mouseover event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseover\n     [ method ]\n     **\n     * Removes a mouseover event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseup\n     [ method ]\n     **\n     * Adds a mouseup event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseup\n     [ method ]\n     **\n     * Removes a mouseup event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchstart\n     [ method ]\n     **\n     * Adds a touchstart event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchstart\n     [ method ]\n     **\n     * Removes a touchstart event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchmove\n     [ method ]\n     **\n     * Adds a touchmove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchmove\n     [ method ]\n     **\n     * Removes a touchmove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchend\n     [ method ]\n     **\n     * Adds a touchend event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchend\n     [ method ]\n     **\n     * Removes a touchend event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchcancel\n     [ method ]\n     **\n     * Adds a touchcancel event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchcancel\n     [ method ]\n     **\n     * Removes a touchcancel event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    for (var i = events.length; i--;) {\n        (function (eventName) {\n            Snap[eventName] = elproto[eventName] = function (fn, scope) {\n                if (Snap.is(fn, \"function\")) {\n                    this.events = this.events || [];\n                    this.events.push({\n                        name: eventName,\n                        f: fn,\n                        unbind: addEvent(this.node || document, eventName, fn, scope || this)\n                    });\n                } else {\n                    for (var i = 0, ii = this.events.length; i < ii; i++) if (this.events[i].name == eventName) {\n                        try {\n                            this.events[i].f.call(this);\n                        } catch (e) {}\n                    }\n                }\n                return this;\n            };\n            Snap[\"un\" + eventName] =\n            elproto[\"un\" + eventName] = function (fn) {\n                var events = this.events || [],\n                    l = events.length;\n                while (l--) if (events[l].name == eventName &&\n                               (events[l].f == fn || !fn)) {\n                    events[l].unbind();\n                    events.splice(l, 1);\n                    !events.length && delete this.events;\n                    return this;\n                }\n                return this;\n            };\n        })(events[i]);\n    }\n    /*\\\n     * Element.hover\n     [ method ]\n     **\n     * Adds hover event handlers to the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     - icontext (object) #optional context for hover in handler\n     - ocontext (object) #optional context for hover out handler\n     = (object) @Element\n    \\*/\n    elproto.hover = function (f_in, f_out, scope_in, scope_out) {\n        return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);\n    };\n    /*\\\n     * Element.unhover\n     [ method ]\n     **\n     * Removes hover event handlers from the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     = (object) @Element\n    \\*/\n    elproto.unhover = function (f_in, f_out) {\n        return this.unmouseover(f_in).unmouseout(f_out);\n    };\n    var draggable = [];\n    // SIERRA unclear what _context_ refers to for starting, ending, moving the drag gesture.\n    // SIERRA Element.drag(): _x position of the mouse_: Where are the x/y values offset from?\n    // SIERRA Element.drag(): much of this member's doc appears to be duplicated for some reason.\n    // SIERRA Unclear about this sentence: _Additionally following drag events will be triggered: drag.start.<id> on start, drag.end.<id> on end and drag.move.<id> on every move._ Is there a global _drag_ object to which you can assign handlers keyed by an element's ID?\n    /*\\\n     * Element.drag\n     [ method ]\n     **\n     * Adds event handlers for an element's drag gesture\n     **\n     - onmove (function) handler for moving\n     - onstart (function) handler for drag start\n     - onend (function) handler for drag end\n     - mcontext (object) #optional context for moving handler\n     - scontext (object) #optional context for drag start handler\n     - econtext (object) #optional context for drag end handler\n     * Additionaly following `drag` events are triggered: `drag.start.<id>` on start, \n     * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element is dragged over another element \n     * `drag.over.<id>` fires as well.\n     *\n     * Start event and start handler are called in specified context or in context of the element with following parameters:\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * Move event and move handler are called in specified context or in context of the element with following parameters:\n     o dx (number) shift by x from the start point\n     o dy (number) shift by y from the start point\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * End event and end handler are called in specified context or in context of the element with following parameters:\n     o event (object) DOM event object\n     = (object) @Element\n    \\*/\n    elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope) {\n        var el = this;\n        if (!arguments.length) {\n            var origTransform;\n            return el.drag(function (dx, dy) {\n                this.attr({\n                    transform: origTransform + (origTransform ? \"T\" : \"t\") + [dx, dy]\n                });\n            }, function () {\n                origTransform = this.transform().local;\n            });\n        }\n        function start(e, x, y) {\n            (e.originalEvent || e).preventDefault();\n            el._drag.x = x;\n            el._drag.y = y;\n            el._drag.id = e.identifier;\n            !drag.length && Snap.mousemove(dragMove).mouseup(dragUp);\n            drag.push({el: el, move_scope: move_scope, start_scope: start_scope, end_scope: end_scope});\n            onstart && eve.on(\"snap.drag.start.\" + el.id, onstart);\n            onmove && eve.on(\"snap.drag.move.\" + el.id, onmove);\n            onend && eve.on(\"snap.drag.end.\" + el.id, onend);\n            eve(\"snap.drag.start.\" + el.id, start_scope || move_scope || el, x, y, e);\n        }\n        function init(e, x, y) {\n            eve(\"snap.draginit.\" + el.id, el, e, x, y);\n        }\n        eve.on(\"snap.draginit.\" + el.id, start);\n        el._drag = {};\n        draggable.push({el: el, start: start, init: init});\n        el.mousedown(init);\n        return el;\n    };\n    /*\n     * Element.onDragOver\n     [ method ]\n     **\n     * Shortcut to assign event handler for `drag.over.<id>` event, where `id` is the element's `id` (see @Element.id)\n     - f (function) handler for event, first argument would be the element you are dragging over\n    \\*/\n    // elproto.onDragOver = function (f) {\n    //     f ? eve.on(\"snap.drag.over.\" + this.id, f) : eve.unbind(\"snap.drag.over.\" + this.id);\n    // };\n    /*\\\n     * Element.undrag\n     [ method ]\n     **\n     * Removes all drag event handlers from the given element\n    \\*/\n    elproto.undrag = function () {\n        var i = draggable.length;\n        while (i--) if (draggable[i].el == this) {\n            this.unmousedown(draggable[i].init);\n            draggable.splice(i, 1);\n            eve.unbind(\"snap.drag.*.\" + this.id);\n            eve.unbind(\"snap.draginit.\" + this.id);\n        }\n        !draggable.length && Snap.unmousemove(dragMove).unmouseup(dragUp);\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        pproto = Paper.prototype,\n        rgurl = /^\\s*url\\((.+)\\)/,\n        Str = String,\n        $ = Snap._.$;\n    Snap.filter = {};\n    /*\\\n     * Paper.filter\n     [ method ]\n     **\n     * Creates a `<filter>` element\n     **\n     - filstr (string) SVG fragment of filter provided as a string\n     = (object) @Element\n     * Note: It is recommended to use filters embedded into the page inside an empty SVG element.\n     > Usage\n     | var f = paper.filter('<feGaussianBlur stdDeviation=\"2\"/>'),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    pproto.filter = function (filstr) {\n        var paper = this;\n        if (paper.type != \"svg\") {\n            paper = paper.paper;\n        }\n        var f = Snap.parse(Str(filstr)),\n            id = Snap._.id(),\n            width = paper.node.offsetWidth,\n            height = paper.node.offsetHeight,\n            filter = $(\"filter\");\n        $(filter, {\n            id: id,\n            filterUnits: \"userSpaceOnUse\"\n        });\n        filter.appendChild(f.node);\n        paper.defs.appendChild(filter);\n        return new Element(filter);\n    };\n\n    eve.on(\"snap.util.getattr.filter\", function () {\n        eve.stop();\n        var p = $(this.node, \"filter\");\n        if (p) {\n            var match = Str(p).match(rgurl);\n            return match && Snap.select(match[1]);\n        }\n    });\n    eve.on(\"snap.util.attr.filter\", function (value) {\n        if (value instanceof Element && value.type == \"filter\") {\n            eve.stop();\n            var id = value.node.id;\n            if (!id) {\n                $(value.node, {id: value.id});\n                id = value.id;\n            }\n            $(this.node, {\n                filter: Snap.url(id)\n            });\n        }\n        if (!value || value == \"none\") {\n            eve.stop();\n            this.node.removeAttribute(\"filter\");\n        }\n    });\n    /*\\\n     * Snap.filter.blur\n     [ method ]\n     **\n     * Returns an SVG markup string for the blur filter\n     **\n     - x (number) amount of horizontal blur, in pixels\n     - y (number) #optional amount of vertical blur, in pixels\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.blur(5, 10)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.blur = function (x, y) {\n        if (x == null) {\n            x = 2;\n        }\n        var def = y == null ? x : [x, y];\n        return Snap.format('\\<feGaussianBlur stdDeviation=\"{def}\"/>', {\n            def: def\n        });\n    };\n    Snap.filter.blur.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.shadow\n     [ method ]\n     **\n     * Returns an SVG markup string for the shadow filter\n     **\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - blur (number) #optional amount of blur\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * which makes blur default to `4`. Or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - opacity (number) #optional `0..1` opacity of the shadow\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.shadow(0, 2, .3)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.shadow = function (dx, dy, blur, color, opacity) {\n        if (opacity == null) {\n            if (color == null) {\n                opacity = blur;\n                blur = 4;\n                color = \"#000\";\n            } else {\n                opacity = color;\n                color = blur;\n                blur = 4;\n            }\n        }\n        if (blur == null) {\n            blur = 4;\n        }\n        if (opacity == null) {\n            opacity = 1;\n        }\n        if (dx == null) {\n            dx = 0;\n            dy = 2;\n        }\n        if (dy == null) {\n            dy = dx;\n        }\n        color = Snap.color(color);\n        return Snap.format('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"{blur}\"/><feOffset dx=\"{dx}\" dy=\"{dy}\" result=\"offsetblur\"/><feFlood flood-color=\"{color}\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"{opacity}\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>', {\n            color: color,\n            dx: dx,\n            dy: dy,\n            blur: blur,\n            opacity: opacity\n        });\n    };\n    Snap.filter.shadow.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.grayscale\n     [ method ]\n     **\n     * Returns an SVG markup string for the grayscale filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.grayscale = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0\"/>', {\n            a: 0.2126 + 0.7874 * (1 - amount),\n            b: 0.7152 - 0.7152 * (1 - amount),\n            c: 0.0722 - 0.0722 * (1 - amount),\n            d: 0.2126 - 0.2126 * (1 - amount),\n            e: 0.7152 + 0.2848 * (1 - amount),\n            f: 0.0722 - 0.0722 * (1 - amount),\n            g: 0.2126 - 0.2126 * (1 - amount),\n            h: 0.0722 + 0.9278 * (1 - amount)\n        });\n    };\n    Snap.filter.grayscale.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.sepia\n     [ method ]\n     **\n     * Returns an SVG markup string for the sepia filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.sepia = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0\"/>', {\n            a: 0.393 + 0.607 * (1 - amount),\n            b: 0.769 - 0.769 * (1 - amount),\n            c: 0.189 - 0.189 * (1 - amount),\n            d: 0.349 - 0.349 * (1 - amount),\n            e: 0.686 + 0.314 * (1 - amount),\n            f: 0.168 - 0.168 * (1 - amount),\n            g: 0.272 - 0.272 * (1 - amount),\n            h: 0.534 - 0.534 * (1 - amount),\n            i: 0.131 + 0.869 * (1 - amount)\n        });\n    };\n    Snap.filter.sepia.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.saturate\n     [ method ]\n     **\n     * Returns an SVG markup string for the saturate filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.saturate = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"saturate\" values=\"{amount}\"/>', {\n            amount: 1 - amount\n        });\n    };\n    Snap.filter.saturate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.hueRotate\n     [ method ]\n     **\n     * Returns an SVG markup string for the hue-rotate filter\n     **\n     - angle (number) angle of rotation\n     = (string) filter representation\n    \\*/\n    Snap.filter.hueRotate = function (angle) {\n        angle = angle || 0;\n        return Snap.format('<feColorMatrix type=\"hueRotate\" values=\"{angle}\"/>', {\n            angle: angle\n        });\n    };\n    Snap.filter.hueRotate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.invert\n     [ method ]\n     **\n     * Returns an SVG markup string for the invert filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.invert = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n//        <feColorMatrix type=\"matrix\" values=\"-1 0 0 0 1  0 -1 0 0 1  0 0 -1 0 1  0 0 0 1 0\" color-interpolation-filters=\"sRGB\"/>\n        return Snap.format('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncG type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncB type=\"table\" tableValues=\"{amount} {amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: 1 - amount\n        });\n    };\n    Snap.filter.invert.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.brightness\n     [ method ]\n     **\n     * Returns an SVG markup string for the brightness filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.brightness = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\"/><feFuncG type=\"linear\" slope=\"{amount}\"/><feFuncB type=\"linear\" slope=\"{amount}\"/></feComponentTransfer>', {\n            amount: amount\n        });\n    };\n    Snap.filter.brightness.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.contrast\n     [ method ]\n     **\n     * Returns an SVG markup string for the contrast filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.contrast = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncG type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncB type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: .5 - amount / 2\n        });\n    };\n    Snap.filter.contrast.toString = function () {\n        return this();\n    };\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var box = Snap._.box,\n        is = Snap.is,\n        firstLetter = /^[^a-z]*([tbmlrc])/i,\n        toString = function () {\n            return \"T\" + this.dx + \",\" + this.dy;\n        };\n    /*\\\n     * Element.getAlign\n     [ method ]\n     **\n     * Returns shift needed to align the element relatively to given element.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object|string) Object in format `{dx: , dy: }` also has a string representation as a transformation string\n     > Usage\n     | el.transform(el.getAlign(el2, \"top\"));\n     * or\n     | var dy = el.getAlign(el2, \"top\").dy;\n    \\*/\n    Element.prototype.getAlign = function (el, way) {\n        if (way == null && is(el, \"string\")) {\n            way = el;\n            el = null;\n        }\n        el = el || this.paper;\n        var bx = el.getBBox ? el.getBBox() : box(el),\n            bb = this.getBBox(),\n            out = {};\n        way = way && way.match(firstLetter);\n        way = way ? way[1].toLowerCase() : \"c\";\n        switch (way) {\n            case \"t\":\n                out.dx = 0;\n                out.dy = bx.y - bb.y;\n            break;\n            case \"b\":\n                out.dx = 0;\n                out.dy = bx.y2 - bb.y2;\n            break;\n            case \"m\":\n                out.dx = 0;\n                out.dy = bx.cy - bb.cy;\n            break;\n            case \"l\":\n                out.dx = bx.x - bb.x;\n                out.dy = 0;\n            break;\n            case \"r\":\n                out.dx = bx.x2 - bb.x2;\n                out.dy = 0;\n            break;\n            default:\n                out.dx = bx.cx - bb.cx;\n                out.dy = 0;\n            break;\n        }\n        out.toString = toString;\n        return out;\n    };\n    /*\\\n     * Element.align\n     [ method ]\n     **\n     * Aligns the element relatively to given one via transformation.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object) this element\n     > Usage\n     | el.align(el2, \"top\");\n     * or\n     | el.align(\"middle\");\n    \\*/\n    Element.prototype.align = function (el, way) {\n        return this.transform(\"...\" + this.getAlign(el, way));\n    };\n});\n\n// Copyright (c) 2016 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        has = \"hasOwnProperty\";\n    function slice(from, to, f) {\n        return function (arr) {\n            var res = arr.slice(from, to);\n            if (res.length == 1) {\n                res = res[0];\n            }\n            return f ? f(res) : res;\n        };\n    }\n    var Animation = function (attr, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        this.attr = attr;\n        this.dur = ms;\n        easing && (this.easing = easing);\n        callback && (this.callback = callback);\n    };\n    Snap._.Animation = Animation;\n    /*\\\n     * Snap.animation\n     [ method ]\n     **\n     * Creates an animation object\n     **\n     - attr (object) attributes of final destination\n     - duration (number) duration of the animation, in milliseconds\n     - easing (function) #optional one of easing functions of @mina or custom one\n     - callback (function) #optional callback function that fires when animation ends\n     = (object) animation object\n    \\*/\n    Snap.animation = function (attr, ms, easing, callback) {\n        return new Animation(attr, ms, easing, callback);\n    };\n    /*\\\n     * Element.inAnim\n     [ method ]\n     **\n     * Returns a set of animations that may be able to manipulate the current element\n     **\n     = (object) in format:\n     o {\n     o     anim (object) animation object,\n     o     mina (object) @mina object,\n     o     curStatus (number) 0..1 — status of the animation: 0 — just started, 1 — just finished,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n    \\*/\n    elproto.inAnim = function () {\n        var el = this,\n            res = [];\n        for (var id in el.anims) if (el.anims[has](id)) {\n            (function (a) {\n                res.push({\n                    anim: new Animation(a._attrs, a.dur, a.easing, a._callback),\n                    mina: a,\n                    curStatus: a.status(),\n                    status: function (val) {\n                        return a.status(val);\n                    },\n                    stop: function () {\n                        a.stop();\n                    }\n                });\n            }(el.anims[id]));\n        }\n        return res;\n    };\n    /*\\\n     * Snap.animate\n     [ method ]\n     **\n     * Runs generic animation of one number into another with a caring function\n     **\n     - from (number|array) number or array of numbers\n     - to (number|array) number or array of numbers\n     - setter (function) caring function that accepts one number argument\n     - duration (number) duration, in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function to execute when animation ends\n     = (object) animation object in @mina format\n     o {\n     o     id (string) animation id, consider it read-only,\n     o     duration (function) gets or sets the duration of the animation,\n     o     easing (function) easing,\n     o     speed (function) gets or sets the speed of the animation,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n     | var rect = Snap().rect(0, 0, 10, 10);\n     | Snap.animate(0, 10, function (val) {\n     |     rect.attr({\n     |         x: val\n     |     });\n     | }, 1000);\n     | // in given context is equivalent to\n     | rect.animate({x: 10}, 1000);\n    \\*/\n    Snap.animate = function (from, to, setter, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        var now = mina.time(),\n            anim = mina(from, to, now, now + ms, mina.time, setter, easing);\n        callback && eve.once(\"mina.finish.\" + anim.id, callback);\n        return anim;\n    };\n    /*\\\n     * Element.stop\n     [ method ]\n     **\n     * Stops all the animations for the current element\n     **\n     = (Element) the current element\n    \\*/\n    elproto.stop = function () {\n        var anims = this.inAnim();\n        for (var i = 0, ii = anims.length; i < ii; i++) {\n            anims[i].stop();\n        }\n        return this;\n    };\n    /*\\\n     * Element.animate\n     [ method ]\n     **\n     * Animates the given attributes of the element\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     = (Element) the current element\n    \\*/\n    elproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = attrs.dur;\n            attrs = attrs.attr;\n        }\n        var fkeys = [], tkeys = [], keys = {}, from, to, f, eq,\n            el = this;\n        for (var key in attrs) if (attrs[has](key)) {\n            if (el.equal) {\n                eq = el.equal(key, Str(attrs[key]));\n                from = eq.from;\n                to = eq.to;\n                f = eq.f;\n            } else {\n                from = +el.attr(key);\n                to = +attrs[key];\n            }\n            var len = is(from, \"array\") ? from.length : 1;\n            keys[key] = slice(fkeys.length, fkeys.length + len, f);\n            fkeys = fkeys.concat(from);\n            tkeys = tkeys.concat(to);\n        }\n        var now = mina.time(),\n            anim = mina(fkeys, tkeys, now, now + ms, mina.time, function (val) {\n                var attr = {};\n                for (var key in keys) if (keys[has](key)) {\n                    attr[key] = keys[key](val);\n                }\n                el.attr(attr);\n            }, easing);\n        el.anims[anim.id] = anim;\n        anim._attrs = attrs;\n        anim._callback = callback;\n        eve(\"snap.animcreated.\" + el.id, anim);\n        eve.once(\"mina.finish.\" + anim.id, function () {\n            eve.off(\"mina.*.\" + anim.id);\n            delete el.anims[anim.id];\n            callback && callback.call(el);\n        });\n        eve.once(\"mina.stop.\" + anim.id, function () {\n            eve.off(\"mina.*.\" + anim.id);\n            delete el.anims[anim.id];\n        });\n        return el;\n    };\n});\n\n// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    // Colours are from https://www.materialui.co\n    var red         = \"#ffebee#ffcdd2#ef9a9a#e57373#ef5350#f44336#e53935#d32f2f#c62828#b71c1c#ff8a80#ff5252#ff1744#d50000\",\n        pink        = \"#FCE4EC#F8BBD0#F48FB1#F06292#EC407A#E91E63#D81B60#C2185B#AD1457#880E4F#FF80AB#FF4081#F50057#C51162\",\n        purple      = \"#F3E5F5#E1BEE7#CE93D8#BA68C8#AB47BC#9C27B0#8E24AA#7B1FA2#6A1B9A#4A148C#EA80FC#E040FB#D500F9#AA00FF\",\n        deeppurple  = \"#EDE7F6#D1C4E9#B39DDB#9575CD#7E57C2#673AB7#5E35B1#512DA8#4527A0#311B92#B388FF#7C4DFF#651FFF#6200EA\",\n        indigo      = \"#E8EAF6#C5CAE9#9FA8DA#7986CB#5C6BC0#3F51B5#3949AB#303F9F#283593#1A237E#8C9EFF#536DFE#3D5AFE#304FFE\",\n        blue        = \"#E3F2FD#BBDEFB#90CAF9#64B5F6#64B5F6#2196F3#1E88E5#1976D2#1565C0#0D47A1#82B1FF#448AFF#2979FF#2962FF\",\n        lightblue   = \"#E1F5FE#B3E5FC#81D4FA#4FC3F7#29B6F6#03A9F4#039BE5#0288D1#0277BD#01579B#80D8FF#40C4FF#00B0FF#0091EA\",\n        cyan        = \"#E0F7FA#B2EBF2#80DEEA#4DD0E1#26C6DA#00BCD4#00ACC1#0097A7#00838F#006064#84FFFF#18FFFF#00E5FF#00B8D4\",\n        teal        = \"#E0F2F1#B2DFDB#80CBC4#4DB6AC#26A69A#009688#00897B#00796B#00695C#004D40#A7FFEB#64FFDA#1DE9B6#00BFA5\",\n        green       = \"#E8F5E9#C8E6C9#A5D6A7#81C784#66BB6A#4CAF50#43A047#388E3C#2E7D32#1B5E20#B9F6CA#69F0AE#00E676#00C853\",\n        lightgreen  = \"#F1F8E9#DCEDC8#C5E1A5#AED581#9CCC65#8BC34A#7CB342#689F38#558B2F#33691E#CCFF90#B2FF59#76FF03#64DD17\",\n        lime        = \"#F9FBE7#F0F4C3#E6EE9C#DCE775#D4E157#CDDC39#C0CA33#AFB42B#9E9D24#827717#F4FF81#EEFF41#C6FF00#AEEA00\",\n        yellow      = \"#FFFDE7#FFF9C4#FFF59D#FFF176#FFEE58#FFEB3B#FDD835#FBC02D#F9A825#F57F17#FFFF8D#FFFF00#FFEA00#FFD600\",\n        amber       = \"#FFF8E1#FFECB3#FFE082#FFD54F#FFCA28#FFC107#FFB300#FFA000#FF8F00#FF6F00#FFE57F#FFD740#FFC400#FFAB00\",\n        orange      = \"#FFF3E0#FFE0B2#FFCC80#FFB74D#FFA726#FF9800#FB8C00#F57C00#EF6C00#E65100#FFD180#FFAB40#FF9100#FF6D00\",\n        deeporange  = \"#FBE9E7#FFCCBC#FFAB91#FF8A65#FF7043#FF5722#F4511E#E64A19#D84315#BF360C#FF9E80#FF6E40#FF3D00#DD2C00\",\n        brown       = \"#EFEBE9#D7CCC8#BCAAA4#A1887F#8D6E63#795548#6D4C41#5D4037#4E342E#3E2723\",\n        grey        = \"#FAFAFA#F5F5F5#EEEEEE#E0E0E0#BDBDBD#9E9E9E#757575#616161#424242#212121\",\n        bluegrey    = \"#ECEFF1#CFD8DC#B0BEC5#90A4AE#78909C#607D8B#546E7A#455A64#37474F#263238\";\n    /*\\\n     * Snap.mui\n     [ property ]\n     **\n     * Contain Material UI colours.\n     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.mui.deeppurple, stroke: Snap.mui.amber[600]});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.mui = {};\n    /*\\\n     * Snap.flat\n     [ property ]\n     **\n     * Contain Flat UI colours.\n     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.flat.carrot, stroke: Snap.flat.wetasphalt});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.flat = {};\n    function saveColor(colors) {\n        colors = colors.split(/(?=#)/);\n        var color = new String(colors[5]);\n        color[50] = colors[0];\n        color[100] = colors[1];\n        color[200] = colors[2];\n        color[300] = colors[3];\n        color[400] = colors[4];\n        color[500] = colors[5];\n        color[600] = colors[6];\n        color[700] = colors[7];\n        color[800] = colors[8];\n        color[900] = colors[9];\n        if (colors[10]) {\n            color.A100 = colors[10];\n            color.A200 = colors[11];\n            color.A400 = colors[12];\n            color.A700 = colors[13];\n        }\n        return color;\n    }\n    Snap.mui.red = saveColor(red);\n    Snap.mui.pink = saveColor(pink);\n    Snap.mui.purple = saveColor(purple);\n    Snap.mui.deeppurple = saveColor(deeppurple);\n    Snap.mui.indigo = saveColor(indigo);\n    Snap.mui.blue = saveColor(blue);\n    Snap.mui.lightblue = saveColor(lightblue);\n    Snap.mui.cyan = saveColor(cyan);\n    Snap.mui.teal = saveColor(teal);\n    Snap.mui.green = saveColor(green);\n    Snap.mui.lightgreen = saveColor(lightgreen);\n    Snap.mui.lime = saveColor(lime);\n    Snap.mui.yellow = saveColor(yellow);\n    Snap.mui.amber = saveColor(amber);\n    Snap.mui.orange = saveColor(orange);\n    Snap.mui.deeporange = saveColor(deeporange);\n    Snap.mui.brown = saveColor(brown);\n    Snap.mui.grey = saveColor(grey);\n    Snap.mui.bluegrey = saveColor(bluegrey);\n    Snap.flat.turquoise = \"#1abc9c\";\n    Snap.flat.greensea = \"#16a085\";\n    Snap.flat.sunflower = \"#f1c40f\";\n    Snap.flat.orange = \"#f39c12\";\n    Snap.flat.emerland = \"#2ecc71\";\n    Snap.flat.nephritis = \"#27ae60\";\n    Snap.flat.carrot = \"#e67e22\";\n    Snap.flat.pumpkin = \"#d35400\";\n    Snap.flat.peterriver = \"#3498db\";\n    Snap.flat.belizehole = \"#2980b9\";\n    Snap.flat.alizarin = \"#e74c3c\";\n    Snap.flat.pomegranate = \"#c0392b\";\n    Snap.flat.amethyst = \"#9b59b6\";\n    Snap.flat.wisteria = \"#8e44ad\";\n    Snap.flat.clouds = \"#ecf0f1\";\n    Snap.flat.silver = \"#bdc3c7\";\n    Snap.flat.wetasphalt = \"#34495e\";\n    Snap.flat.midnightblue = \"#2c3e50\";\n    Snap.flat.concrete = \"#95a5a6\";\n    Snap.flat.asbestos = \"#7f8c8d\";\n    /*\\\n     * Snap.importMUIColors\n     [ method ]\n     **\n     * Imports Material UI colours into global object.\n     | Snap.importMUIColors();\n     | Snap().rect(0, 0, 10, 10).attr({fill: deeppurple, stroke: amber[600]});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.importMUIColors = function () {\n        for (var color in Snap.mui) {\n            if (Snap.mui.hasOwnProperty(color)) {\n                window[color] = Snap.mui[color];\n            }\n        }\n    };\n});\n\nmodule.exports = Snap\n","// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// ┌────────────────────────────────────────────────────────────┐ \\\\\n// │ Eve 0.5.4 - JavaScript Events Library                      │ \\\\\n// ├────────────────────────────────────────────────────────────┤ \\\\\n// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\n// └────────────────────────────────────────────────────────────┘ \\\\\n\n(function (glob) {\n    var version = \"0.5.4\",\n        has = \"hasOwnProperty\",\n        separator = /[\\.\\/]/,\n        comaseparator = /\\s*,\\s*/,\n        wildcard = \"*\",\n        numsort = function (a, b) {\n            return a - b;\n        },\n        current_event,\n        stop,\n        events = {n: {}},\n        firstDefined = function () {\n            for (var i = 0, ii = this.length; i < ii; i++) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n        lastDefined = function () {\n            var i = this.length;\n            while (--i) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n        objtos = Object.prototype.toString,\n        Str = String,\n        isArray = Array.isArray || function (ar) {\n            return ar instanceof Array || objtos.call(ar) == \"[object Array]\";\n        },\n    /*\\\n     * eve\n     [ method ]\n\n     * Fires event with given `name`, given scope and other parameters.\n\n     - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\n     - scope (object) context for the event handlers\n     - varargs (...) the rest of arguments will be sent to event handlers\n\n     = (object) array of returned values from the listeners. Array has two methods `.firstDefined()` and `.lastDefined()` to get first or last not `undefined` value.\n    \\*/\n        eve = function (name, scope) {\n            var oldstop = stop,\n                args = Array.prototype.slice.call(arguments, 2),\n                listeners = eve.listeners(name),\n                z = 0,\n                l,\n                indexed = [],\n                queue = {},\n                out = [],\n                ce = current_event;\n            out.firstDefined = firstDefined;\n            out.lastDefined = lastDefined;\n            current_event = name;\n            stop = 0;\n            for (var i = 0, ii = listeners.length; i < ii; i++) if (\"zIndex\" in listeners[i]) {\n                indexed.push(listeners[i].zIndex);\n                if (listeners[i].zIndex < 0) {\n                    queue[listeners[i].zIndex] = listeners[i];\n                }\n            }\n            indexed.sort(numsort);\n            while (indexed[z] < 0) {\n                l = queue[indexed[z++]];\n                out.push(l.apply(scope, args));\n                if (stop) {\n                    stop = oldstop;\n                    return out;\n                }\n            }\n            for (i = 0; i < ii; i++) {\n                l = listeners[i];\n                if (\"zIndex\" in l) {\n                    if (l.zIndex == indexed[z]) {\n                        out.push(l.apply(scope, args));\n                        if (stop) {\n                            break;\n                        }\n                        do {\n                            z++;\n                            l = queue[indexed[z]];\n                            l && out.push(l.apply(scope, args));\n                            if (stop) {\n                                break;\n                            }\n                        } while (l)\n                    } else {\n                        queue[l.zIndex] = l;\n                    }\n                } else {\n                    out.push(l.apply(scope, args));\n                    if (stop) {\n                        break;\n                    }\n                }\n            }\n            stop = oldstop;\n            current_event = ce;\n            return out;\n        };\n    // Undocumented. Debug only.\n    eve._events = events;\n    /*\\\n     * eve.listeners\n     [ method ]\n\n     * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\n\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated\n\n     = (array) array of event handlers\n    \\*/\n    eve.listeners = function (name) {\n        var names = isArray(name) ? name : name.split(separator),\n            e = events,\n            item,\n            items,\n            k,\n            i,\n            ii,\n            j,\n            jj,\n            nes,\n            es = [e],\n            out = [];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            nes = [];\n            for (j = 0, jj = es.length; j < jj; j++) {\n                e = es[j].n;\n                items = [e[names[i]], e[wildcard]];\n                k = 2;\n                while (k--) {\n                    item = items[k];\n                    if (item) {\n                        nes.push(item);\n                        out = out.concat(item.f || []);\n                    }\n                }\n            }\n            es = nes;\n        }\n        return out;\n    };\n    /*\\\n     * eve.separator\n     [ method ]\n\n     * If for some reasons you don’t like default separators (`.` or `/`) you can specify yours\n     * here. Be aware that if you pass a string longer than one character it will be treated as\n     * a list of characters.\n\n     - separator (string) new separator. Empty string resets to default: `.` or `/`.\n    \\*/\n    eve.separator = function (sep) {\n        if (sep) {\n            sep = Str(sep).replace(/(?=[\\.\\^\\]\\[\\-])/g, \"\\\\\");\n            sep = \"[\" + sep + \"]\";\n            separator = new RegExp(sep);\n        } else {\n            separator = /[\\.\\/]/;\n        }\n    };\n    /*\\\n     * eve.on\n     [ method ]\n     **\n     * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\n     | eve.on(\"*.under.*\", f);\n     | eve(\"mouse.under.floor\"); // triggers f\n     * Use @eve to trigger the listener.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     - name (array) if you don’t want to use separators, you can use array of strings\n     - f (function) event handler function\n     **\n     = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment.\n     > Example:\n     | eve.on(\"mouse\", eatIt)(2);\n     | eve.on(\"mouse\", scream);\n     | eve.on(\"mouse\", catchIt)(1);\n     * This will ensure that `catchIt` function will be called before `eatIt`.\n     *\n     * If you want to put your handler before non-indexed handlers, specify a negative value.\n     * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\n    \\*/\n    eve.on = function (name, f) {\n        if (typeof f != \"function\") {\n            return function () {};\n        }\n        var names = isArray(name) ? isArray(name[0]) ? name : [name] : Str(name).split(comaseparator);\n        for (var i = 0, ii = names.length; i < ii; i++) {\n            (function (name) {\n                var names = isArray(name) ? name : Str(name).split(separator),\n                    e = events,\n                    exist;\n                for (var i = 0, ii = names.length; i < ii; i++) {\n                    e = e.n;\n                    e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {n: {}});\n                }\n                e.f = e.f || [];\n                for (i = 0, ii = e.f.length; i < ii; i++) if (e.f[i] == f) {\n                    exist = true;\n                    break;\n                }\n                !exist && e.f.push(f);\n            }(names[i]));\n        }\n        return function (zIndex) {\n            if (+zIndex == +zIndex) {\n                f.zIndex = +zIndex;\n            }\n        };\n    };\n    /*\\\n     * eve.f\n     [ method ]\n     **\n     * Returns function that will fire given event with optional arguments.\n     * Arguments that will be passed to the result function will be also\n     * concated to the list of final arguments.\n     | el.onclick = eve.f(\"click\", 1, 2);\n     | eve.on(\"click\", function (a, b, c) {\n     |     console.log(a, b, c); // 1, 2, [event object]\n     | });\n     - event (string) event name\n     - varargs (…) and any other arguments\n     = (function) possible event handler function\n    \\*/\n    eve.f = function (event) {\n        var attrs = [].slice.call(arguments, 1);\n        return function () {\n            eve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\n        };\n    };\n    /*\\\n     * eve.stop\n     [ method ]\n     **\n     * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\n    \\*/\n    eve.stop = function () {\n        stop = 1;\n    };\n    /*\\\n     * eve.nt\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     - subname (string) #optional subname of the event\n     **\n     = (string) name of the event, if `subname` is not specified\n     * or\n     = (boolean) `true`, if current event’s name contains `subname`\n    \\*/\n    eve.nt = function (subname) {\n        var cur = isArray(current_event) ? current_event.join(\".\") : current_event;\n        if (subname) {\n            return new RegExp(\"(?:\\\\.|\\\\/|^)\" + subname + \"(?:\\\\.|\\\\/|$)\").test(cur);\n        }\n        return cur;\n    };\n    /*\\\n     * eve.nts\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     **\n     = (array) names of the event\n    \\*/\n    eve.nts = function () {\n        return isArray(current_event) ? current_event : current_event.split(separator);\n    };\n    /*\\\n     * eve.off\n     [ method ]\n     **\n     * Removes given function from the list of event listeners assigned to given name.\n     * If no arguments specified all the events will be cleared.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n    \\*/\n    /*\\\n     * eve.unbind\n     [ method ]\n     **\n     * See @eve.off\n    \\*/\n    eve.off = eve.unbind = function (name, f) {\n        if (!name) {\n            eve._events = events = {n: {}};\n            return;\n        }\n        var names = isArray(name) ? isArray(name[0]) ? name : [name] : Str(name).split(comaseparator);\n        if (names.length > 1) {\n            for (var i = 0, ii = names.length; i < ii; i++) {\n                eve.off(names[i], f);\n            }\n            return;\n        }\n        names = isArray(name) ? name : Str(name).split(separator);\n        var e,\n            key,\n            splice,\n            i, ii, j, jj,\n            cur = [events],\n            inodes = [];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            for (j = 0; j < cur.length; j += splice.length - 2) {\n                splice = [j, 1];\n                e = cur[j].n;\n                if (names[i] != wildcard) {\n                    if (e[names[i]]) {\n                        splice.push(e[names[i]]);\n                        inodes.unshift({\n                            n: e,\n                            name: names[i]\n                        });\n                    }\n                } else {\n                    for (key in e) if (e[has](key)) {\n                        splice.push(e[key]);\n                        inodes.unshift({\n                            n: e,\n                            name: key\n                        });\n                    }\n                }\n                cur.splice.apply(cur, splice);\n            }\n        }\n        for (i = 0, ii = cur.length; i < ii; i++) {\n            e = cur[i];\n            while (e.n) {\n                if (f) {\n                    if (e.f) {\n                        for (j = 0, jj = e.f.length; j < jj; j++) if (e.f[j] == f) {\n                            e.f.splice(j, 1);\n                            break;\n                        }\n                        !e.f.length && delete e.f;\n                    }\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        var funcs = e.n[key].f;\n                        for (j = 0, jj = funcs.length; j < jj; j++) if (funcs[j] == f) {\n                            funcs.splice(j, 1);\n                            break;\n                        }\n                        !funcs.length && delete e.n[key].f;\n                    }\n                } else {\n                    delete e.f;\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        delete e.n[key].f;\n                    }\n                }\n                e = e.n;\n            }\n        }\n        // prune inner nodes in path\n        prune: for (i = 0, ii = inodes.length; i < ii; i++) {\n            e = inodes[i];\n            for (key in e.n[e.name].f) {\n                // not empty (has listeners)\n                continue prune;\n            }\n            for (key in e.n[e.name].n) {\n                // not empty (has children)\n                continue prune;\n            }\n            // is empty\n            delete e.n[e.name];\n        }\n    };\n    /*\\\n     * eve.once\n     [ method ]\n     **\n     * Binds given event handler with a given name to only run once then unbind itself.\n     | eve.once(\"login\", f);\n     | eve(\"login\"); // triggers f\n     | eve(\"login\"); // no listeners\n     * Use @eve to trigger the listener.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     = (function) same return function as @eve.on\n    \\*/\n    eve.once = function (name, f) {\n        var f2 = function () {\n            eve.off(name, f2);\n            return f.apply(this, arguments);\n        };\n        return eve.on(name, f2);\n    };\n    /*\\\n     * eve.version\n     [ property (string) ]\n     **\n     * Current version of the library.\n    \\*/\n    eve.version = version;\n    eve.toString = function () {\n        return \"You are running Eve \" + version;\n    };\n    glob.eve = eve;\n    typeof module != \"undefined\" && module.exports ? module.exports = eve : typeof define === \"function\" && define.amd ? define(\"eve\", [], function () { return eve; }) : glob.eve = eve;\n})(typeof window != \"undefined\" ? window : this);\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _snapsvgImporter = require('../snapsvgImporter');\n\nvar _snapsvgImporter2 = _interopRequireDefault(_snapsvgImporter);\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  svg: {\n    lib: _snapsvgImporter2['default'],\n    pathInitial: 'M-7.312,0H0c0,0,0,113.839,0,400c0,264.506,0,400,0,400h-7.312V0z',\n    pathOpen: 'M-7.312,0H15c0,0,66,113.339,66,399.5C81,664.006,15,800,15,800H-7.312V0z;M-7.312,0H100c0,0,0,113.839,0,400c0,264.506,0,400,0,400H-7.312V0z',\n    animate: function animate(path) {\n      var pos = 0;\n      var steps = this.pathOpen.split(';');\n      var stepsTotal = steps.length;\n      var mina = window.mina;\n\n      var nextStep = function nextStep() {\n        if (pos > stepsTotal - 1) return;\n\n        path.animate({ path: steps[pos] }, pos === 0 ? 400 : 500, pos === 0 ? mina.easein : mina.elastic, function () {\n          nextStep();\n        });\n\n        pos++;\n      };\n\n      nextStep();\n    }\n  },\n\n  morphShape: function morphShape(isOpen, width, right) {\n    return {\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      right: right ? 'inherit' : 0,\n      left: right ? 0 : 'inherit',\n      MozTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      MsTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      OTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      WebkitTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      transform: right ? 'rotateY(180deg)' : 'rotateY(0deg)'\n    };\n  },\n\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transition: isOpen ? 'transform 0.4s 0s' : 'transform 0.4s'\n    };\n  },\n\n  menu: function menu(isOpen, width, right) {\n    width -= 140;\n    return {\n      position: 'fixed',\n      MozTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'opacity 0.1s 0.4s cubic-bezier(.17, .67, .1, 1.27), transform 0.1s 0.4s cubic-bezier(.17, .67, .1, 1.27)' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n      opacity: isOpen ? 1 : 0\n    };\n  },\n\n  item: function item(isOpen, width, right, nthChild) {\n    width -= 140;\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'opacity 0.3s 0.4s, transform 0.3s 0.4s' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n      opacity: isOpen ? 1 : 0\n    };\n  },\n\n  closeButton: function closeButton(isOpen, width, right) {\n    width -= 140;\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'opacity 0.3s 0.4s cubic-bezier(.17, .67, .1, 1.27), transform 0.3s 0.4s cubic-bezier(.17, .67, .1, 1.27)' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n      opacity: isOpen ? 1 : 0\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      transformOrigin: right ? '100% 50%' : '0% 50%',\n      transformStyle: 'preserve-3d',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      perspective: '1500px',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width) {\n    return {\n      MozTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      MsTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      OTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      WebkitTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      transform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      transformOrigin: '100%',\n      transformStyle: 'preserve-3d',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer() {\n    return {\n      perspective: '1500px'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      transform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      transformStyle: 'preserve-3d',\n      transition: 'all 0.5s',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      perspective: '1500px',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  menuWrap: function menuWrap(isOpen) {\n    return {\n      MozTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      MsTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      OTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      WebkitTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      transform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      transition: 'all 0.5s ease-in-out'\n    };\n  },\n\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      perspective: '1500px',\n      perspectiveOrigin: '0% 50%',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      visibility: isOpen ? 'visible' : 'hidden',\n      MozTransform: 'translate3d(0, 0, 0)',\n      MsTransform: 'translate3d(0, 0, 0)',\n      OTransform: 'translate3d(0, 0, 0)',\n      WebkitTransform: 'translate3d(0, 0, 0)',\n      transform: 'translate3d(0, 0, 0)',\n      zIndex: 1000\n    };\n  },\n\n  overlay: function overlay(isOpen, width, right) {\n    return {\n      zIndex: 1400,\n      MozTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      MsTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      OTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      WebkitTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transition: 'all 0.5s',\n      visibility: isOpen ? 'visible' : 'hidden'\n    };\n  },\n\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transition: 'all 0.5s',\n      zIndex: 1200,\n      position: 'relative'\n    };\n  },\n\n  burgerIcon: function burgerIcon(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      MsTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      OTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      WebkitTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transition: 'all 0.1s',\n      position: 'relative',\n      zIndex: 1300\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];"],"sourceRoot":""}