{"version":3,"sources":["webpack:///./src/templates/tags.js"],"names":["TagRoute","render","postLinks","this","props","data","allMarkdownRemark","edges","map","post","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","node","fields","slug","className","style","backgroundImage","frontmatter","header","title","date","tag","pageContext","site","siteMetadata","totalCount","_components_Layout__WEBPACK_IMPORTED_MODULE_5__","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","_components_banner__WEBPACK_IMPORTED_MODULE_6__","subCaption","React","Component","tagPageQuery"],"mappings":"oOAMMA,4FACJC,kBACE,IACMC,EADQC,KAAKC,MAAMC,KAAKC,kBAAkBC,MACxBC,IAAI,SAAAC,GAAI,OAC9BC,EAAAC,EAAAC,cAACC,EAAA,KAAD,CAAMC,GAAIL,EAAKM,KAAKC,OAAOC,MACfP,EAAAC,EAAAC,cAAA,OAAKM,UAAU,UAAUC,MAAO,CAACC,gBAAiB,QAAQX,EAAKM,KAAKM,YAAYC,OAAO,OACrFZ,EAAAC,EAAAC,cAAA,OAAKM,UAAU,SACbR,EAAAC,EAAAC,cAAA,UAAKH,EAAKM,KAAKM,YAAYE,OAAYd,EAAKM,KAAKM,YAAYG,UAKzEC,EAAMtB,KAAKC,MAAMsB,YAAYD,IAC7BF,EAAQpB,KAAKC,MAAMC,KAAKsB,KAAKC,aAAaL,MAC7BpB,KAAKC,MAAMC,KAAKC,kBAAkBuB,WAKrD,OACEnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,KAEIpB,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,CAAQY,MAAUE,EAAL,MAAcF,IAC3Bb,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAQC,WAAW,sBAAsBR,GACzCf,EAAAC,EAAAC,cAAA,OAAKM,UAAU,WAEXR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,WACbR,EAAAC,EAAAC,cAACC,EAAA,KAAD,CAAMC,GAAG,QAAQI,UAAU,SAAQR,EAAAC,EAAAC,cAAA,MAAIM,UAAU,SAAd,sBACnCR,EAAAC,EAAAC,cAAA,WACCV,SA7BMgC,IAAMC,WAyCdnC,YAER,IAAMoC,EAAY","file":"component---src-templates-tags-js-da394cf66496b976fc57.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../components/Layout'\nimport Banner from './components/banner'\n\nclass TagRoute extends React.Component {\n  render() {\n    const posts = this.props.data.allMarkdownRemark.edges\n    const postLinks = posts.map(post => (\n      <Link to={post.node.fields.slug}>\n                  <div className=\"listing\" style={{backgroundImage: 'url(\"'+post.node.frontmatter.header+'\")'}}>\n                    <div className=\"glaze\">\n                      <h1>{post.node.frontmatter.title}</h1>{post.node.frontmatter.date}\n                    </div>\n                  </div>\n                </Link>\n    ))\n    const tag = this.props.pageContext.tag\n    const title = this.props.data.site.siteMetadata.title\n    const totalCount = this.props.data.allMarkdownRemark.totalCount\n    const tagHeader = `${totalCount} post${\n      totalCount === 1 ? '' : 's'\n    } tagged with “${tag}”`\n\n    return (\n      <Layout>\n  \n          <Helmet title={`${tag} | ${title}`} />\n          <Banner subCaption=\"Thanks for Reading\">{tag}</Banner>\n          <div className=\"article\">\n  \n              <div className=\"content\">\n                <Link to=\"/blog\" className=\"green\"><h1 className=\"green\">View all Articles</h1></Link>\n                <hr />\n                {postLinks}\n              </div>\n          </div>\n\n\n\n      \n      </Layout>\n    )\n  }\n}\n\nexport default TagRoute\n\nexport const tagPageQuery = graphql`\n  query TagPage($tag: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [frontmatter___title], order: ASC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            header\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}