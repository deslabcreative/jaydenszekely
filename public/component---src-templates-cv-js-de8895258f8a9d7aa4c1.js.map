{"version":3,"sources":["webpack:///./src/templates/cv.js","webpack:///./src/components/Content.js","webpack:///./src/templates/components/split.js","webpack:///./node_modules/core-js/modules/es6.string.link.js","webpack:///./node_modules/core-js/modules/_string-html.js","webpack:///./src/templates/components/Quote.js"],"names":["__webpack_require__","r","__webpack_exports__","d","CvPostTemplate","cvQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2__","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","_components_banner__WEBPACK_IMPORTED_MODULE_3__","_components_Quote__WEBPACK_IMPORTED_MODULE_4__","_components_Layout__WEBPACK_IMPORTED_MODULE_6__","_components_split__WEBPACK_IMPORTED_MODULE_7__","_components_Content__WEBPACK_IMPORTED_MODULE_8__","_ref","content","contentComponent","cvDescription","image","jobDate","title","leftColumn","cvQuote","bigImageOne","bigImageTwo","cvName","cvImage","PostContent","cvLink","Content","a","createElement","background","className","src","alt","quoteContents","recommendedTitle","link","authorName","rightLink","rightImage","propTypes","PropTypes","node","isRequired","func","string","file","helmet","instanceOf","Helmet","CvPost","_ref2","post","data","markdownRemark","html","HTMLContent","frontmatter","tags","shape","object","dangerouslySetInnerHTML","__html","Split","children","authorBio","react__WEBPACK_IMPORTED_MODULE_1___default","href","style","backgroundImage","createHTML","url","this","$export","fails","defined","quot","tag","attribute","value","S","String","p1","replace","module","exports","NAME","exec","O","P","F","test","toLowerCase","split","length","Quote","color"],"mappings":"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","file":"component---src-templates-cv-js-de8895258f8a9d7aa4c1.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n// import { kebabCase } from 'lodash'\nimport Helmet from 'react-helmet'\nimport Banner from './components/banner'\nimport Quote from './components/Quote'\nimport { graphql, Link } from 'gatsby'\nimport Layout from '../components/Layout'\nimport Split from './components/split'\nimport Content, { HTMLContent } from '../components/Content'\n\nexport const CvPostTemplate = ({\n  content,\n  contentComponent,\n  cvDescription,\n  image,\n  title,\n  jobDate,\n  leftColumn,\n  bigImageOne,\n  cvQuote,\n  bigImageTwo,\n  cvName,\n  cvImage,\n  cvLink,\n  \n}) => {\n  const PostContent = contentComponent || Content\n\n  return (\n    <div>\n      \n      <Banner background={cvImage}>\n        {cvName}\n      </Banner>\n      <div className=\"article big-padding\">\n        <div className=\"left\">\n          <h4 className=\"accent\">\n            {jobDate}\n          </h4>\n          {leftColumn}\n        </div>\n        <div className=\"right\">\n          <h5>OVERVIEW</h5>\n          <p>\n            {cvDescription}\n          </p>\n          <br /><br />\n        </div>\n\n      </div>\n      <div className=\"article\">\n      <div className=\"left\">\n          <h4 className=\"accent\">\n            {jobDate}\n          </h4>\n          {leftColumn}\n        </div>\n        <div className=\"right\">\n          <h5>PERSONAL QUALITIES</h5>\n          <p>\n          Loyal, self motivated, goal driven, enthusiastic, creative, problem solver, quick learner, out-of-the-box thinker, excellent communicator, leader, and most importantly - passionate about design.\n          </p>\n          <br /><br />\n        </div>\n      </div>\n      <img src={cvImage} className=\"full\"/>\n      <div className=\"article secondary big-padding\">\n        <div className=\"left\">\n            <h1>Skills:</h1>\n        </div>\n        <div className=\"right\">\n            <ul>\n              <li>\n                Visual / Product Design\n              </li>\n              <li>\n                UI Design / Thinking\n              </li>\n              <li>\n                Front-End Web Development\n              </li>\n              <li>\n                Graphic Design\n              </li>\n              <li>\n                Video Production &amp; Post Production\n              </li>\n              <li>\n                Social Media Management\n              </li>\n              <li>\n                Clear communication\n              </li>\n              <li>\n                Creating clear solutions for clients\n              </li>\n            </ul>\n        </div>\n      </div>\n      <img src={image} alt=\"image\" className=\"full\" />\n      <div className=\"article big-padding\">\n        <Quote quoteContents={cvQuote} />\n      </div>\n      <img src={bigImageTwo} className=\"full\"/>\n      <div className=\"article\">\n        <div className=\"full-cv\">\n          <p>\n            <PostContent content={content}/>\n          </p>\n          <br /><br />\n        </div>\n      </div>\n      <Split background=\"\" recommendedTitle=\"DOWNLOAD MY CV\" link='/work-with-me/cv' authorName=\"VIEW MY PORTFOLIO\" rightLink=\"/cv\" rightImage=\"\" />  \n    </div>\n    \n  )\n}\n\nCvPostTemplate.propTypes = {\n  content: PropTypes.node.isRequired,\n  contentComponent: PropTypes.func,\n  cvDescription: PropTypes.string,\n  image: PropTypes.file,\n  helmet: PropTypes.instanceOf(Helmet),\n  cvName: PropTypes.string,\n  title: PropTypes.string,\n  jobDate: PropTypes.string,\n  bigImageOne: PropTypes.file,\n  cvQuote: PropTypes.string,\n  bigImageTwo: PropTypes.file,\n  leftColumn: PropTypes.string,\n  cvImage: PropTypes.file,\n  cvLink: PropTypes.string,\n}\n\nconst CvPost = ({ data }) => {\n  const { markdownRemark: post } = data\n\n  return (\n    <Layout>\n      <CvPostTemplate\n        content={post.html}\n        contentComponent={HTMLContent}\n        cvDescription={post.frontmatter.cvDescription}\n        helmet={<Helmet title={`${post.frontmatter.cvName} | Jayden Szekely – Creative Solutions and Design located in Whangarei, New Zealand to create the perfect outcomes for you and your business. Web Design, UI Design, Graphic Design, UX Design, Video Editing, Videographer, Designer, Website Builder, CMS, Northland`} />}\n        tags={post.frontmatter.tags}\n        image={post.frontmatter.image}\n        title={post.frontmatter.title}\n        leftColumn={post.frontmatter.leftColumn}\n        jobDate={post.frontmatter.jobDate}\n        bigImageOne={post.frontmatter.bigImageOne}\n        bigImageTwo={post.frontmatter.bigImageTwo}\n        cvQuote={post.frontmatter.cvQuote}\n        cvName={post.frontmatter.cvName}\n        cvImage={post.frontmatter.cvImage}\n        cvLink={post.frontmatter.cvLink}\n      />\n    </Layout>\n  )\n}\n\nCvPost.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.object,\n  }),\n}\n\nexport default CvPost\n\nexport const cvQuery = graphql`\n  query CvPostByID($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      id\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        tags\n        cvDescription,\n        image,\n        title,\n        jobDate,\n        leftColumn,\n        bigImageOne,\n        cvQuote,\n        bigImageTwo,\n        cvName,\n        cvImage,\n        cvLink,\n      }\n    }\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport const HTMLContent = ({ content, className }) => (\n  <div className={className} dangerouslySetInnerHTML={{ __html: content }} />\n)\n\nconst Content = ({ content, className }) => (\n  {content}\n)\n\nContent.propTypes = {\n  content: PropTypes.node,\n  className: PropTypes.string,\n}\n\nHTMLContent.propTypes = Content.propTypes\n\nexport default Content\n","import React from 'react'\n\nconst Split = ({children, background, recommendedTitle, authorName, authorBio, link, rightLink, rightImage}) => (\n    <header className=\"split\">\n        <a href={link} title={recommendedTitle}>\n            <div className=\"left\" style={{backgroundImage: 'url(\"'+background+'\")'}}>\n                <p>\n                    <h3>{recommendedTitle}</h3>\n                </p>\n            </div>\n        </a>\n        <a href={rightLink || \"#\"} title={authorName}>\n            <div className=\"right green-bg\" style={{backgroundImage: 'url(\"'+rightImage+'\")'}}>\n                <p>\n                    <h3>{authorName}</h3>\n                </p>\n            </div>\n        </a>\n    </header>\n)\n\nexport default Split\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","import React from 'react'\n\nconst Quote = ({children, background, quoteContents}) => (\n    <div className=\"full-portfolio\">\n        <center><h1 className=\"accent\">\"</h1>\n          <h2 style={{color: 'black'}}>{quoteContents}\n          </h2>\n          <br /><br />\n          <h1 className=\"accent\">\"</h1>\n\n          </center>\n        </div>\n)\n\nexport default Quote\n"],"sourceRoot":""}